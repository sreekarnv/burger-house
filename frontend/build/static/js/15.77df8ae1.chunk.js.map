{"version":3,"sources":["app/Dashboard/Admin/ManageMenu.js","app/shared/components/Card/CardMenu.js"],"names":["ManageMenu","dispatch","useDispatch","burgers","useSelector","state","burgersInit","user","auth","history","useHistory","useEffect","role","replace","burgerActions","fullScreen","className","map","el","burger","admin","_id","CardMenu","props","addBurger","removeBurger","name","photoUrl","ingredients","price","isVegetarian","slug","itemsInCart","useState","showAlert","setShowAlert","alertType","setAlertType","timer","setTimeout","clearTimeout","route","useRouteMatch","variant","src","alt","i","ingredient","amount","onClick","addItem","removeItem","lg","color","push","path"],"mappings":"sMA2CeA,UAlCI,WAClB,IAAMC,EAAWC,cACXC,EAAUC,aAAY,SAACC,GAAD,OAAWA,EAAMF,QAAQA,WAC/CG,EAAcF,aAAY,SAACC,GAAD,OAAWA,EAAMF,QAAQG,eAEnDC,EAAOH,aAAY,SAACC,GAAD,OAAWA,EAAMG,KAAKD,QACzCE,EAAUC,cAYhB,OAVAC,qBAAU,WACT,GAAIJ,GAAsB,UAAdA,EAAKK,KAChB,OAAOH,EAAQI,QAAQ,gBAEtB,CAACJ,EAASF,IAEbI,qBAAU,WACTV,EAASa,SACP,CAACb,IAEAK,EACI,cAAC,IAAD,CAAQS,YAAU,IAIzB,sBAAKC,UAAU,cAAf,UACC,oBAAIA,UAAU,2BAAd,yBACA,qBAAKA,UAAU,qBAAf,SACEb,EAAQc,KAAI,SAACC,GACb,OAAO,cAAC,IAAD,CAAUC,OAAQD,EAAiBE,OAAK,GAAbF,EAAGG,e,iFC0E3BC,IAxGE,SAACC,GAAW,IACpBJ,EAA2CI,EAA3CJ,OAAQK,EAAmCD,EAAnCC,UAAWC,EAAwBF,EAAxBE,aAAcL,EAAUG,EAAVH,MAExCM,EAOGP,EAPHO,KACAC,EAMGR,EANHQ,SACAC,EAKGT,EALHS,YACAC,EAIGV,EAJHU,MACAC,EAGGX,EAHHW,aACAC,EAEGZ,EAFHY,KACAC,EACGb,EADHa,YAT0B,EAYOC,oBAAS,GAZhB,mBAYpBC,EAZoB,KAYTC,EAZS,OAaOF,qBAbP,mBAapBG,EAboB,KAaTC,EAbS,KAe3B1B,qBAAU,WACT,GAAIuB,EAAW,CACd,IAAII,EAAQC,YAAW,WACtBJ,GAAa,GACbE,EAAa,QACX,KAEH,OAAO,kBAAMG,aAAaF,OAEzB,CAACJ,IAEJ,IAAMO,EAAQC,cACRjC,EAAUC,cAEhB,OACC,qCACEwB,GACA,eAAC,IAAD,CAAOS,QAASP,EAAhB,UACgB,YAAdA,GAA2B,uBACb,WAAdA,GAA0B,8BAG7B,sBAAKpB,UAAU,YAAf,UACC,qBAAKA,UAAU,mBAAf,SACC,qBAAK4B,IAAKjB,EAAUkB,IAAKnB,MAG1B,oBAAIV,UAAU,kBAAd,SAAiCU,IACjC,mBACCV,UAAS,8BACRc,EAAe,iBAAmB,iBAFpC,SAIEA,EAAe,aAAe,mBAEhC,qBAAKd,UAAU,yBAAf,SACEY,EAAYX,KAAI,SAACC,EAAI4B,GACrB,OACC,sBAA2B9B,UAAU,wBAArC,UACC,+BAAOE,EAAG6B,WAAWrB,OADtB,OAEC,0CAAeR,EAAG8B,YAFT9B,EAAGG,IAAH,UAAYyB,SAQzB,oBAAG9B,UAAU,mBAAb,gBAAoCa,MAClCT,GAAyB,IAAhBY,GACV,wBACCiB,QAAS,WACRzB,EAAUL,GACVgB,GAAa,GACbE,EAAa,YAEdrB,UAAU,2CANX,0BAWCI,GAASY,EAAc,GACxB,cAAC,IAAD,CACCkB,QAAS,WACR1B,EAAUL,GACVgB,GAAa,GACbE,EAAa,YAEdc,WAAY,WACX1B,EAAaN,GACbgB,GAAa,GACbE,EAAa,WAEde,IAAE,EACFC,MAAM,eACNrC,UAAU,iBAbX,SAcEgB,IAIFZ,GACA,wBACC6B,QAAS,kBAAMxC,EAAQ6C,KAAR,UAAgBb,EAAMc,KAAtB,YAA8BxB,KAC7Cf,UAAU,2CAFX","file":"static/js/15.77df8ae1.chunk.js","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Loader from \"../../shared/components/Loader/Loader\";\r\n\r\nimport CardMenu from \"./../../shared/components/Card/CardMenu\";\r\n\r\nimport * as burgerActions from \"./../../store/actions/burgerActions\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst ManageMenu = () => {\r\n\tconst dispatch = useDispatch();\r\n\tconst burgers = useSelector((state) => state.burgers.burgers);\r\n\tconst burgersInit = useSelector((state) => state.burgers.burgersInit);\r\n\r\n\tconst user = useSelector((state) => state.auth.user);\r\n\tconst history = useHistory();\r\n\r\n\tuseEffect(() => {\r\n\t\tif (user && user.role !== \"admin\") {\r\n\t\t\treturn history.replace(\"/dashboard\");\r\n\t\t}\r\n\t}, [history, user]);\r\n\r\n\tuseEffect(() => {\r\n\t\tdispatch(burgerActions.getBurgers());\r\n\t}, [dispatch]);\r\n\r\n\tif (burgersInit) {\r\n\t\treturn <Loader fullScreen />;\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className='manage-menu'>\r\n\t\t\t<h3 className='heading-1 u-text-primary'>Manage Menu</h3>\r\n\t\t\t<div className='manage-menu__cards'>\r\n\t\t\t\t{burgers.map((el) => {\r\n\t\t\t\t\treturn <CardMenu burger={el} key={el._id} admin />;\r\n\t\t\t\t})}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default ManageMenu;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useHistory, useRouteMatch } from \"react-router-dom\";\r\n\r\nimport Alert from \"./../Alert/Alert\";\r\nimport AddOrRemoveButton from \"./../Buttons/AddOrRemoveButton\";\r\n\r\nconst CardMenu = (props) => {\r\n\tconst { burger, addBurger, removeBurger, admin } = props;\r\n\tconst {\r\n\t\tname,\r\n\t\tphotoUrl,\r\n\t\tingredients,\r\n\t\tprice,\r\n\t\tisVegetarian,\r\n\t\tslug,\r\n\t\titemsInCart,\r\n\t} = burger;\r\n\r\n\tconst [showAlert, setShowAlert] = useState(false);\r\n\tconst [alertType, setAlertType] = useState();\r\n\r\n\tuseEffect(() => {\r\n\t\tif (showAlert) {\r\n\t\t\tlet timer = setTimeout(() => {\r\n\t\t\t\tsetShowAlert(false);\r\n\t\t\t\tsetAlertType(null);\r\n\t\t\t}, 2000);\r\n\r\n\t\t\treturn () => clearTimeout(timer);\r\n\t\t}\r\n\t}, [showAlert]);\r\n\r\n\tconst route = useRouteMatch();\r\n\tconst history = useHistory();\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{showAlert && (\r\n\t\t\t\t<Alert variant={alertType}>\r\n\t\t\t\t\t{alertType === \"success\" && \"Added Burger To Cart\"}\r\n\t\t\t\t\t{alertType === \"danger\" && \"Removed Burger From Cart\"}\r\n\t\t\t\t</Alert>\r\n\t\t\t)}\r\n\t\t\t<div className='card-menu'>\r\n\t\t\t\t<div className='card-menu__image'>\r\n\t\t\t\t\t<img src={photoUrl} alt={name} />\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<h4 className='card-menu__name'>{name}</h4>\r\n\t\t\t\t<p\r\n\t\t\t\t\tclassName={`card-menu__foodtype ${\r\n\t\t\t\t\t\tisVegetarian ? \"u-text-success\" : \"u-text-danger\"\r\n\t\t\t\t\t}`}>\r\n\t\t\t\t\t{isVegetarian ? \"vegetarian\" : \"non-vegetarian\"}\r\n\t\t\t\t</p>\r\n\t\t\t\t<div className='card-menu__ingredients'>\r\n\t\t\t\t\t{ingredients.map((el, i) => {\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<div key={el._id + `${i}`} className='card-menu__ingredient'>\r\n\t\t\t\t\t\t\t\t<span>{el.ingredient.name}</span>&nbsp;\r\n\t\t\t\t\t\t\t\t<span>X&nbsp; {el.amount}</span>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t})}\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<p className='card-menu__price'>Rs {price}</p>\r\n\t\t\t\t{!admin && itemsInCart === 0 && (\r\n\t\t\t\t\t<button\r\n\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\taddBurger(burger);\r\n\t\t\t\t\t\t\tsetShowAlert(true);\r\n\t\t\t\t\t\t\tsetAlertType(\"success\");\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tclassName='btn btn__primary--outline card-menu__cta'>\r\n\t\t\t\t\t\tadd to cart\r\n\t\t\t\t\t</button>\r\n\t\t\t\t)}\r\n\r\n\t\t\t\t{!admin && itemsInCart > 0 && (\r\n\t\t\t\t\t<AddOrRemoveButton\r\n\t\t\t\t\t\taddItem={() => {\r\n\t\t\t\t\t\t\taddBurger(burger);\r\n\t\t\t\t\t\t\tsetShowAlert(true);\r\n\t\t\t\t\t\t\tsetAlertType(\"success\");\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tremoveItem={() => {\r\n\t\t\t\t\t\t\tremoveBurger(burger);\r\n\t\t\t\t\t\t\tsetShowAlert(true);\r\n\t\t\t\t\t\t\tsetAlertType(\"danger\");\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tlg\r\n\t\t\t\t\t\tcolor='secondary-50'\r\n\t\t\t\t\t\tclassName='card-menu__cta'>\r\n\t\t\t\t\t\t{itemsInCart}\r\n\t\t\t\t\t</AddOrRemoveButton>\r\n\t\t\t\t)}\r\n\r\n\t\t\t\t{admin && (\r\n\t\t\t\t\t<button\r\n\t\t\t\t\t\tonClick={() => history.push(`${route.path}/${slug}`)}\r\n\t\t\t\t\t\tclassName='btn btn__primary--outline card-menu__cta'>\r\n\t\t\t\t\t\tUpdate Burger\r\n\t\t\t\t\t</button>\r\n\t\t\t\t)}\r\n\t\t\t</div>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default CardMenu;\r\n"],"sourceRoot":""}