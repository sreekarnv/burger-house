{"version":3,"sources":["assets/icons/ingredients/lettuce.svg","app/shared/components/Form/SearchForm.js","app/Menu/Menu.js","app/shared/components/Card/CardMenu.js","app/shared/components/Buttons/ToggleSwitch.js"],"names":["SearchForm","props","onSubmit","placeholder","searchValue","setSearchValue","resetForm","reset","className","type","value","onChange","e","target","required","onClick","connect","state","burgers","getNewBurgers","getBurgersInit","getBurgersError","cartValue","cart","newBurgers","dispatch","getBurgers","filter","burgerActions","addBurgerToCart","burger","cartActions","removeBurgerFromCart","history","useHistory","useState","showVeg","setShowVeg","useEffect","length","trim","src","LettuceIcon","alt","ToggleSwitch","onToggle","isVegetarian","active","preventDefault","name","push","map","el","CardMenu","addBurger","removeBurger","id","style","height","Loader","admin","photoUrl","ingredients","price","slug","itemsInCart","showAlert","setShowAlert","alertType","setAlertType","timer","setTimeout","clearTimeout","route","useRouteMatch","variant","i","ingredient","amount","_id","addItem","removeItem","lg","color","path","React","memo"],"mappings":"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","file":"static/js/11.565314a9.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/lettuce.322f2880.svg\";","import React from \"react\";\r\n\r\nconst SearchForm = (props) => {\r\n\tconst {\r\n\t\tonSubmit,\r\n\t\tplaceholder,\r\n\t\tsearchValue,\r\n\t\tsetSearchValue,\r\n\t\tresetForm,\r\n\t\treset,\r\n\t} = props;\r\n\r\n\tconst onChangeHandler = (e) => {\r\n\t\tsetSearchValue(e.target.value);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<form className='search-form' onSubmit={onSubmit}>\r\n\t\t\t<input\r\n\t\t\t\ttype='text'\r\n\t\t\t\tplaceholder={placeholder}\r\n\t\t\t\tvalue={searchValue}\r\n\t\t\t\tonChange={onChangeHandler}\r\n\t\t\t\tclassName='form__input'\r\n\t\t\t\trequired\r\n\t\t\t/>\r\n\r\n\t\t\t<button type='submit' className='btn btn__tertiary'>\r\n\t\t\t\tSearch\r\n\t\t\t</button>\r\n\r\n\t\t\t{reset && (\r\n\t\t\t\t<button\r\n\t\t\t\t\tonClick={resetForm}\r\n\t\t\t\t\ttype='reset'\r\n\t\t\t\t\tclassName='btn btn__secondary u-text-dark'>\r\n\t\t\t\t\tReset\r\n\t\t\t\t</button>\r\n\t\t\t)}\r\n\t\t</form>\r\n\t);\r\n};\r\n\r\nexport default SearchForm;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport CardMenu from \"./../shared/components/Card/CardMenu\";\r\n\r\nimport ToggleSwitch from \"../shared/components/Buttons/ToggleSwitch\";\r\n\r\nimport LettuceIcon from \"./../../assets/icons/ingredients/lettuce.svg\";\r\nimport SearchForm from \"../shared/components/Form/SearchForm\";\r\n\r\nimport * as burgerActions from \"./../store/actions/burgerActions\";\r\nimport * as cartActions from \"./../store/actions/cartActions\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Loader from \"../shared/components/Loader/Loader\";\r\n\r\nconst Menu = (props) => {\r\n\tconst {\r\n\t\tburgers,\r\n\t\tgetBurgers,\r\n\t\tgetBurgersInit,\r\n\t\taddBurgerToCart,\r\n\t\tremoveBurgerFromCart,\r\n\t\tcartValue,\r\n\t\tnewBurgers,\r\n\t\tgetNewBurgers,\r\n\t} = props;\r\n\r\n\tconst history = useHistory();\r\n\r\n\tconst [showVeg, setShowVeg] = useState(false);\r\n\tconst [searchValue, setSearchValue] = useState(\"\");\r\n\r\n\tuseEffect(() => {\r\n\t\tif (cartValue === 0 && burgers.length === 0 && searchValue.trim() === \"\") {\r\n\t\t\tgetBurgers();\r\n\t\t}\r\n\r\n\t\tif (newBurgers.length === 0) {\r\n\t\t\tgetNewBurgers();\r\n\t\t}\r\n\t}, [getBurgers, cartValue, burgers, getNewBurgers, newBurgers, searchValue]);\r\n\r\n\tconst filterVegIngredients = () => {\r\n\t\tlet filter;\r\n\t\tlet showVegState = showVeg;\r\n\r\n\t\tif (!showVegState) {\r\n\t\t\tfilter = { isVegetarian: true };\r\n\t\t\tsetShowVeg(true);\r\n\t\t} else {\r\n\t\t\tsetShowVeg(false);\r\n\t\t}\r\n\r\n\t\tgetBurgers(filter);\r\n\t};\r\n\r\n\tconst onSearchSubmit = (e) => {\r\n\t\te.preventDefault();\r\n\t\tif (searchValue.trim() === \"\") return;\r\n\r\n\t\tlet filter = { name: searchValue };\r\n\r\n\t\tif (showVeg) {\r\n\t\t\tfilter[\"isVegetarian\"] = true;\r\n\t\t}\r\n\r\n\t\tgetBurgers(filter);\r\n\t\tsetSearchValue(\"\");\r\n\t};\r\n\r\n\tconst resetForm = () => {\r\n\t\tgetBurgers();\r\n\t\tsetShowVeg(false);\r\n\t\tsetSearchValue(\"\");\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className='menu'>\r\n\t\t\t<h3 className='menu__heading heading-1 u-text-primary'>Menu</h3>\r\n\t\t\t<div className='menu__subnav'>\r\n\t\t\t\t<div className='menu__subnav-veg-only'>\r\n\t\t\t\t\t<div className='menu__subnav-veg-only-text'>\r\n\t\t\t\t\t\t<img src={LettuceIcon} alt='veg only' />\r\n\t\t\t\t\t\tVegetarian Only\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<ToggleSwitch\r\n\t\t\t\t\t\tonToggle={filterVegIngredients}\r\n\t\t\t\t\t\tactive={showVeg}\r\n\t\t\t\t\t\tclassName={`menu__subnav-veg-only`}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<SearchForm\r\n\t\t\t\t\treset\r\n\t\t\t\t\tplaceholder='Search by name....'\r\n\t\t\t\t\tonSubmit={onSearchSubmit}\r\n\t\t\t\t\tvalue={searchValue}\r\n\t\t\t\t\tsearchValue={searchValue}\r\n\t\t\t\t\tsetSearchValue={setSearchValue}\r\n\t\t\t\t\tresetForm={resetForm}\r\n\t\t\t\t/>\r\n\r\n\t\t\t\t<button\r\n\t\t\t\t\tonClick={() => history.push(\"/make-my-burger\")}\r\n\t\t\t\t\ttype='button'\r\n\t\t\t\t\tclassName='btn u-text-primary menu__subnav-make-burger-cta btn__goto'>\r\n\t\t\t\t\tClick Here! To make your own burger\r\n\t\t\t\t</button>\r\n\t\t\t</div>\r\n\r\n\t\t\t<div className='menu__items'>\r\n\t\t\t\t{!getBurgersInit &&\r\n\t\t\t\t\tburgers.map((el) => {\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<CardMenu\r\n\t\t\t\t\t\t\t\tkey={el.id}\r\n\t\t\t\t\t\t\t\tburger={el}\r\n\t\t\t\t\t\t\t\taddBurger={addBurgerToCart}\r\n\t\t\t\t\t\t\t\tremoveBurger={removeBurgerFromCart}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t})}\r\n\r\n\t\t\t\t{getBurgersInit && (\r\n\t\t\t\t\t<div style={{ height: \"55rem\" }}>\r\n\t\t\t\t\t\t<Loader />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)}\r\n\r\n\t\t\t\t{!getBurgersInit && burgers.length === 0 && (\r\n\t\t\t\t\t<div style={{ height: \"55rem\" }}>\r\n\t\t\t\t\t\t<h3 className='heading-2 u-text-danger'>\r\n\t\t\t\t\t\t\tNo results for your search.\r\n\t\t\t\t\t\t</h3>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n\treturn {\r\n\t\tburgers: state.burgers.burgers,\r\n\t\tgetNewBurgers: state.burgers.getNewBurgers,\r\n\t\tgetBurgersInit: state.burgers.getBurgersInit,\r\n\t\tgetBurgersError: state.burgers.getBurgersError,\r\n\t\tcartValue: state.cart.cartValue,\r\n\t\tnewBurgers: state.burgers.newBurgers,\r\n\t};\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n\treturn {\r\n\t\tgetBurgers: (filter) => dispatch(burgerActions.getBurgers(filter)),\r\n\t\tgetNewBurgers: (filter) => dispatch(burgerActions.getNewBurgers(filter)),\r\n\t\taddBurgerToCart: (burger) => dispatch(cartActions.addBurgerToCart(burger)),\r\n\t\tremoveBurgerFromCart: (burger) =>\r\n\t\t\tdispatch(cartActions.removeBurgerFromCart(burger)),\r\n\t};\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Menu);\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useHistory, useRouteMatch } from \"react-router-dom\";\r\n\r\nimport Alert from \"./../Alert/Alert\";\r\nimport AddOrRemoveButton from \"./../Buttons/AddOrRemoveButton\";\r\n\r\nconst CardMenu = (props) => {\r\n\tconst { burger, addBurger, removeBurger, admin } = props;\r\n\tconst {\r\n\t\tname,\r\n\t\tphotoUrl,\r\n\t\tingredients,\r\n\t\tprice,\r\n\t\tisVegetarian,\r\n\t\tslug,\r\n\t\titemsInCart,\r\n\t} = burger;\r\n\r\n\tconst [showAlert, setShowAlert] = useState(false);\r\n\tconst [alertType, setAlertType] = useState();\r\n\r\n\tuseEffect(() => {\r\n\t\tif (showAlert) {\r\n\t\t\tlet timer = setTimeout(() => {\r\n\t\t\t\tsetShowAlert(false);\r\n\t\t\t\tsetAlertType(null);\r\n\t\t\t}, 2000);\r\n\r\n\t\t\treturn () => clearTimeout(timer);\r\n\t\t}\r\n\t}, [showAlert]);\r\n\r\n\tconst route = useRouteMatch();\r\n\tconst history = useHistory();\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{showAlert && (\r\n\t\t\t\t<Alert variant={alertType}>\r\n\t\t\t\t\t{alertType === \"success\" && \"Added Burger To Cart\"}\r\n\t\t\t\t\t{alertType === \"danger\" && \"Removed Burger From Cart\"}\r\n\t\t\t\t</Alert>\r\n\t\t\t)}\r\n\t\t\t<div className='card-menu'>\r\n\t\t\t\t<div className='card-menu__image'>\r\n\t\t\t\t\t<img src={photoUrl} alt={name} />\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<h4 className='card-menu__name'>{name}</h4>\r\n\t\t\t\t<p\r\n\t\t\t\t\tclassName={`card-menu__foodtype ${\r\n\t\t\t\t\t\tisVegetarian ? \"u-text-success\" : \"u-text-danger\"\r\n\t\t\t\t\t}`}>\r\n\t\t\t\t\t{isVegetarian ? \"vegetarian\" : \"non-vegetarian\"}\r\n\t\t\t\t</p>\r\n\t\t\t\t<div className='card-menu__ingredients'>\r\n\t\t\t\t\t{ingredients.map((el, i) => {\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<div key={el._id + `${i}`} className='card-menu__ingredient'>\r\n\t\t\t\t\t\t\t\t<span>{el.ingredient.name}</span>&nbsp;\r\n\t\t\t\t\t\t\t\t<span>X&nbsp; {el.amount}</span>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t})}\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<p className='card-menu__price'>Rs {price}</p>\r\n\t\t\t\t{!admin && itemsInCart === 0 && (\r\n\t\t\t\t\t<button\r\n\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\taddBurger(burger);\r\n\t\t\t\t\t\t\tsetShowAlert(true);\r\n\t\t\t\t\t\t\tsetAlertType(\"success\");\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tclassName='btn btn__primary--outline card-menu__cta'>\r\n\t\t\t\t\t\tadd to cart\r\n\t\t\t\t\t</button>\r\n\t\t\t\t)}\r\n\r\n\t\t\t\t{!admin && itemsInCart > 0 && (\r\n\t\t\t\t\t<AddOrRemoveButton\r\n\t\t\t\t\t\taddItem={() => {\r\n\t\t\t\t\t\t\taddBurger(burger);\r\n\t\t\t\t\t\t\tsetShowAlert(true);\r\n\t\t\t\t\t\t\tsetAlertType(\"success\");\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tremoveItem={() => {\r\n\t\t\t\t\t\t\tremoveBurger(burger);\r\n\t\t\t\t\t\t\tsetShowAlert(true);\r\n\t\t\t\t\t\t\tsetAlertType(\"danger\");\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tlg\r\n\t\t\t\t\t\tcolor='secondary-50'\r\n\t\t\t\t\t\tclassName='card-menu__cta'>\r\n\t\t\t\t\t\t{itemsInCart}\r\n\t\t\t\t\t</AddOrRemoveButton>\r\n\t\t\t\t)}\r\n\r\n\t\t\t\t{admin && (\r\n\t\t\t\t\t<button\r\n\t\t\t\t\t\tonClick={() => history.push(`${route.path}/${slug}`)}\r\n\t\t\t\t\t\tclassName='btn btn__primary--outline card-menu__cta'>\r\n\t\t\t\t\t\tUpdate Burger\r\n\t\t\t\t\t</button>\r\n\t\t\t\t)}\r\n\t\t\t</div>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default CardMenu;\r\n","import React from \"react\";\r\n\r\nconst ToggleSwitch = React.memo((props) => {\r\n\tconst { onToggle, active } = props;\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<label\r\n\t\t\t\tclassName={`toggle-switch ${active && \"toggle-switch__active\"}`}\r\n\t\t\t\tonClick={onToggle}>\r\n\t\t\t\t<div className='toggle-switch__slider'></div>\r\n\t\t\t</label>\r\n\t\t</>\r\n\t);\r\n});\r\n\r\nexport default ToggleSwitch;\r\n"],"sourceRoot":""}