{"version":3,"sources":["app/Auth/Register.js","app/shared/components/Form/FormInput.js","app/shared/components/Buttons/ToggleSwitch.js"],"names":["connect","state","user","auth","sendEmailInit","registerUserInit","registerUserError","registerUserStatus","dispatch","registerUser","data","actionTypes","props","replace","useHistory","useState","showAlert","setShowAlert","allowLocation","setallowLocation","useEffect","coordinates","location","setLocation","name","type","label","required","value","email","password","passwordConfirm","formState","setformState","navigator","geolocation","getCurrentPosition","res","coords","longitude","latitude","show","variant","message","className","autoComplete","onSubmit","e","preventDefault","Object","keys","forEach","el","map","id","onFormStateChange","active","onToggle","FormInput","htmlFor","onChange","target","files","preview","URL","createObjectURL","style","display","src","alt","placeholder","ToggleSwitch","React","memo","onClick"],"mappings":"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","file":"static/js/9.5ef7c116.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport FormInput from \"../shared/components/Form/FormInput\";\r\nimport Alert from \"../shared/components/Alert/Alert\";\r\n\r\nimport ToggleSwitch from \"./../shared/components/Buttons/ToggleSwitch\";\r\n\r\nimport * as actionTypes from \"./../store/actions/authActions\";\r\n\r\nconst Register = (props) => {\r\n\tconst {\r\n\t\tuser,\r\n\t\tregisterUserInit,\r\n\t\tregisterUser,\r\n\t\tregisterUserError,\r\n\t\tsendEmailInit,\r\n\t\tregisterUserStatus,\r\n\t} = props;\r\n\tconst { replace } = useHistory();\r\n\tconst [showAlert, setShowAlert] = useState(false);\r\n\tconst [allowLocation, setallowLocation] = useState(false);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (user) {\r\n\t\t\treturn replace(\"/menu\");\r\n\t\t}\r\n\t}, [user, replace]);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (registerUserStatus === \"success\") {\r\n\t\t\treturn replace(\"/login\");\r\n\t\t}\r\n\t}, [registerUserStatus, replace]);\r\n\r\n\tconst [location, setLocation] = useState({ coordinates: [] });\r\n\r\n\tconst [formState, setformState] = useState({\r\n\t\tname: {\r\n\t\t\ttype: \"text\",\r\n\t\t\tlabel: \"Name\",\r\n\t\t\trequired: true,\r\n\t\t\tvalue: \"\",\r\n\t\t},\r\n\t\temail: {\r\n\t\t\ttype: \"email\",\r\n\t\t\tlabel: \"Email\",\r\n\t\t\trequired: true,\r\n\t\t\tvalue: \"\",\r\n\t\t},\r\n\t\tpassword: {\r\n\t\t\ttype: \"password\",\r\n\t\t\tlabel: \"Password\",\r\n\t\t\trequired: true,\r\n\t\t\tvalue: \"\",\r\n\t\t},\r\n\t\tpasswordConfirm: {\r\n\t\t\ttype: \"password\",\r\n\t\t\tlabel: \"Password Confirm\",\r\n\t\t\trequired: true,\r\n\t\t\tvalue: \"\",\r\n\t\t},\r\n\t});\r\n\r\n\tconst onFormSubmit = (e) => {\r\n\t\te.preventDefault();\r\n\t\tconst data = {\r\n\t\t\tname: formState.name.value,\r\n\t\t\temail: formState.email.value,\r\n\t\t\tpasswordConfirm: formState.passwordConfirm.value,\r\n\t\t\tpassword: formState.password.value,\r\n\t\t\tlocation,\r\n\t\t};\r\n\t\tregisterUser(data);\r\n\r\n\t\tObject.keys(formState).forEach((el) => {\r\n\t\t\tformState[el].value = \"\";\r\n\t\t});\r\n\r\n\t\tsetLocation({ coordinates: [] });\r\n\t\tsetallowLocation(false);\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tif (allowLocation) {\r\n\t\t\tnavigator.geolocation.getCurrentPosition((res) => {\r\n\t\t\t\tsetLocation({\r\n\t\t\t\t\tcoordinates: [res.coords.longitude, res.coords.latitude],\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t}\r\n\t}, [allowLocation]);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (registerUserError) {\r\n\t\t\tsetShowAlert(true);\r\n\t\t}\r\n\t}, [registerUserError, formState]);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{showAlert && registerUserError && (\r\n\t\t\t\t<Alert show={registerUserError} variant='danger'>\r\n\t\t\t\t\t{registerUserError.message}\r\n\t\t\t\t</Alert>\r\n\t\t\t)}\r\n\t\t\t<section className='auth-form register'>\r\n\t\t\t\t<form\r\n\t\t\t\t\tclassName='auth-form__form'\r\n\t\t\t\t\tautoComplete='off'\r\n\t\t\t\t\tonSubmit={onFormSubmit}>\r\n\t\t\t\t\t<div className='form__group'>\r\n\t\t\t\t\t\t<h2 className='heading-1 u-text-primary u-ftwt-400'>Register</h2>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t{Object.keys(formState).map((el) => {\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<FormInput\r\n\t\t\t\t\t\t\t\tformState={formState}\r\n\t\t\t\t\t\t\t\tkey={el}\r\n\t\t\t\t\t\t\t\tid={el}\r\n\t\t\t\t\t\t\t\tonFormStateChange={setformState}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t})}\r\n\r\n\t\t\t\t\t<div className='form__group'>\r\n\t\t\t\t\t\t<label className='form__label'>\r\n\t\t\t\t\t\t\tAddress (Give access to your location)\r\n\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t<ToggleSwitch\r\n\t\t\t\t\t\t\tactive={allowLocation}\r\n\t\t\t\t\t\t\tonToggle={() => setallowLocation(!allowLocation)}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div className='form__group'>\r\n\t\t\t\t\t\t<button className='btn btn__tertiary auth-form__cta' type='submit'>\r\n\t\t\t\t\t\t\t{registerUserInit || sendEmailInit ? \"Loading...\" : \"Register\"}\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</form>\r\n\t\t\t</section>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n\treturn {\r\n\t\tuser: state.auth.user,\r\n\t\tsendEmailInit: state.auth.sendEmailInit,\r\n\t\tregisterUserInit: state.auth.registerUserInit,\r\n\t\tregisterUserError: state.auth.registerUserError,\r\n\t\tregisterUserStatus: state.auth.registerUserStatus,\r\n\t};\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n\treturn {\r\n\t\tregisterUser: (data) => dispatch(actionTypes.registerUser(data)),\r\n\t};\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Register);\r\n","import React from \"react\";\r\n\r\nconst FormInput = (props) => {\r\n\tconst { id, formState, onFormStateChange } = props;\r\n\r\n\tconst onChangeHandler = (e) => {\r\n\t\tonFormStateChange({\r\n\t\t\t...formState,\r\n\t\t\t[id]: {\r\n\t\t\t\t...formState[id],\r\n\t\t\t\tvalue: e.target.value,\r\n\t\t\t},\r\n\t\t});\r\n\t};\r\n\r\n\tconst onFileChangeHandler = (e) => {\r\n\t\tonFormStateChange({\r\n\t\t\t...formState,\r\n\t\t\t[id]: {\r\n\t\t\t\t...formState[id],\r\n\t\t\t\tvalue: e.target.files[0],\r\n\t\t\t\tpreview: URL.createObjectURL(e.target.files[0]),\r\n\t\t\t},\r\n\t\t});\r\n\t};\r\n\r\n\tif (formState[id].type === \"file\") {\r\n\t\treturn (\r\n\t\t\t<div className='form__group form__group-sb'>\r\n\t\t\t\t<label className='btn btn__goto u-text-tertiary' htmlFor={id}>\r\n\t\t\t\t\tUpload Photo\r\n\t\t\t\t</label>\r\n\t\t\t\t<input\r\n\t\t\t\t\tonChange={onFileChangeHandler}\r\n\t\t\t\t\tname={id}\r\n\t\t\t\t\tid={id}\r\n\t\t\t\t\tstyle={{ display: \"none\" }}\r\n\t\t\t\t\ttype={formState[id].type || \"text\"}\r\n\t\t\t\t/>\r\n\t\t\t\t<div className='form__image'>\r\n\t\t\t\t\t<img src={formState[id].preview} alt={id} />\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className='form__group'>\r\n\t\t\t<label htmlFor={id} className='form__label'>\r\n\t\t\t\t{formState[id].label}\r\n\t\t\t</label>\r\n\t\t\t<input\r\n\t\t\t\tclassName='form__input'\r\n\t\t\t\tvalue={formState[id].value}\r\n\t\t\t\tonChange={onChangeHandler}\r\n\t\t\t\tname={id}\r\n\t\t\t\tid={id}\r\n\t\t\t\tplaceholder={formState[id].placeholder}\r\n\t\t\t\ttype={formState[id].type || \"text\"}\r\n\t\t\t\trequired={formState[id].required}\r\n\t\t\t/>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default FormInput;\r\n","import React from \"react\";\r\n\r\nconst ToggleSwitch = React.memo((props) => {\r\n\tconst { onToggle, active } = props;\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<label\r\n\t\t\t\tclassName={`toggle-switch ${active && \"toggle-switch__active\"}`}\r\n\t\t\t\tonClick={onToggle}>\r\n\t\t\t\t<div className='toggle-switch__slider'></div>\r\n\t\t\t</label>\r\n\t\t</>\r\n\t);\r\n});\r\n\r\nexport default ToggleSwitch;\r\n"],"sourceRoot":""}