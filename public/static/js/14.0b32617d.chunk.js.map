{"version":3,"sources":["app/Pages/DashBoard/components/Map.js","app/Pages/DashBoard/components/OrderDetail.js","app/Shared/hoc/AuthRoutes.js","app/Store/actions/orders.js","app/Shared/Components/List/ListItem.js","app/Pages/DashBoard/components/StatusCard.js"],"names":["Map","getData","a","timeOrder","Date","props","order","createdAt","timeNow","now","centerCoordinates","map","mapboxgl","container","mapContainer","style","center","zoom","scrollZoom","res","status","counter","data","routes","geometry","coordinates","length","x","getDate","y","getMonth","z","getFullYear","b","c","timeNowHrs","parseInt","getHours","toString","timeNowMin","getMinutes","timeOrderHrs","timeOrderMin","onChangeStatusHandler","Marker","setLngLat","user","location","addTo","Popup","offset","setHTML","route","point","on","addSource","addLayer","features","reverse","getSource","setData","accessToken","axios","method","url","this","remove","className","onClick","width","height","ref","el","React","Component","OrderDetail","state","orders","updateOrderStatusAdmin","_id","match","params","id","orderStatus","setState","updatedOrder","onCancelOrder","getOrder","startsWith","history","push","items","isLoading","Loader","AuthRoutes","name","email","heading","value","loggedInUser","role","disabled","path","i","ListItem","key","foodType","Fragment","title","ingredients","el2","amount","connect","getOrderInit","auth","updateOrderStatusAdminStatus","dispatch","orderActions","payload","checkAuthState","children","to","checkAuthInit","authActions","getAllUserOrdersFailed","error","type","actionTypes","getAllUserOrders","get","Object","keys","customOrders","menuOrders","response","createOrdersFailed","createOrders","clearCart","getAllOrdersSuccess","totalOrders","pendingOrders","completedOrders","totalPrice","getAllOrdersFailed","getAllOrders","filter","query","res2","price","updateOrderStatusAdminSuccess","getOrderSuccess","photo","listStyle","StatusCard"],"mappings":"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","file":"static/js/14.0b32617d.chunk.js","sourcesContent":["import React from 'react';\r\nimport axios from 'axios';\r\nimport mapboxgl from 'mapbox-gl';\r\n\r\n\r\nclass Map extends React.Component {\r\n\r\n    async componentDidMount() {\r\n        const accessToken = 'pk.eyJ1Ijoic3JlZWthcm52IiwiYSI6ImNrY2Vsem4xZzA3MmYycG53NDR6eWJidWUifQ.tnWqUEjgrrsKkfuhDzOBJQ'\r\n        mapboxgl.accessToken = accessToken;\r\n\r\n        const res = await axios({\r\n            method: 'GET',\r\n            url: `https://api.mapbox.com/directions/v5/mapbox/driving/${this.props.user.location.coordinates[0]},${this.props.user.location.coordinates[1]};78.267961,17.4126274?geometries=geojson&access_token=${accessToken}`\r\n        })\r\n        this.res = res;\r\n        this.getData();\r\n    }\r\n\r\n    getData = async () => {\r\n        var counter;\r\n        let timeOrder = new Date(this.props.order.createdAt);\r\n        let timeNow = new Date(Date.now())\r\n\r\n        const centerCoordinates = [78.267961, 17.4126274]\r\n\r\n        const map = new mapboxgl.Map({\r\n            container: this.mapContainer,\r\n            style: 'mapbox://styles/sreekarnv/ckg0ssj7j2ia919oflok173f1',\r\n            center: centerCoordinates,\r\n            zoom: 11,\r\n            scrollZoom: false\r\n        });\r\n\r\n        this.map = map;\r\n\r\n\r\n        const res = this.res;\r\n\r\n        if (this.props.order.status === 'cancelled') {\r\n            counter = 0;\r\n        } else\r\n            if (this.props.order.status === 'delivered') {\r\n                counter = res.data.routes[0].geometry.coordinates.length - 1;\r\n            } else {\r\n                let x = timeOrder.getDate()\r\n                let y = timeOrder.getMonth();\r\n                let z = timeOrder.getFullYear();\r\n                let a = timeNow.getDate()\r\n                let b = timeNow.getMonth();\r\n                let c = timeNow.getFullYear();\r\n\r\n                if (x === a && y === b && z === c) {\r\n                    const timeNowHrs = parseInt(timeNow.getHours().toString(), 10)\r\n                    const timeNowMin = parseInt(timeNow.getMinutes().toString(), 10)\r\n                    const timeOrderHrs = parseInt(timeOrder.getHours().toString(), 10);\r\n                    const timeOrderMin = parseInt(timeOrder.getMinutes().toString(), 10);\r\n\r\n                    if (timeNowHrs === timeOrderHrs) {\r\n                        counter = timeNowMin - timeOrderMin\r\n\r\n                    } else if (timeNowHrs > timeOrderHrs) {\r\n                        counter = (timeNowHrs * 60 + timeNowMin) - (timeOrderHrs * 60 + timeOrderMin);\r\n                    }\r\n\r\n                } else {\r\n                    this.props.onChangeStatusHandler();\r\n                }\r\n\r\n\r\n                if (counter > res.data.routes[0].geometry.coordinates.length) {\r\n                    counter = res.data.routes[0].geometry.coordinates.length - 1;\r\n                    this.props.onChangeStatusHandler();\r\n                }\r\n            }\r\n\r\n\r\n\r\n        // // Add the marker\r\n        new mapboxgl.Marker()\r\n            .setLngLat(this.props.user.location.coordinates)\r\n            .addTo(map);\r\n\r\n        new mapboxgl.Marker()\r\n            .setLngLat([78.267961, 17.4126274])\r\n            .addTo(map);\r\n\r\n\r\n        new mapboxgl.Popup({\r\n            offset: 30\r\n        })\r\n            .setLngLat([78.267961, 17.4126274])\r\n            .setHTML(`<p>Burger House</p>`)\r\n            .addTo(map);\r\n\r\n        new mapboxgl.Popup({\r\n            offset: 30\r\n        })\r\n            .setLngLat(this.props.user.location.coordinates)\r\n            .setHTML(`<p>Your Location</p>`)\r\n            .addTo(map);\r\n\r\n\r\n        let route = {\r\n            'type': 'FeatureCollection',\r\n            'features': [\r\n                {\r\n                    'type': 'Feature',\r\n                    'geometry': {\r\n                        'type': 'LineString',\r\n                        'coordinates': [this.props.user.location.coordinates, res.data.routes[0].geometry.coordinates[0]]\r\n                    }\r\n                }\r\n            ]\r\n        };\r\n\r\n        this.route = route\r\n\r\n        let point = {\r\n            'type': 'FeatureCollection',\r\n            'features': [\r\n                {\r\n                    'type': 'Feature',\r\n                    'properties': {},\r\n                    'geometry': {\r\n                        'type': 'Point',\r\n                        'coordinates': this.props.user.location.coordinates\r\n                    }\r\n                }\r\n            ]\r\n        };\r\n\r\n        this.point = point\r\n\r\n        map.on('load', function () {\r\n            map.addSource('route', {\r\n                'type': 'geojson',\r\n                'data': {\r\n                    'type': 'Feature',\r\n                    'properties': {},\r\n                    'geometry': {\r\n                        'type': 'LineString',\r\n                        'coordinates': [\r\n                            ...res.data.routes[0].geometry.coordinates\r\n                        ]\r\n                    }\r\n                }\r\n            });\r\n\r\n            map.addLayer({\r\n                'id': 'route',\r\n                'type': 'line',\r\n                'source': 'route',\r\n                'layout': {\r\n                    'line-join': 'round',\r\n                    'line-cap': 'round'\r\n                },\r\n                'paint': {\r\n                    'line-color': '#0099CC',\r\n                    'line-width': 8\r\n                }\r\n            });\r\n\r\n\r\n\r\n            //////////////////\r\n            map.addSource('route1', {\r\n                'type': 'geojson',\r\n                'data': route\r\n            });\r\n\r\n            map.addSource('point', {\r\n                'type': 'geojson',\r\n                'data': point\r\n            });\r\n\r\n            map.addLayer({\r\n                'id': 'route1',\r\n                'source': 'route',\r\n                'type': 'line',\r\n                'paint': {\r\n                    'line-width': 2,\r\n                    'line-color': 'transparent'\r\n                }\r\n            });\r\n\r\n            map.addLayer({\r\n                'id': 'point',\r\n                'source': 'point',\r\n                'type': 'symbol',\r\n                'layout': {\r\n                    'icon-image': 'car-15',\r\n                    \"icon-size\": 2,\r\n                    'icon-rotate': ['get', 'bearing'],\r\n                    'icon-rotation-alignment': 'map',\r\n                    'icon-allow-overlap': true,\r\n                    'icon-ignore-placement': true\r\n                }\r\n            });\r\n            point.features[0].geometry.coordinates = [...res.data.routes[0].geometry.coordinates].reverse()[counter]\r\n            map.getSource('point').setData(point);\r\n        });\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.map.remove();\r\n    }\r\n\r\n    render() {\r\n\r\n        return <div>\r\n            <button\r\n                className=\"btn btn__tertiary u-mb-2\"\r\n                onClick={this.getData}>Click Here To Update Map</button>\r\n            <div\r\n                className=\"mapContainer\"\r\n                style={{ width: '100%', height: '55vh' }\r\n                }\r\n                ref={el => this.mapContainer = el}\r\n            />\r\n        </div>;\r\n    }\r\n}\r\n\r\n\r\nexport default Map;\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport ListItem from '../../../Shared/Components/List/ListItem';\r\nimport CardStatus from './StatusCard';\r\n\r\nimport * as orderActions from '../../../Store/actions/orders';\r\nimport Loader from '../../../Shared/Components/Loader/Loader';\r\nimport AuthRoutes from '../../../Shared/hoc/AuthRoutes';\r\n\r\nimport Map from './Map';\r\n\r\nclass OrderDetail extends Component {\r\n    state = {\r\n        orders: null,\r\n    }\r\n\r\n    async componentDidMount() {\r\n\r\n        await this.props.getOrder(this.props.match.params.id)\r\n        if (!this.props.order && this.props.match.url.startsWith('/dashboard/manage-orders')) {\r\n            return this.props.history.push('/dashboard/manage-orders')\r\n        } else if (!this.props.order && this.props.match.url.startsWith(`/dashboard/my-orders`)) {\r\n            return this.props.history.push('/dashboard/my-orders')\r\n        }\r\n        else {\r\n            let orders = this.props.order;\r\n            this.setState({ orders })\r\n        }\r\n    }\r\n\r\n    onChangeStatusHandler = async () => {\r\n        let status = 'pending';\r\n        if (this.state.orders.status === 'pending') status = 'delivered'\r\n\r\n        await this.props.updateOrderStatusAdmin(\r\n            { status, _id: this.props.match.params.id }\r\n        )\r\n\r\n        if (this.props.orderStatus === 'success') {\r\n            this.setState({\r\n                orders: {\r\n                    ...this.state.orders,\r\n                    status: this.props.updatedOrder.status\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    onCancelOrder = async () => {\r\n        await this.props.updateOrderStatusAdmin(\r\n            { status: 'cancelled', _id: this.props.match.params.id }\r\n        )\r\n\r\n        if (this.props.orderStatus === 'success') {\r\n            this.setState({\r\n                orders: {\r\n                    ...this.state.orders,\r\n                    status: this.props.updatedOrder.status\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let items = 0;\r\n\r\n        if (this.state.orders) {\r\n            this.state.orders.orders.map(el => items += el.items)\r\n        }\r\n\r\n        if (this.state.isLoading || !this.state.orders) {\r\n            return <div className=\"dashboard__dashboard u-flex-center u-bg-white u-vh-100\">\r\n                <Loader />\r\n            </div>\r\n        }\r\n\r\n        return (\r\n            <AuthRoutes>\r\n                <div className=\"order__details dashboard__dashboard\">\r\n                    <button\r\n                        onClick={() => this.props.history.push(\r\n                            this.props.match.url.startsWith(`/dashboard/my-orders`)\r\n                                ? '/dashboard/my-orders' : '/dashboard/manage-orders'\r\n                        )}\r\n                        className=\"btn  btn__tertiary-back order__details-back-btn\">\r\n                        <span>&larr;</span>Back\r\n                </button>\r\n\r\n                    <h4 className=\"heading-1 order__details-heading\">\r\n                        Order Details\r\n                </h4>\r\n                    <div className=\"order__details-info\">\r\n                        <div>\r\n                            <h2>Order Id: #{this.props.match.params.id}</h2>\r\n                            <h4>{this.state.orders.user.name}</h4>\r\n                            <p>{this.state.orders.user.email}</p>\r\n                        </div>\r\n                        <div className=\"order__details-info-status order__details-info-status--total-orders\">\r\n                            <CardStatus className=\"order__details-info-status-card\"\r\n                                heading=\"Order Status\"\r\n                                value={this.state.orders.status}\r\n                            />\r\n                            {this.props.loggedInUser.role === 'admin' && this.props.match.url.startsWith('/dashboard/manage-orders/') &&\r\n                                <button onClick={this.onChangeStatusHandler} disabled={this.state.orders.status === 'cancelled' ? true : false}\r\n                                    className={`btn btn__success--outline${this.state.orders.status === 'cancelled' ? '-disabled' : ''} `}>\r\n                                    Mark Order as {this.state.orders.status === 'pending' ? 'Delivered' : 'Pending'}\r\n                                </button>}\r\n                            {this.props.match.path === '/dashboard/my-orders/:id' &&\r\n                                <button onClick={this.onCancelOrder}\r\n                                    className={`btn btn__success--outline${this.state.orders.status === 'delivered' || this.state.orders.status === 'cancelled' ? '-disabled' : ''} `} >\r\n                                    Cancel Order\r\n                            </button>\r\n                            }\r\n                        </div>\r\n\r\n                        <CardStatus className=\"order__details-info-status-card\"\r\n                            heading=\"Total Orders\"\r\n                            value={items}\r\n                        />\r\n\r\n                    </div>\r\n\r\n                    <div className=\"order__details-list\">\r\n                        {this.state.orders.orders.map((el, i) => {\r\n                            return (\r\n                                <ListItem key={el._id + i} className={`order__details-list-item u-bg-${el._id.foodType}--opacity-35`}>\r\n                                    <React.Fragment>\r\n                                        <p className=\"order__details-list-item-name\">\r\n                                            {el._id.title} ({el.items})\r\n                                    </p>\r\n                                        <div className=\"order__details-list-item-ings\">\r\n                                            {el._id.ingredients.map(el2 => {\r\n                                                return <p key={el2._id}>{el2._id.name ? el2._id.name : el2.name} ({el2.amount})</p>\r\n                                            })}\r\n                                        </div>\r\n                                    </React.Fragment>\r\n                                </ListItem>\r\n                            )\r\n                        })}\r\n                    </div>\r\n\r\n                    <div className=\"order__details-map\" style={{ height: '100%', width: '100%' }}>\r\n                        <h4 className=\"heading-1 order__details-heading\">\r\n                            Check Your Order Here\r\n                        </h4>\r\n                        <Map user={this.props.user} order={this.props.order} onChangeStatusHandler={this.onChangeStatusHandler} />\r\n                    </div>\r\n                </div >\r\n            </AuthRoutes>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        orders: state.orders.orders,\r\n        getOrderInit: state.orders.getOrderInit,\r\n        order: state.orders.order,\r\n        loggedInUser: state.auth.user,\r\n        orderStatus: state.orders.updateOrderStatusAdminStatus.status,\r\n        updatedOrder: state.orders.updateOrderStatusAdminStatus.order,\r\n        user: state.auth.user\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        getOrder: (id) => dispatch(orderActions.getOrder(id)),\r\n        updateOrderStatusAdmin: (payload) => dispatch(orderActions.updateOrderStatusAdmin(payload))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(OrderDetail);","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nimport * as authActions from '../../Store/actions/auth';\r\nimport { Redirect } from 'react-router';\r\n\r\nclass AuthRoutes extends Component {\r\n    async componentDidMount() {\r\n        await this.props.checkAuthState();\r\n    }\r\n\r\n    render() {\r\n        if (!this.props.user) {\r\n            return <Redirect to=\"/login\" />\r\n        }\r\n\r\n        return this.props.children\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.auth.user,\r\n        checkAuthInit: state.auth.checkAuthInit\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        checkAuthState: () => dispatch(authActions.checkAuth()),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AuthRoutes);","import * as actionTypes from './actions';\r\nimport axios from 'axios';\r\n\r\n\r\n\r\nexport const getAllUserOrdersInit = () => {\r\n    return {\r\n        type: actionTypes.GET_ALL_USER_ORDERS_INIT\r\n    }\r\n}\r\n\r\nexport const getAllUserOrdersSuccess = (orders) => {\r\n    return {\r\n        type: actionTypes.GET_ALL_USER_ORDERS_SUCCESS,\r\n        orders\r\n    }\r\n}\r\n\r\nexport const getAllUserOrdersFailed = error => {\r\n    return {\r\n        type: actionTypes.GET_ALL_USER_ORDERS_FAILED,\r\n        error\r\n    }\r\n}\r\n\r\n\r\nexport const getAllUserOrders = () => {\r\n    return async dispatch => {\r\n        dispatch(getAllUserOrdersInit());\r\n        try {\r\n            const res = await axios.get(`/api/v1/orders/me`)\r\n            let order = Object.keys(res.data.orders).map(el => {\r\n                return {\r\n                    ...res.data.orders[el],\r\n                    orders: [...res.data.orders[el].customOrders, ...res.data.orders[el].menuOrders],\r\n                    customOrders: null,\r\n                    menuOrders: null,\r\n                }\r\n            })\r\n            dispatch(getAllUserOrdersSuccess(order));\r\n        } catch (err) {\r\n            const error = { ...err }.response\r\n            dispatch(getAllUserOrdersFailed(error));\r\n        }\r\n    }\r\n}\r\n//////////////////////////////////////////////////////////////////////////////////////\r\n\r\nexport const createOrdersInit = () => {\r\n    return {\r\n        type: actionTypes.CREATE_ORDER_INIT\r\n    }\r\n}\r\n\r\nexport const createOrdersSuccess = (orders) => {\r\n    return {\r\n        type: actionTypes.CREATE_ORDER_SUCCESS,\r\n        orders\r\n    }\r\n}\r\n\r\nexport const createOrdersFailed = error => {\r\n    return {\r\n        type: actionTypes.CREATE_ORDER_FAILED,\r\n        error\r\n    }\r\n}\r\n\r\nexport const createOrders = (data) => {\r\n    return async dispatch => {\r\n        dispatch(createOrdersInit());\r\n        try {\r\n            const res = await axios({\r\n                method: 'POST',\r\n                url: `/api/v1/orders`,\r\n                data\r\n            })\r\n            dispatch(createOrdersSuccess(res.data.orders))\r\n        } catch (err) {\r\n            const error = { ...err }.response\r\n            dispatch(createOrdersFailed(error));\r\n        }\r\n    }\r\n}\r\n///////////////////////////////////////////////////////////////////////////////\r\nexport const clearCart = () => {\r\n    return {\r\n        type: actionTypes.CLEAR_CART\r\n    }\r\n}\r\n//////////////////////////////////////////////////////////////////////////////////////\r\nexport const getAllOrdersInit = () => {\r\n    return {\r\n        type: actionTypes.GET_ALL_ORDERS_INIT\r\n    }\r\n}\r\n\r\nexport const getAllOrdersSuccess = ({ order, totalOrders, pendingOrders, completedOrders, totalPrice }) => {\r\n    return {\r\n        type: actionTypes.GET_ALL_ORDERS_SUCCESS,\r\n        orders: order,\r\n        totalOrders,\r\n        pendingOrders,\r\n        completedOrders,\r\n        totalPrice\r\n    }\r\n}\r\n\r\nexport const getAllOrdersFailed = error => {\r\n    return {\r\n        type: actionTypes.GET_ALL_ORDERS_FAILED,\r\n        error\r\n    }\r\n}\r\n\r\nexport const getAllOrders = (filter) => {\r\n    return async dispatch => {\r\n        dispatch(getAllOrdersInit());\r\n        try {\r\n            let order = [];\r\n            let query = '', res2;\r\n\r\n            const res = await axios.get(`/api/v1/orders`)\r\n\r\n            if (filter !== 'All Orders') {\r\n                query = `?status=${filter}`\r\n                res2 = await axios.get(`/api/v1/orders${query}`)\r\n\r\n                Object.keys(res2.data.orders).map(el => {\r\n                    order.push({\r\n                        ...res2.data.orders[el],\r\n                        orders: [...res.data.orders[el].customOrders, ...res.data.orders[el].menuOrders],\r\n                        customOrders: null,\r\n                        menuOrders: null,\r\n                    })\r\n                    return order;\r\n                })\r\n\r\n\r\n            }\r\n            let totalOrders = res.data.orders.length;\r\n            let totalPrice = 0;\r\n            let pendingOrders = 0;\r\n            let completedOrders = 0;\r\n\r\n            Object.keys(res.data.orders).map(el => {\r\n                if (res.data.orders[el].status === 'pending') {\r\n                    pendingOrders += 1;\r\n                } else if (res.data.orders[el].status === 'delivered') {\r\n                    completedOrders += 1;\r\n                }\r\n\r\n                if (res.data.orders[el].status !== 'cancelled') totalPrice += res.data.orders[el].price;\r\n\r\n\r\n                if (filter === 'All Orders') {\r\n                    order.push({\r\n                        ...res.data.orders[el],\r\n                        orders: [...res.data.orders[el].customOrders, ...res.data.orders[el].menuOrders],\r\n                        customOrders: null,\r\n                        menuOrders: null,\r\n                    })\r\n                    return order;\r\n                }\r\n                return '';\r\n            })\r\n\r\n\r\n            dispatch(getAllOrdersSuccess({ order, totalOrders, pendingOrders, completedOrders, totalPrice }));\r\n\r\n        } catch (err) {\r\n            const error = { ...err }.response\r\n            dispatch(getAllOrdersFailed(error));\r\n        }\r\n    }\r\n}\r\n///////////////////////////////////////////////////////////////\r\n\r\nexport const updateOrderStatusAdminInit = () => {\r\n    return {\r\n        type: actionTypes.UPDATE_ORDER_ADMIN_STATUS_INIT\r\n    }\r\n}\r\n\r\nexport const updateOrderStatusAdminSuccess = (res) => {\r\n    return {\r\n        type: actionTypes.UPDATE_ORDER_ADMIN_STATUS_SUCCESS,\r\n        response: res\r\n    }\r\n}\r\n\r\nexport const updateOrderStatusAdminFailed = (error) => {\r\n    return {\r\n        type: actionTypes.UPDATE_ORDER_ADMIN_STATUS_FAILED,\r\n        error\r\n    }\r\n}\r\n\r\n\r\nexport const updateOrderStatusAdmin = ({ status, _id }) => {\r\n    return async dispatch => {\r\n        try {\r\n            const res = await axios({\r\n                url: `/api/v1/orders/${_id}`,\r\n                method: 'PATCH',\r\n                data: { status }\r\n            })\r\n            dispatch(updateOrderStatusAdminSuccess(res.data))\r\n        } catch (err) {\r\n            dispatch(updateOrderStatusAdminSuccess(err.response.data))\r\n        }\r\n    }\r\n}\r\n////////////////////////////////////////////////////////////////////////\r\n\r\nexport const getOrderInit = () => {\r\n    return {\r\n        type: actionTypes.GET_ORDER_INIT\r\n    }\r\n}\r\n\r\nexport const getOrderSuccess = (order) => {\r\n    return {\r\n        type: actionTypes.GET_ORDER_SUCCESS,\r\n        order\r\n    }\r\n}\r\n\r\nexport const getOrderFailed = error => {\r\n    return {\r\n        type: actionTypes.GET_ORDER_SUCCESS,\r\n        error\r\n    }\r\n}\r\n\r\n\r\nexport const getOrder = (id) => {\r\n    return async dispatch => {\r\n        dispatch(getOrderInit())\r\n        try {\r\n            const res = await axios({\r\n                url: `/api/v1/orders/${id}`,\r\n                method: 'get',\r\n            })\r\n\r\n            let order;\r\n\r\n            let customOrders = [];\r\n\r\n            res.data.order.customOrders.map(el => {\r\n                customOrders.push({\r\n                    _id: {\r\n                        ingredients: el.ingredients,\r\n                        title: el.name,\r\n                        foodType: el.foodType,\r\n                        _id: el._id,\r\n                        photo: el.photo,\r\n                        price: el.price,\r\n                    },\r\n                    items: parseInt(el.items),\r\n                })\r\n                return customOrders;\r\n            })\r\n\r\n            order = {\r\n                ...res.data.order,\r\n                orders: [...customOrders, ...res.data.order.menuOrders],\r\n                customOrders: null,\r\n                menuOrders: null,\r\n            }\r\n            dispatch(getOrderSuccess(order))\r\n\r\n        } catch (err) {\r\n            dispatch(getOrderFailed(err.response.data))\r\n        }\r\n    }\r\n}\r\n\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst ListItem = props => {\r\n    return (\r\n        <Link to={props.to ? props.to : '#'} className={`list__item ${props.className}`} style={{ listStyle: 'none' }} >\r\n            {props.children}\r\n        </Link>\r\n    )\r\n}\r\n\r\nexport default ListItem\r\n","import React from 'react'\r\n\r\nconst StatusCard = props => {\r\n    return (\r\n        <div className={`card__status ${props.className}`}>\r\n            <h2>{props.heading}</h2>\r\n            <p>{props.value}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default StatusCard\r\n"],"sourceRoot":""}