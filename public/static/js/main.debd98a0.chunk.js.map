{"version":3,"sources":["app/Shared/Components/Loader/Loader.js","app/Store/actions/actions.js","app/Store/actions/auth.js","app/Shared/Components/BackDrop/BackDrop.js","assets/images/user-1.jpg","assets/images/user-2.jpg","assets/icons/burger.svg","app/Shared/Icons/HamburgerMenu.js","app/Shared/hoc/AuthRoutes.js","app/Pages/DashBoard/Layout.js","app/Pages/Error/Error.js","app/Pages/Logout/Logout.js","app/Shared/hoc/UnAuthRoutes.js","app/Layout/Body.js","app/App.js","app/Store/reducers/auth.js","app/Store/reducers/menu.js","app/Store/reducers/burgerBuilder.js","app/Store/reducers/customer.js","app/Store/reducers/cart.js","app/Store/reducers/users.js","app/Store/reducers/orders.js","app/Store/reducers/ingredients.js","app/Store/reducers/rootReducer.js","index.js"],"names":["Loader","className","ADD_INGREDIENT","REMOVE_INGREDIENT","FETCH_INGREDIENTS_INIT","FETCH_INGREDIENTS_SUCCESS","FETCH_INGREDIENTS_FAILED","FETCH_BURGERS_INIT","FETCH_BURGERS_SUCCESS","FETCH_BURGERS_FAILED","CLEAR_INGREDIENT_VALUES","CLEAR_TOTAL_PRICE","INCREMENT_ITEM","DECREMENT_ITEM","REMOVE_ALL_ITEMS","ADD_BURGERS_TO_CART","REGISTER_USER_INIT","REGISTER_USER_SUCCESS","REGISTER_USER_FAILED","LOGIN_USER_INIT","LOGIN_USER_SUCCESS","LOGIN_USER_FAILED","CHECK_AUTH_STATE_INIT","CHECK_AUTH_STATE_SUCCESS","CHECK_AUTH_STATE_FAILED","LOGOUT_USER_INIT","LOGOUT_USER_SUCCESS","LOGOUT_USER_FAILED","GET_ALL_USERS_INIT","GET_ALL_USERS_SUCCESS","GET_ALL_USERS_FAILED","UPDATE_ONE_USER_INIT","UPDATE_ONE_USER_FAILED","GET_ALL_USER_ORDERS_INIT","GET_ALL_USER_ORDERS_SUCCESS","GET_ALL_USER_ORDERS_FAILED","UPDATE_CURRENT_USER_INIT","UPDATE_CURRENT_USER_SUCCESS","UPDATE_CURRENT_USER_FAILED","UPDATE_CURRENT_USER_PASSWORD_INIT","UPDATE_CURRENT_USER_PASSWORD_SUCCESS","UPDATE_CURRENT_USER_PASSWORD_FAILED","DELETE_CURRENT_USER_INIT","DELETE_CURRENT_USER_SUCCESS","DELETE_CURRENT_USER_FAILED","DELETE_ONE_USER_INIT","DELETE_ONE_USER_FAILED","CLEAR_CART","CREATE_ORDER_INIT","CREATE_ORDER_SUCCESS","CREATE_ORDER_FAILED","GET_ALL_ORDERS_INIT","GET_ALL_ORDERS_SUCCESS","GET_ALL_ORDERS_FAILED","UPDATE_ORDER_ADMIN_STATUS_INIT","UPDATE_ORDER_ADMIN_STATUS_SUCCESS","UPDATE_ORDER_ADMIN_STATUS_FAILED","GET_ORDER_INIT","GET_ORDER_SUCCESS","GET_ORDER_FAILED","UPDATE_MENU_REMOVE_INGREDIENT","UPDATE_MENU_ADD_INGREDIENT","SET_MENU_INGREDIENTS","UPDATE_BURGER_SUCCESS","UPDATE_BURGER_FAILED","CREATE_BURGER_INIT","CREATE_BURGER_SUCCESS","CREATE_BURGER_FAILED","DELETE_BURGER_INIT","DELETE_BURGER_SUCCESS","DELETE_BURGER_FAILED","GET_INGREDIENTS_INIT","GET_INGREDIENTS_SUCCESS","GET_INGREDIENTS_FAILED","CREATE_INGREDIENTS_INIT","CREATE_INGREDIENTS_SUCCESS","CREATE_INGREDIENTS_FAILED","UPDATE_INGREDIENT_INIT","UPDATE_INGREDIENT_SUCCESS","UPDATE_INGREDIENT_FAILED","GET_INGREDIENT_INIT","GET_INGREDIENT_SUCCESS","GET_INGREDIENT_FAILED","DELETE_INGREDIENT_INIT","DELETE_INGREDIENT_FAILED","DELETE_INGREDIENT_SUCCESS","checkAuth","dispatch","a","type","actionTypes","axios","get","res","user","data","registerSuccess","response","registerFailed","error","register","method","url","loginSuccess","loginFailed","login","logout","err","updateCurrentUser","updateCurrentUserPassword","updateCurrentUserPasswordSuccess","deleteCurrentUser","backDrop","props","show","onClick","close","module","exports","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","_ref2","createElement","id","d","_ref","svgRef","title","enableBackground","height","viewBox","width","ref","ForwardRef","forwardRef","HamburgerMenu","AuthRoutes","checkAuthState","checkAuthInit","match","startsWith","children","to","Component","connect","state","auth","authActions","Sidebar","lazy","CurrentUserOrders","Profile","Users","UserOrders","UpdateBurgerDetail","UpdateBurgerList","CreateBurger","OrderDetail","Ingredients","IngredientsForm","Layout","showSideBar","sidebarShowHandler","setState","sidebarCloseHandler","role","history","push","Fragment","closeSidebar","path","exact","component","Error","goBack","Logout","replace","logoutInit","UnAuthRoutes","Menu","Cart","CustomBurger","About","Register","Login","Home","Body","loading","fallback","Dashboard","Header","Footer","App","initialState","registerInit","registerStatus","loginStatus","loginInit","updateUserDataInit","updateUserDataStatus","updateUserPasswordInit","updateUserPasswordStatus","deleteUserInit","deleteUserStatus","checkAuthStateInit","action","checkAuthSuccess","userPhoto","photo","checkAuthStateFailed","status","logoutSuccess","logoutFailed","updateUserDataSuccess","updateUserDataFailed","updateUserPasswordSuccess","updateUserPasswordFailed","deleteCurrentUserInit","deleteCurrentUserSuccess","deleteCurrentUserFailed","reducer","Burgers","updateBurgers","ingredientsInit","ingredients","menuIngs","totalBurgerPrice","updateBurgersStatus","createBurgerInit","createBurgerStatus","deleteBurgerInit","deleteBurgerStatus","fetchBurgersSuccess","burgers","map","el","x","totalPrice","items","fetchBurgersFailed","message","fetchBurgersInit","fetchIngredientsInit","fetchIngredientsSuccess","ings","name","value","fetchIngredientsFailed","addIngredient","removeIngredient","setMenuIngredients","updateMenuBurgerSuccess","updateMenuBurgerFailed","createBurgerSuccess","createBurgerFailed","deleteBurgerFailed","deleteBurgerSuccess","ingredientsLoading","console","log","forEach","price","clearIngredientValues","cleartotalPrice","reviews","Sarah","img","userImage1","rating","comment","Paul","userImage2","cart","removeItemFromCart","burgerObj","undefined","incrementItem","initialprice","decrementItem","addBurgersToCart","Burger","includes","clearCart","getUsersInit","getUsersStatus","updateUserInit","updateUserStatus","users","getAllUsersInit","getAllUsersSuccess","getAllUsersFailed","updateUserFailed","deleteUserFailed","userOrders","orders","order","getOrderStatus","getOrderInit","totalOrdersPrice","totalOrders","totalCompletedOrders","totalPendingOrders","totalCancelledOrders","getUserOrdersStatus","getUserOrdersInit","createUserOrderInit","createUserOrderStatus","getOrdersInit","getOrdersStatus","updateOrderStatusAdminInit","updateOrderStatusAdminStatus","createOrderInit","createOrderSuccess","createOrderFailed","getUserOrdersSuccess","getUserOrdersFailed","getAllOrdersInit","getAllOrdersSuccess","completedOrders","pendingOrders","getOrdersFailed","getOrderSuccess","getAllOrdersFailed","updateOrderStatusAdminSuccess","updateOrderStatusAdminFailed","ingredient","getAllIngredientsStatus","getAllIngredientsInit","updateIngredientInit","updateIngredientStatus","getIngredientStatus","getIngredientInit","createIngredientsStatus","createIngredientsInit","deleteIngredientStatus","deleteIngredientInit","getAllIngredientsFailed","getAllIngredientsSuccess","getIngredientFailed","getIngredientSuccess","createIngredientsFailed","createIngredientsSuccess","updateIngredientsStatus","updateIngredientsInit","updateIngredientFailed","updateIngredientSuccess","deleteIngredientFailed","deleteIngredientSuccess","combineReducers","menu","menuReducer","customer","customerReducer","burgerBuilder","burgerBuilderReducer","cartReducer","authReducer","userReducer","orderReducer","ingredientReducer","composeEnhancers","compose","store","createStore","applyMiddleware","thunk","app","StrictMode","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.debd98a0.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Loader = () => {\r\n    return <div className=\"loader\"\r\n    >Loading...</div>\r\n}\r\n\r\nexport default Loader\r\n","// get user reviews\r\nexport const DISPLAY_USER_REVIEW = 'DISPLAY_USER_REVIEW';\r\n\r\n// Add Ingredient\r\nexport const ADD_INGREDIENT = 'ADD_INGREDIENT';\r\nexport const REMOVE_INGREDIENT = 'REMOVE_INGREDIENT';\r\n\r\n///////////////////////////////////////////////////////////////////////////\r\n// BURGER BUILDER\r\n\r\n// fetch Ingredients\r\nexport const FETCH_INGREDIENTS_INIT = 'FETCH_INGREDIENTS_INIT';\r\nexport const FETCH_INGREDIENTS_SUCCESS = 'FETCH_INGREDIENTS_SUCCESS';\r\nexport const FETCH_INGREDIENTS_FAILED = 'FETCH_INGREDIENTS_FAILED';\r\n\r\n\r\n// fetch burgers\r\n\r\nexport const FETCH_BURGERS_INIT = 'FETCH_BURGERS_INIT';\r\nexport const FETCH_BURGERS_SUCCESS = 'FETCH_BURGERS_SUCCESS';\r\nexport const FETCH_BURGERS_FAILED = 'FETCH_BURGERS_FAILED';\r\n\r\n\r\n// Clear ingredient values after adding burger to cart\r\nexport const CLEAR_INGREDIENT_VALUES = 'CLEAR_INGREDIENT_VALUES';\r\n\r\n// Clear total price after adding burger to cart\r\nexport const CLEAR_TOTAL_PRICE = 'CLEAR_TOTAL_PRICE';\r\n\r\n///////////////////////////////////////////////////////////////////////////////////\r\n// CART action\r\n\r\n// Increment item in cart\r\nexport const INCREMENT_ITEM = 'INCREMENT_ITEM';\r\n\r\n// decrement item in cart\r\nexport const DECREMENT_ITEM = 'DECREMENT_ITEM';\r\n\r\n// delete all burgers in cart\r\nexport const REMOVE_ALL_ITEMS = 'REMOVE_ALL_ITEMS';\r\n\r\n// Push a burger to cart\r\nexport const ADD_BURGERS_TO_CART = 'ADD_BURGERS_TO_CART';\r\n///////////////////////////////////////////////////////////////////////////////////\r\n// AUTH\r\n// Registering Users\r\nexport const REGISTER_USER_INIT = 'REGISTER_USER_INIT';\r\nexport const REGISTER_USER_SUCCESS = 'REGISTER_USER_SUCCESS';\r\nexport const REGISTER_USER_FAILED = 'REGISTER_USER_FAILED';\r\n\r\n// Logging in Users\r\nexport const LOGIN_USER_INIT = 'LOGIN_USER_INIT';\r\nexport const LOGIN_USER_SUCCESS = 'LOGIN_USER_SUCCESS';\r\nexport const LOGIN_USER_FAILED = 'LOGIN_USER_FAILED';\r\n\r\n// Check for logged in user\r\nexport const CHECK_AUTH_STATE_INIT = 'CHECK_AUTH_STATE_INIT';\r\nexport const CHECK_AUTH_STATE_SUCCESS = 'CHECK_AUTH_STATE_SUCCESS';\r\nexport const CHECK_AUTH_STATE_FAILED = 'CHECK_AUTH_STATE_FAILED';\r\n\r\n// Logout a user\r\nexport const LOGOUT_USER_INIT = 'LOGOUT_USER_INIT';\r\nexport const LOGOUT_USER_SUCCESS = 'LOGOUT_USER_SUCCESS';\r\nexport const LOGOUT_USER_FAILED = 'LOGOUT_USER_FAILED';\r\n\r\n\r\n//////////////////////////////////////////////////////////////////////////////////////\r\n// USERS\r\n\r\n// get all users\r\nexport const GET_ALL_USERS_INIT = 'GET_ALL_USERS_INIT';\r\nexport const GET_ALL_USERS_SUCCESS = 'GET_ALL_USERS_SUCCESS';\r\nexport const GET_ALL_USERS_FAILED = 'GET_ALL_USERS_FAILED';\r\n\r\n// update role of a user\r\nexport const UPDATE_ONE_USER_INIT = 'UPDATE_ONE_USER_INIT';\r\nexport const UPDATE_ONE_USER_FAILED = 'UPDATE_ONE_USER_FAILED'\r\n\r\n/////////////////////////////////////////////////////////////////////////////////////\r\n// CURRENT USER\r\n// get all orders of a user\r\nexport const GET_ALL_USER_ORDERS_INIT = 'GET_ALL_USER_ORDERS_INIT';\r\nexport const GET_ALL_USER_ORDERS_SUCCESS = 'GET_ALL_USER_ORDERS_SUCCESS';\r\nexport const GET_ALL_USER_ORDERS_FAILED = 'GET_ALL_USER_ORDERS_FAILED';\r\n\r\n// update current user data\r\nexport const UPDATE_CURRENT_USER_INIT = 'UPDATE_CURRENT_USER_INIT';\r\nexport const UPDATE_CURRENT_USER_SUCCESS = 'UPDATE_CURRENT_USER_SUCCESS';\r\nexport const UPDATE_CURRENT_USER_FAILED = 'UPDATE_CURRENT_USER_FAILED';\r\n\r\n// update current user password\r\nexport const UPDATE_CURRENT_USER_PASSWORD_INIT = 'UPDATE_CURRENT_USER_PASSWORD_INIT';\r\nexport const UPDATE_CURRENT_USER_PASSWORD_SUCCESS = 'UPDATE_CURRENT_USER_PASSWORD_SUCCESS';\r\nexport const UPDATE_CURRENT_USER_PASSWORD_FAILED = 'UPDATE_CURRENT_USER_PASSWORD_FAILED';\r\n\r\n//delete current user\r\nexport const DELETE_CURRENT_USER_INIT = 'DELETE_CURRENT_USER_INIT';\r\nexport const DELETE_CURRENT_USER_SUCCESS = 'DELETE_CURRENT_USER_SUCCESS';\r\nexport const DELETE_CURRENT_USER_FAILED = 'DELETE_CURRENT_USER_FAILED';\r\n\r\n\r\n// delete a user\r\nexport const DELETE_ONE_USER_INIT = 'DELETE_ONE_USER_INIT';\r\nexport const DELETE_ONE_USER_FAILED = 'DELETE_ONE_USER_FAILED';\r\n/////////////////////////////////////////////////////////////////////////////////////////////////\r\n// ORDERS\r\n// clear cart \r\nexport const CLEAR_CART = 'CLEAR_CART';\r\n\r\n// place a new order\r\nexport const CREATE_ORDER_INIT = 'CREATE_ORDER_INIT';\r\nexport const CREATE_ORDER_SUCCESS = 'CREATE_ORDER_SUCCESS';\r\nexport const CREATE_ORDER_FAILED = 'CREATE_ORDER_FAILED';\r\n\r\n// get all orders of all users\r\nexport const GET_ALL_ORDERS_INIT = 'GET_ALL_ORDERS_INIT';\r\nexport const GET_ALL_ORDERS_SUCCESS = 'GET_ALL_ORDERS_SUCCESS';\r\nexport const GET_ALL_ORDERS_FAILED = 'GET_ALL_ORDERS_FAILED';\r\n\r\n// Update Order Status ADMIN\r\n\r\nexport const UPDATE_ORDER_ADMIN_STATUS_INIT = 'UPDATE_ORDER_ADMIN_STATUS_INIT'\r\nexport const UPDATE_ORDER_ADMIN_STATUS_SUCCESS = 'UPDATE_ORDER_ADMIN_STATUS_SUCCESS'\r\nexport const UPDATE_ORDER_ADMIN_STATUS_FAILED = 'UPDATE_ORDER_ADMIN_STATUS_FAILED'\r\n\r\n\r\n// Get Single Order\r\n\r\nexport const GET_ORDER_INIT = 'GET_ORDER_INIT'\r\nexport const GET_ORDER_SUCCESS = 'GET_ORDER_SUCCESS'\r\nexport const GET_ORDER_FAILED = 'GET_ORDER_FAILED'\r\n\r\n////////////////////////////////////////////////////////////////////////////////////\r\n// UPDATE MENU\r\n\r\n// ingredients while updating or creating a burger\r\nexport const UPDATE_MENU_REMOVE_INGREDIENT = 'UPDATE_MENU_REMOVE_INGREDIENT';\r\nexport const UPDATE_MENU_ADD_INGREDIENT = 'UPDATE_MENU_ADD_INGREDIENT';\r\n\r\n// set ingredients while updating or creating a burger\r\nexport const SET_MENU_INGREDIENTS = 'SET_MENU_INGREDIENTS';\r\n\r\n// update a burger\r\nexport const UPDATE_BURGER_INIT = 'UPDATE_BURGER_INIT';\r\nexport const UPDATE_BURGER_SUCCESS = 'UPDATE_BURGER_SUCCESS';\r\nexport const UPDATE_BURGER_FAILED = 'UPDATE_BURGER_FAILED';\r\n\r\n// create a new burger\r\nexport const CREATE_BURGER_INIT = 'CREATE_BURGER_INIT';\r\nexport const CREATE_BURGER_SUCCESS = 'CREATE_BURGER_SUCCESS';\r\nexport const CREATE_BURGER_FAILED = 'CREATE_BURGER_FAILED';\r\n\r\n\r\n// delete a burger\r\nexport const DELETE_BURGER_INIT = 'DELETE_BURGER_INIT';\r\nexport const DELETE_BURGER_SUCCESS = 'DELETE_BURGER_SUCCESS';\r\nexport const DELETE_BURGER_FAILED = 'DELTE_BURGER_FAILED';\r\n\r\n///////////////////////////////////////////////////////////////////////////////////\r\n// INGREDIENTS\r\n\r\n// get ingredients\r\n\r\nexport const GET_INGREDIENTS_INIT = 'GET_INGREDIENTS_INIT';\r\nexport const GET_INGREDIENTS_SUCCESS = 'GET_INGREDIENTS_SUCCESS';\r\nexport const GET_INGREDIENTS_FAILED = 'GET_INGREDIENTS_FAILED';\r\n\r\n\r\n// create ingredients\r\n\r\nexport const CREATE_INGREDIENTS_INIT = 'CREATE_INGREDIENTS_INIT'\r\nexport const CREATE_INGREDIENTS_SUCCESS = 'CREATE_INGREDIENTS_SUCCESS'\r\nexport const CREATE_INGREDIENTS_FAILED = 'CREATE_INGREDIENTS_FAILED'\r\n\r\n// update ingredients\r\n\r\nexport const UPDATE_INGREDIENT_INIT = 'UPDATE_INGREDIENT_INIT'\r\nexport const UPDATE_INGREDIENT_SUCCESS = 'UPDATE_INGREDIENT_SUCCESS'\r\nexport const UPDATE_INGREDIENT_FAILED = 'UPDATE_INGREDIENT_FAILED'\r\n\r\n\r\n// get ingredient\r\n\r\nexport const GET_INGREDIENT_INIT = 'GET_INGREDIENT_INIT';\r\nexport const GET_INGREDIENT_SUCCESS = 'GET_INGREDIENT_SUCCESS';\r\nexport const GET_INGREDIENT_FAILED = 'GET_INGREDIENT_FAILED';\r\n\r\n// delete Ingredient\r\n\r\nexport const DELETE_INGREDIENT_INIT = 'DELETE_INGREDIENT_INIT'\r\nexport const DELETE_INGREDIENT_FAILED = 'DELETE_INGREDIENT_FAILED'\r\nexport const DELETE_INGREDIENT_SUCCESS = 'DELETE_INGREDIENT_SUCCESS'","import * as actionTypes from './actions';\r\nimport axios from 'axios';\r\n\r\n\r\n/////////////////////////////////////////////////////////////////////////////////////\r\n\r\nexport const checkAuthInit = () => {\r\n    return {\r\n        type: actionTypes.CHECK_AUTH_STATE_INIT,\r\n    }\r\n}\r\n\r\n\r\nexport const checkAuthSuccess = user => {\r\n    return {\r\n        type: actionTypes.CHECK_AUTH_STATE_SUCCESS,\r\n        user\r\n    }\r\n}\r\n\r\nexport const checkAuthFailed = () => {\r\n    return {\r\n        type: actionTypes.CHECK_AUTH_STATE_FAILED,\r\n    }\r\n}\r\n\r\nexport const checkAuth = () => {\r\n    return async dispatch => {\r\n        dispatch(checkAuthInit());\r\n        try {\r\n            let res = await axios.get(`/api/v1/users/checkAuth`)\r\n            dispatch(checkAuthSuccess(res.data.user))\r\n        } catch (err) {\r\n            dispatch(checkAuthFailed(err));\r\n        }\r\n    }\r\n}\r\n\r\n\r\n////////////////////////////////////////////////////////////////////////////////////////\r\n// REGISTER USER\r\n\r\nexport const registerInit = () => {\r\n    return {\r\n        type: actionTypes.REGISTER_USER_INIT\r\n    }\r\n}\r\n\r\nexport const registerSuccess = res => {\r\n    return {\r\n        type: actionTypes.REGISTER_USER_SUCCESS,\r\n        response: res\r\n    }\r\n}\r\n\r\n\r\nexport const registerFailed = error => {\r\n    return {\r\n        type: actionTypes.REGISTER_USER_FAILED,\r\n        error\r\n    }\r\n}\r\n\r\nexport const register = (data) => {\r\n    return async dispatch => {\r\n        dispatch(registerInit());\r\n        try {\r\n            const res = await axios({\r\n                method: 'POST',\r\n                url: `/api/v1/users/register`,\r\n                data\r\n            })\r\n            dispatch(registerSuccess(res))\r\n        } catch (err) {\r\n            let error = { ...err }.response ? { ...err }.response : err;\r\n            dispatch(registerFailed(error))\r\n        }\r\n    }\r\n}\r\n\r\n//////////////////////////////////////////////////////////////////////\r\n// LOGIN USER\r\n\r\n\r\nexport const loginInit = () => {\r\n    return {\r\n        type: actionTypes.LOGIN_USER_INIT\r\n    }\r\n}\r\n\r\nexport const loginSuccess = res => {\r\n    return {\r\n        type: actionTypes.LOGIN_USER_SUCCESS,\r\n        response: res\r\n    }\r\n}\r\n\r\n\r\nexport const loginFailed = error => {\r\n    return {\r\n        type: actionTypes.LOGIN_USER_FAILED,\r\n        error\r\n    }\r\n}\r\n\r\nexport const login = (data) => {\r\n    return async dispatch => {\r\n        dispatch(loginInit());\r\n        try {\r\n            const res = await axios({\r\n                method: 'POST',\r\n                url: `/api/v1/users/login`,\r\n                data\r\n            })\r\n            dispatch(loginSuccess(res.data))\r\n        } catch (err) {\r\n            let error = { ...err }.response ? { ...err }.response.data : err;\r\n            dispatch(loginFailed(error))\r\n        }\r\n    }\r\n}\r\n/////////////////////////////////////////////////////////////////////////\r\n// LOGOUT USER\r\n\r\nexport const logoutInit = () => {\r\n    return {\r\n        type: actionTypes.LOGOUT_USER_INIT\r\n    }\r\n}\r\n\r\nexport const logoutSuccess = () => {\r\n    return {\r\n        type: actionTypes.LOGOUT_USER_SUCCESS,\r\n        user: null\r\n    }\r\n}\r\n\r\n\r\nexport const logoutFailed = err => {\r\n    return {\r\n        type: actionTypes.LOGOUT_USER_FAILED,\r\n        error: err\r\n    }\r\n}\r\n\r\nexport const logout = () => {\r\n    return async dispatch => {\r\n        dispatch(logoutInit());\r\n        try {\r\n            await axios.get(`/api/v1/users/logout`)\r\n            dispatch(logoutSuccess());\r\n        } catch (err) {\r\n            let error = { ...err }.response ? { ...err }.response.data : err\r\n            dispatch(logoutFailed(error))\r\n        }\r\n    }\r\n}\r\n\r\n//////////////////////////////////////////////////////////////////////////////\r\n// UPDATE CURRENT USER DATA\r\n\r\n\r\nexport const updateCurrentUserInit = () => {\r\n    return {\r\n        type: actionTypes.UPDATE_CURRENT_USER_INIT\r\n    }\r\n}\r\n\r\nexport const updateCurrentUserSuccess = user => {\r\n    return {\r\n        type: actionTypes.UPDATE_CURRENT_USER_SUCCESS,\r\n        user\r\n    }\r\n}\r\n\r\n\r\nexport const updateCurrentUserFailed = err => {\r\n    return {\r\n        type: actionTypes.UPDATE_CURRENT_USER_FAILED,\r\n        error: err\r\n    }\r\n}\r\n\r\n\r\nexport const updateCurrentUser = (data) => {\r\n    return async dispatch => {\r\n        dispatch(updateCurrentUserInit());\r\n        try {\r\n            const res = await axios({\r\n                method: 'PATCH',\r\n                url: `/api/v1/users/me`,\r\n                data,\r\n            })\r\n            dispatch(updateCurrentUserSuccess(res.data.user))\r\n        } catch (err) {\r\n            let error = { ...err }.response ? { ...err }.response.data : err\r\n            dispatch(updateCurrentUserFailed(error))\r\n        }\r\n    }\r\n}\r\n\r\n/////////////////////////////////////////////////////////////////////////////////////\r\n// Update current user password\r\n\r\n\r\nexport const updateCurrentUserPasswordInit = () => {\r\n    return {\r\n        type: actionTypes.UPDATE_CURRENT_USER_PASSWORD_INIT\r\n    }\r\n}\r\n\r\nexport const updateCurrentUserPasswordSuccess = user => {\r\n    return {\r\n        type: actionTypes.UPDATE_CURRENT_USER_PASSWORD_SUCCESS,\r\n        user\r\n    }\r\n}\r\n\r\n\r\nexport const updateCurrentUserPasswordFailed = err => {\r\n    return {\r\n        type: actionTypes.UPDATE_CURRENT_USER_PASSWORD_FAILED,\r\n        error: err\r\n    }\r\n}\r\n\r\nexport const updateCurrentUserPassword = (data) => {\r\n    return async dispatch => {\r\n        dispatch(updateCurrentUserPasswordInit());\r\n        try {\r\n            await axios({\r\n                method: 'PATCH',\r\n                url: `/api/v1/users/updateCurrentUserPassword`,\r\n                data,\r\n            })\r\n            dispatch(updateCurrentUserPasswordSuccess())\r\n        } catch (err) {\r\n            let error = { ...err }.response ? { ...err }.response.data : err\r\n            dispatch(updateCurrentUserPasswordFailed(error))\r\n        }\r\n    }\r\n}\r\n\r\n///////////////////////////////////////////////////////////////////////\r\n// delete current user\r\n\r\n\r\nexport const deleteCurrentUserInit = () => {\r\n    return {\r\n        type: actionTypes.DELETE_CURRENT_USER_INIT\r\n    }\r\n}\r\n\r\n\r\nexport const deleteCurrentUserSuccess = () => {\r\n    return {\r\n        type: actionTypes.DELETE_CURRENT_USER_SUCCESS\r\n    }\r\n}\r\n\r\n\r\nexport const deleteCurrentUserFailed = err => {\r\n    return {\r\n        type: actionTypes.DELETE_CURRENT_USER_FAILED,\r\n        error: err\r\n    }\r\n}\r\n\r\nexport const deleteCurrentUser = () => {\r\n    return async dispatch => {\r\n        try {\r\n            await axios({\r\n                method: 'DELETE',\r\n                url: `/api/v1/users/me`,\r\n            })\r\n            dispatch(deleteCurrentUserSuccess());\r\n            dispatch(logout());\r\n        } catch (err) {\r\n            dispatch(deleteCurrentUserFailed(err.response.data))\r\n        }\r\n    }\r\n}","import React from 'react'\r\n\r\nconst backDrop = (props) => {\r\n    if (props.show) return <div onClick={props.close} className=\"backdrop\"></div>\r\n    else return null;\r\n};\r\n\r\nexport default backDrop;\r\n","module.exports = __webpack_public_path__ + \"static/media/user-1.44f16efe.jpg\";","module.exports = __webpack_public_path__ + \"static/media/user-2.7f8d1a3b.jpg\";","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"g\", {\n  id: \"Burger_1_\"\n}, /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"path\", {\n  d: \"m407 512h-302c-57.891 0-105-47.109-105-105 0-8.291 6.709-15 15-15h482c8.291 0 15 6.709 15 15 0 57.891-47.109 105-105 105z\"\n})), /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"path\", {\n  d: \"m256 0c-140.61 0-256 87.48-256 195 0 8.291 6.709 15 15 15h482c8.291 0 15-6.709 15-15 0-107.52-115.39-195-256-195zm-110.395 115.605-30 30c-5.859 5.859-15.351 5.86-21.211 0-5.859-5.859-5.859-15.352 0-21.211l30-30c5.859-5.859 15.352-5.859 21.211 0s5.86 15.352 0 21.211zm91 0-30 30c-5.859 5.859-15.351 5.86-21.211 0-5.859-5.859-5.859-15.352 0-21.211l30-30c5.859-5.859 15.352-5.859 21.211 0s5.86 15.352 0 21.211zm90 0-30 30c-5.859 5.859-15.351 5.86-21.211 0-5.859-5.859-5.859-15.352 0-21.211l30-30c5.859-5.859 15.352-5.859 21.211 0s5.86 15.352 0 21.211zm82.666 0-30 30c-5.859 5.859-15.351 5.86-21.211 0-5.859-5.859-5.859-15.352 0-21.211l30-30c5.859-5.859 15.352-5.859 21.211 0s5.859 15.352 0 21.211z\"\n}))), /*#__PURE__*/React.createElement(\"g\", {\n  id: \"Burger_4_\"\n}, /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"path\", {\n  d: \"m15 271c7.2 0 13.5.899 18.9 2.399-2.117 6.82-2.71 8.859-3.9 30-3.9-1.5-8.699-2.399-15-2.399-8.401 0-15-6.601-15-15 0-8.401 6.599-15 15-15z\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"m512 286c0 8.399-6.599 15-15 15-6.301 0-11.1.899-15 2.399-.324-5.758.288-16.508-3.9-30 5.4-1.5 11.7-2.399 18.9-2.399 8.401 0 15 6.599 15 15z\"\n}))), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"m33.9 273.399c13.5 3.301 22.5 9.901 30 15.601 9.3 6.899 16.199 12 31.199 12s21.601-5.101 30.901-12.001c10.8-8.101 25-17.999 49.9-17.999 25.199 0 38.399 9.899 49.199 17.999 9.302 6.9 15.901 12.001 30.901 12.001s21.599-5.101 30.901-12.001c10.8-8.101 24-17.999 49.199-17.999 24.901 0 39.101 9.899 49.9 17.999 9.3 6.899 15.901 12.001 30.901 12.001s21.899-5.101 31.199-12.001c7.5-5.7 16.5-12.299 30-15.601-3.164-11.788-8.436-22.659-15.216-32.399h-413.768c-6.78 9.74-12.052 20.611-15.216 32.4z\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"m463.093 361c11.506-16.421 18.455-36.237 18.907-57.601-6 2.1-10.499 5.7-15.901 9.6-10.8 8.101-24 18.001-49.199 18.001-24.9 0-38.1-9.901-48.9-18.001-9.3-6.9-16.901-11.999-31.901-11.999s-21.899 5.099-31.199 11.999c-10.499 8.101-24 18.001-48.9 18.001s-38.401-9.901-48.9-18.001c-9.3-6.9-16.199-11.999-31.199-11.999s-22.601 5.099-31.901 11.999c-10.8 8.1-24 18.001-48.901 18.001-25.199 0-38.399-9.901-49.199-18.001-5.402-3.9-9.901-7.5-15.901-9.6.452 21.365 7.401 41.18 18.907 57.601z\"\n}));\n\nvar SvgBurger = function SvgBurger(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    id: \"Capa_1\",\n    enableBackground: \"new 0 0 512 512\",\n    height: 512,\n    viewBox: \"0 0 512 512\",\n    width: 512,\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _ref2);\n};\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgBurger, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/burger.0f48b978.svg\";\nexport { ForwardRef as ReactComponent };","import React from 'react';\r\nimport { ReactComponent as Menu } from './../../../assets/icons/burger.svg';\r\n\r\nconst HamburgerMenu = props => {\r\n    return (\r\n        <Menu className={props.className} />\r\n    )\r\n}\r\n\r\nexport default HamburgerMenu;\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nimport * as authActions from '../../Store/actions/auth';\r\nimport { Redirect } from 'react-router';\r\nimport Loader from '../Components/Loader/Loader';\r\n\r\nclass AuthRoutes extends Component {\r\n    async componentDidMount() {\r\n        await this.props.checkAuthState();\r\n    }\r\n\r\n    render() {\r\n        if (this.props.checkAuthInit) {\r\n            return <div className={`u-flex-center u-vh-100 u-bg-white ${this.props.match.url.startsWith('dashboard') && 'dashboard'}`}>\r\n                <Loader />\r\n            </div>\r\n        }\r\n\r\n        if (!this.props.user) {\r\n            return <Redirect to=\"/login\" />\r\n        }\r\n\r\n        return this.props.children\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.auth.user,\r\n        checkAuthInit: state.auth.checkAuthInit\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        checkAuthState: () => dispatch(authActions.checkAuth()),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AuthRoutes);","import React, { Component, Suspense, lazy } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Route, Switch } from 'react-router-dom';\r\n\r\nimport Backdrop from './../../Shared/Components/BackDrop/BackDrop';\r\nimport HamburgerMenu from './../../Shared/Icons/HamburgerMenu';\r\nimport AuthenticatedRoutes from '../../Shared/hoc/AuthRoutes';\r\n// import Loader from '../../Shared/Components/Loader/Loader';\r\n\r\nconst Sidebar = lazy(() => import('./components/Sidebar'))\r\n\r\n// USER ONLY\r\nconst CurrentUserOrders = lazy(() => import('./User/CurrentUserOrders'));\r\nconst Profile = lazy(() => import('./User/Profile'));\r\n\r\n// ADMIN ONLY\r\nconst Users = lazy(() => import('./Admin/Users/Users'))\r\nconst UserOrders = lazy(() => import('./Admin/Orders/UserOrders'))\r\nconst UpdateBurgerDetail = lazy(() => import('./Admin/Menu/UpdateBurgerDetail'));\r\nconst UpdateBurgerList = lazy(() => import('./Admin/Menu/UpdateBurgerList'));\r\nconst CreateBurger = lazy(() => import('./Admin/Menu/CreateBurger'));\r\nconst OrderDetail = lazy(() => import('./components/OrderDetail'));\r\nconst Ingredients = lazy(() => import('./Admin/Ingredients/Ingredients'));\r\nconst IngredientsForm = lazy(() => import('./Admin/Ingredients/IngredientsForm'));\r\n\r\n\r\nclass Layout extends Component {\r\n    state = {\r\n        showSideBar: false,\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.user && this.props.user.role === 'admin') {\r\n            return this.props.history.push('/dashboard/manage-orders')\r\n        }\r\n\r\n        if (this.props.user && this.props.user.role === 'customer') {\r\n            return this.props.history.push('/dashboard/my-orders')\r\n        }\r\n    }\r\n\r\n    sidebarShowHandler = () => {\r\n        this.setState({ showSideBar: true })\r\n    }\r\n\r\n    sidebarCloseHandler = () => {\r\n        this.setState({ showSideBar: false })\r\n    }\r\n\r\n    render() {\r\n        let showSideBar = null;\r\n        if (this.state.showSideBar) showSideBar = 'dashboard__sidebar-show'\r\n\r\n        // let loading = <div className=\"dashboard u-flex-center u-vh-100 u-bg-white\">\r\n        //     <Loader />\r\n        // </div>\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <div className=\"dashboard\">\r\n                    <Suspense\r\n                    // fallback={loading}\r\n                    >\r\n                        <button onClick={this.sidebarShowHandler} className=\"dashboard__sidebar-btn\">\r\n                            <HamburgerMenu className=\"icon-hamburger\" />\r\n                        </button>\r\n                        {this.props.user && <div className={`sidebar dashboard__sidebar ${showSideBar}`} >\r\n                            <Sidebar {...this.props} closeSidebar={this.sidebarCloseHandler} />\r\n                        </div>}\r\n                        <Backdrop show={this.state.showSideBar} close={this.sidebarCloseHandler} user={this.props.user} />\r\n                        <Switch>\r\n                            <AuthenticatedRoutes {...this.props}>\r\n                                <Route path={`${this.props.match.url}/manage-profile`} exact component={Profile} {...this.props} />\r\n                                <Route path={`${this.props.match.url}/manage-users`} exact component={Users} {...this.props} />\r\n\r\n                                <Route path={`${this.props.match.url}/manage-ingredients`} exact component={Ingredients} {...this.props} />\r\n                                <Route path={`${this.props.match.url}/manage-ingredients/new`} component={IngredientsForm} {...this.props} />\r\n                                <Route path={`${this.props.match.url}/manage-ingredients/:id`} component={IngredientsForm} {...this.props} />\r\n\r\n                                <Route path={`${this.props.match.url}/manage-orders`} exact component={UserOrders} {...this.props} />\r\n                                <Route path={`${this.props.match.url}/manage-orders/:id`} component={OrderDetail} {...this.props} />\r\n\r\n                                <Route path={`${this.props.match.url}/manage-menu`} exact component={UpdateBurgerList} {...this.props} />\r\n                                <Route path={`${this.props.match.url}/manage-menu/new`} exact component={CreateBurger} {...this.props} />\r\n                                <Route path={`${this.props.match.url}/manage-menu/:id`} component={UpdateBurgerDetail} {...this.props} />\r\n\r\n                                <Route path={`${this.props.match.url}/my-orders`} exact component={CurrentUserOrders} {...this.props} />\r\n                                <Route path={`${this.props.match.url}/my-orders/:id`} component={OrderDetail} {...this.props} />\r\n                            </AuthenticatedRoutes>\r\n                        </Switch>\r\n                    </Suspense>\r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.auth.user,\r\n\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Layout);\r\n","import React from 'react'\r\n\r\nconst Error = props => {\r\n    return (\r\n        <div className=\"error\">\r\n            <h2 className=\"error__text\">\r\n                Something Went Wrong. Please Try again Later\r\n            </h2>\r\n            <button\r\n                onClick={props.history.goBack}\r\n                className=\"btn btn__tertiary\">Go Back</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Error\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Loader from '../../Shared/Components/Loader/Loader';\r\n\r\nimport * as authActions from './../../Store/actions/auth';\r\n\r\nclass Logout extends Component {\r\n    componentDidMount() {\r\n        if (!this.props.user) {\r\n            return this.props.history.replace('/login');\r\n        }\r\n        this.props.logout();\r\n        this.props.history.replace('/')\r\n    }\r\n\r\n    render() {\r\n        return (this.props.logoutInit) && <Loader className=\"u-flex-center u-vh-100\" />\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        logoutInit: state.auth.logoutInit,\r\n        user: state.auth.user\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        logout: () => dispatch(authActions.logout())\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Logout);","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nimport * as authActions from '../../Store/actions/auth';\r\nimport { Redirect } from 'react-router';\r\nimport Loader from '../Components/Loader/Loader';\r\n\r\n\r\nclass UnAuthRoutes extends Component {\r\n    async componentDidMount() {\r\n        this.props.checkAuthState();\r\n    }\r\n\r\n    render() {\r\n        if (this.props.checkAuthInit) {\r\n            return <div className=\"u-flex-center u-vh-100 u-bg-white\">\r\n                <Loader />\r\n            </div>\r\n        }\r\n\r\n        if (this.props.user && this.props.user.role === 'admin') {\r\n            return <Redirect to=\"/dashboard/manage-orders\" />\r\n        } else if (this.props.user && (!this.props.user.role || this.props.user.role !== 'admin')) {\r\n            return <Redirect to=\"/menu\" />\r\n        }\r\n\r\n        if (!this.props.user) return this.props.children\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.auth.user,\r\n        checkAuthInit: state.auth.checkAuthInit\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        checkAuthState: () => dispatch(authActions.checkAuth()),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UnAuthRoutes);","import React, { Component, Suspense, lazy } from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\nimport Dashboard from '../Pages/DashBoard/Layout';\r\n\r\nimport Error from '../Pages/Error/Error';\r\nimport Logout from '../Pages/Logout/Logout';\r\nimport Loader from '../Shared/Components/Loader/Loader';\r\n// import AuthRoutes from '../Shared/hoc/AuthRoutes';\r\nimport UnAuthRoutes from '../Shared/hoc/UnAuthRoutes';\r\n\r\nconst Menu = lazy(() => import('../Pages/Menu/Menu'));\r\nconst Cart = lazy(() => import('../Pages/Cart/Cart'));\r\nconst CustomBurger = lazy(() => import('../Pages/CustomBurger/CustomBurger'));\r\nconst About = lazy(() => import('../Pages/About/About'));\r\nconst Register = lazy(() => import('../Pages/Register/Register'));\r\nconst Login = lazy(() => import('../Pages/Login/Login'));\r\nconst Home = lazy(() => import('../Pages/Home/Home'));\r\n\r\n\r\n\r\nclass Body extends Component {\r\n    render() {\r\n        const loading = <div className=\"u-flex-center u-vh-100 u-bg-white\">\r\n            <Loader />\r\n        </div>\r\n        return (\r\n\r\n            <Suspense fallback={loading}>\r\n                <Switch>\r\n                    <Route path=\"/\" exact component={Home} {...this.props} />\r\n                    <Route path=\"/build-your-burger\" component={CustomBurger} {...this.props} />\r\n                    <Route path=\"/about\" exact component={About} {...this.props} />\r\n                    <Route path=\"/cart\" component={Cart} {...this.props} />\r\n                    <Route path=\"/menu\" exact component={Menu} {...this.props} />\r\n                    <Route path=\"/dashboard\" {...this.props} component={Dashboard} />\r\n                    <Route path=\"/logout\" component={Logout} {...this.props} />\r\n\r\n                    <UnAuthRoutes {...this.props}>\r\n                        <Route path=\"/register\" exact component={Register} {...this.props} />\r\n                        <Route path=\"/login\" component={Login} {...this.props} />\r\n                    </UnAuthRoutes>\r\n\r\n                    <Route path=\"/something-went-wrong\" component={Error} {...this.props} />\r\n\r\n                </Switch>\r\n            </Suspense>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.auth.user\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Body);","import React, { Suspense, lazy } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\nimport Body from './Layout/Body';\r\nimport { Component } from 'react';\r\n\r\nimport * as authActions from './Store/actions/auth';\r\nimport Loader from './Shared/Components/Loader/Loader';\r\n\r\nconst Header = lazy(() => import('./Layout/Header'));\r\nconst Footer = lazy(() => import('./Layout/Footer'));\r\n\r\nclass App extends Component {\r\n    render() {\r\n        let loading = <div className=\"u-flex-center u-vh-100 u-bg-white\">\r\n            <Loader />\r\n        </div>\r\n\r\n        return (\r\n            <BrowserRouter>\r\n                <Suspense fallback={loading}>\r\n                    <Header />\r\n                    <Body />\r\n                    <Footer />\r\n                </Suspense>\r\n            </BrowserRouter >\r\n        )\r\n    }\r\n};\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.auth.user\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        checkAuthState: () => dispatch(authActions.checkAuth()),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n","import * as actionTypes from './../actions/actions';\r\n\r\nconst initialState = {\r\n    user: null,\r\n    checkAuthInit: false,\r\n\r\n    registerInit: false,\r\n    registerStatus: null,\r\n\r\n    loginStatus: null,\r\n    loginInit: false,\r\n\r\n    logoutInit: false,\r\n\r\n    updateUserDataInit: false,\r\n    updateUserDataStatus: null,\r\n\r\n    updateUserPasswordInit: false,\r\n    updateUserPasswordStatus: null,\r\n\r\n    deleteUserInit: false,\r\n    deleteUserStatus: null\r\n}\r\n\r\n\r\n\r\nconst checkAuthStateInit = (state, action) => {\r\n    return {\r\n        ...state,\r\n        checkAuthInit: true\r\n    }\r\n}\r\n\r\n\r\nconst checkAuthSuccess = (state, action) => {\r\n    let userPhoto = `/uploads/users/${action.user.photo}`\r\n    return {\r\n        ...state,\r\n        user: { ...action.user, photo: userPhoto },\r\n        checkAuthInit: false,\r\n    }\r\n}\r\n\r\nconst checkAuthStateFailed = (state, action) => {\r\n    return {\r\n        ...state,\r\n        user: null,\r\n        checkAuthInit: false\r\n    }\r\n}\r\n\r\n\r\nconst registerInit = (state, action) => {\r\n    return {\r\n        ...state,\r\n        registerStatus: null,\r\n        registerInit: true\r\n    }\r\n}\r\n\r\nconst registerSuccess = (state, action) => {\r\n    return {\r\n        ...state,\r\n        registerInit: false,\r\n        registerStatus: action.response\r\n    }\r\n}\r\n\r\nconst registerFailed = (state, action) => {\r\n    return {\r\n        ...state,\r\n        registerInit: false,\r\n        registerStatus: action.error\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\nconst loginInit = (state, action) => {\r\n    return {\r\n        ...state,\r\n        loginStatus: null,\r\n        loginInit: true\r\n    }\r\n}\r\n\r\nconst loginSuccess = (state, action) => {\r\n    let userPhoto = `/uploads/users/${action.response.user.photo}`\r\n    return {\r\n        ...state,\r\n        loginInit: false,\r\n        loginStatus: action.response.status,\r\n        user: { ...action.response.user, photo: userPhoto }\r\n    }\r\n}\r\n\r\nconst loginFailed = (state, action) => {\r\n    return {\r\n        ...state,\r\n        loginInit: false,\r\n        loginStatus: action.error,\r\n        user: null\r\n    }\r\n}\r\n\r\n\r\nconst logoutInit = (state, action) => {\r\n    return {\r\n        ...state,\r\n        logoutInit: true\r\n    }\r\n}\r\n\r\nconst logoutSuccess = (state, action) => {\r\n    return {\r\n        ...state,\r\n        logoutInit: false,\r\n        user: null\r\n    }\r\n}\r\n\r\nconst logoutFailed = (state, action) => {\r\n    return {\r\n        ...state,\r\n        logoutInit: false,\r\n    }\r\n}\r\n\r\n\r\nconst updateUserDataInit = (state, action) => {\r\n    return {\r\n        ...state,\r\n        updateUserDataInit: true\r\n    }\r\n}\r\n\r\n\r\nconst updateUserDataSuccess = (state, action) => {\r\n    let userPhoto = `/uploads/users/${action.user.photo}`\r\n    return {\r\n        ...state,\r\n        user: { ...action.user, photo: userPhoto },\r\n        updateUserDataStatus: 'success',\r\n        updateUserDataInit: false\r\n    }\r\n}\r\n\r\nconst updateUserDataFailed = (state, action) => {\r\n    return {\r\n        ...state,\r\n        updateUserDataStatus: action.error,\r\n        updateUserDataInit: false\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nconst updateUserPasswordInit = (state, action) => {\r\n    return {\r\n        ...state,\r\n        updateUserPasswordInit: true\r\n    }\r\n}\r\n\r\n\r\nconst updateUserPasswordSuccess = (state, action) => {\r\n    return {\r\n        ...state,\r\n        updateUserPasswordStatus: 'success',\r\n        updateUserPasswordInit: false\r\n    }\r\n}\r\n\r\nconst updateUserPasswordFailed = (state, action) => {\r\n    return {\r\n        ...state,\r\n        updateUserPasswordStatus: action.error,\r\n        updateUserPasswordInit: false\r\n    }\r\n}\r\n\r\n\r\n///////////////////////////////////////////////////////////////////////////\r\n\r\nconst deleteCurrentUserInit = (state, action) => {\r\n    return {\r\n        ...state,\r\n        deleteUserInit: true,\r\n        deleteUserStatus: null\r\n    }\r\n}\r\n\r\nconst deleteCurrentUserSuccess = (state, action) => {\r\n    return {\r\n        ...state,\r\n        deleteUserInit: false,\r\n        deleteUserStatus: 'success'\r\n    }\r\n}\r\n\r\n\r\nconst deleteCurrentUserFailed = (state, action) => {\r\n    return {\r\n        ...state,\r\n        deleteUserInit: false,\r\n        deleteUserStatus: action.error\r\n    }\r\n}\r\n\r\n////////////////////////////////////////////////////////////////////////////////////\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.CHECK_AUTH_STATE_SUCCESS: return checkAuthSuccess(state, action);\r\n        case actionTypes.CHECK_AUTH_STATE_INIT: return checkAuthStateInit(state, action)\r\n        case actionTypes.CHECK_AUTH_STATE_FAILED: return checkAuthStateFailed(state, action)\r\n\r\n        case actionTypes.REGISTER_USER_INIT: return registerInit(state, action);\r\n        case actionTypes.REGISTER_USER_SUCCESS: return registerSuccess(state, action);\r\n        case actionTypes.REGISTER_USER_FAILED: return registerFailed(state, action);\r\n\r\n        case actionTypes.LOGIN_USER_INIT: return loginInit(state, action);\r\n        case actionTypes.LOGIN_USER_SUCCESS: return loginSuccess(state, action);\r\n        case actionTypes.LOGIN_USER_FAILED: return loginFailed(state, action);\r\n\r\n        case actionTypes.LOGOUT_USER_INIT: return logoutInit(state, action);\r\n        case actionTypes.LOGOUT_USER_SUCCESS: return logoutSuccess(state, action);\r\n        case actionTypes.LOGOUT_USER_FAILED: return logoutFailed(state, action);\r\n\r\n        case actionTypes.UPDATE_CURRENT_USER_INIT: return updateUserDataInit(state, action);\r\n        case actionTypes.UPDATE_CURRENT_USER_SUCCESS: return updateUserDataSuccess(state, action);\r\n        case actionTypes.UPDATE_CURRENT_USER_FAILED: return updateUserDataFailed(state, action);\r\n\r\n        case actionTypes.UPDATE_CURRENT_USER_PASSWORD_INIT: return updateUserPasswordInit(state, action);\r\n        case actionTypes.UPDATE_CURRENT_USER_PASSWORD_SUCCESS: return updateUserPasswordSuccess(state, action);\r\n        case actionTypes.UPDATE_CURRENT_USER_PASSWORD_FAILED: return updateUserPasswordFailed(state, action);\r\n\r\n        case actionTypes.DELETE_CURRENT_USER_INIT: return deleteCurrentUserInit(state, action)\r\n        case actionTypes.DELETE_CURRENT_USER_SUCCESS: return deleteCurrentUserSuccess(state, action);\r\n        case actionTypes.DELETE_CURRENT_USER_FAILED: return deleteCurrentUserFailed(state, action)\r\n\r\n        default: return state;\r\n    }\r\n}\r\n\r\n\r\nexport default reducer;","import * as actionTypes from '../actions/actions';\r\n\r\n\r\nconst initialState = {\r\n    Burgers: [],\r\n    updateBurgers: [],\r\n\r\n    ingredientsInit: false,\r\n    ingredients: {},\r\n\r\n    error: null,\r\n    loading: false,\r\n\r\n    menuIngs: {},\r\n    totalBurgerPrice: 0,\r\n\r\n    updateBurgersStatus: null,\r\n\r\n    createBurgerInit: false,\r\n    createBurgerStatus: null,\r\n\r\n    deleteBurgerInit: false,\r\n    deleteBurgerStatus: null,\r\n}\r\n\r\n/////////////////////////////////////////////////////////////////////\r\nconst fetchBurgersSuccess = (state, action) => {\r\n    let burgers = [];\r\n\r\n    action.burgers.map((el, i) => {\r\n        let x = {\r\n            ...action.burgers[i],\r\n            totalPrice: 0,\r\n            items: 0,\r\n            photo: `/uploads/burgers/${action.burgers[i].photo}`\r\n        }\r\n        burgers.push(x);\r\n        return burgers;\r\n    })\r\n\r\n    return {\r\n        ...state,\r\n        Burgers: burgers,\r\n        loading: false,\r\n        error: null,\r\n    }\r\n};\r\n\r\nconst fetchBurgersFailed = (state, action) => {\r\n    let message, status;\r\n    if (action.error.status) {\r\n        message = action.error.data.message;\r\n        status = action.error.status\r\n    } else {\r\n        message = action.error.message;\r\n    }\r\n\r\n    return {\r\n        ...state,\r\n        error: {\r\n            message,\r\n            status\r\n        },\r\n        loading: false,\r\n    }\r\n}\r\n\r\nconst fetchBurgersInit = (state, action) => {\r\n    return {\r\n        ...state,\r\n        loading: true,\r\n        error: null,\r\n    }\r\n}\r\n////////////////////////////////////////////////////////////////////////////\r\n\r\n\r\nconst fetchIngredientsInit = (state, action) => {\r\n    return {\r\n        ...state,\r\n        ingredientsInit: true,\r\n        error: null,\r\n    }\r\n}\r\n\r\nconst fetchIngredientsSuccess = (state, action) => {\r\n    let ings = {};\r\n\r\n    action.ingredients.map(el => {\r\n        return ings[el.name] = { ...el, value: 0, photo: `/uploads/ingredients/${el.photo}` }\r\n    });\r\n\r\n    return {\r\n        ...state,\r\n        ingredients: ings,\r\n        ingredientsInit: false,\r\n    }\r\n}\r\n\r\nconst fetchIngredientsFailed = (state, action) => {\r\n    return {\r\n        ...state,\r\n        ingredients: action.error,\r\n        ingredientsInit: false,\r\n    }\r\n}\r\n\r\n////////////////////////////////////////////////////////////////////////////\r\n\r\nconst addIngredient = (state, action) => {\r\n    return {\r\n        ...state,\r\n        menuIngs: {\r\n            ...state.menuIngs,\r\n            [action.name]: {\r\n                ...state.menuIngs[action.name],\r\n                value: state.menuIngs[action.name].value + 1\r\n            }\r\n        },\r\n    };\r\n};\r\n\r\nconst removeIngredient = (state, action) => {\r\n    return {\r\n        ...state,\r\n        menuIngs: {\r\n            ...state.menuIngs,\r\n            [action.name]: {\r\n                ...state.menuIngs[action.name],\r\n                value: state.menuIngs[action.name].value - 1\r\n            }\r\n        },\r\n    };\r\n};\r\n\r\n///////////////////////////////////////////////////////////////////////////\r\n\r\nconst setMenuIngredients = (state, action) => {\r\n    return {\r\n        ...state,\r\n        menuIngs: action.ings,\r\n        loading: false\r\n    }\r\n}\r\n////////////////////////////////////////////////////////////////\r\n\r\nconst updateMenuBurgerSuccess = (state, action) => {\r\n    return {\r\n        ...state,\r\n        updateBurgersStatus: action.status,\r\n        loading: false,\r\n    }\r\n}\r\n\r\nconst updateMenuBurgerFailed = (state, action) => {\r\n    return {\r\n        ...state,\r\n        updateBurgersStatus: action.error,\r\n        loading: false,\r\n    }\r\n}\r\n///////////////////////////////////////////////////////////\r\n\r\nconst createBurgerInit = (state, action) => {\r\n    return {\r\n        ...state,\r\n        createBurgerInit: true,\r\n        createBurgerStatus: null,\r\n    }\r\n}\r\n\r\nconst createBurgerSuccess = (state, action) => {\r\n    return {\r\n        ...state,\r\n        createBurgerInit: false,\r\n        createBurgerStatus: action.status,\r\n    }\r\n}\r\n\r\n\r\nconst createBurgerFailed = (state, action) => {\r\n    return {\r\n        ...state,\r\n        createBurgerInit: false,\r\n        createBurgerStatus: action.error\r\n    }\r\n}\r\n/////////////////////////////////////////////////////////////////////////////\r\n// \r\n\r\nconst deleteBurgerInit = (state, action) => {\r\n    return {\r\n        ...state,\r\n        deleteBurgerInit: true,\r\n        deleteBurgerStatus: null\r\n    }\r\n}\r\n\r\n\r\nconst deleteBurgerFailed = (state, action) => {\r\n    return {\r\n        ...state,\r\n        deleteBurgerInit: false,\r\n        deleteBurgerStatus: action.error\r\n    }\r\n}\r\n\r\nconst deleteBurgerSuccess = (state, action) => {\r\n    return {\r\n        ...state,\r\n        deleteBurgerInit: false,\r\n        deleteBurgerStatus: 'success'\r\n    }\r\n}\r\n\r\n//////////////////////////////////////////////////////////////////////\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.FETCH_BURGERS_SUCCESS: return fetchBurgersSuccess(state, action);\r\n        case actionTypes.FETCH_BURGERS_FAILED: return fetchBurgersFailed(state, action);\r\n        case actionTypes.FETCH_BURGERS_INIT: return fetchBurgersInit(state, action);\r\n\r\n        case actionTypes.FETCH_INGREDIENTS_INIT: return fetchIngredientsInit(state, action);\r\n        case actionTypes.FETCH_INGREDIENTS_SUCCESS: return fetchIngredientsSuccess(state, action);\r\n        case actionTypes.FETCH_INGREDIENTS_FAILED: return fetchIngredientsFailed(state, action);\r\n\r\n        case actionTypes.UPDATE_MENU_ADD_INGREDIENT: return addIngredient(state, action);\r\n        case actionTypes.UPDATE_MENU_REMOVE_INGREDIENT: return removeIngredient(state, action);\r\n\r\n        case actionTypes.SET_MENU_INGREDIENTS: return setMenuIngredients(state, action);\r\n\r\n        case actionTypes.UPDATE_BURGER_SUCCESS: return updateMenuBurgerSuccess(state, action);\r\n        case actionTypes.UPDATE_BURGER_FAILED: return updateMenuBurgerFailed(state, action);\r\n\r\n        case actionTypes.CREATE_BURGER_INIT: return createBurgerInit(state, action);\r\n        case actionTypes.CREATE_BURGER_SUCCESS: return createBurgerSuccess(state, action);\r\n        case actionTypes.CREATE_BURGER_FAILED: return createBurgerFailed(state, action);\r\n\r\n\r\n        case actionTypes.DELETE_BURGER_INIT: return deleteBurgerInit(state, action);\r\n        case actionTypes.DELETE_BURGER_SUCCESS: return deleteBurgerSuccess(state, action);\r\n        case actionTypes.DELETE_BURGER_FAILED: return deleteBurgerFailed(state, action);\r\n        default: return state;\r\n    }\r\n}\r\n\r\nexport default reducer;","import * as actionTypes from '../actions/actions';\r\n\r\nconst TOTAL_PRICE = 280;\r\n\r\n\r\nconst initialState = {\r\n    ingredientsLoading: false,\r\n    ingredients: null,\r\n    totalPrice: TOTAL_PRICE,\r\n    error: false,\r\n};\r\n\r\nconst fetchIngredientsSuccess = (state, action) => {\r\n    let ings = {};\r\n    console.log(action.ingredients);\r\n    action.ingredients.forEach(el => {\r\n        ings[el.name] = { ...el, value: 0, photo: `/uploads/ingredients/${el.photo}` }\r\n    });\r\n\r\n    console.log(ings);\r\n    return {\r\n        ...state,\r\n        ingredientsLoading: false,\r\n        ingredients: ings,\r\n        error: false,\r\n    }\r\n};\r\n\r\nconst fetchIngredientsFailed = (state, action) => {\r\n    return {\r\n        ...state,\r\n        ingredientsLoading: false,\r\n        error: action.error,\r\n    }\r\n};\r\n\r\n\r\nconst addIngredient = (state, action) => {\r\n    return {\r\n        ...state,\r\n        ingredients: {\r\n            ...state.ingredients,\r\n            [action.name]: {\r\n                ...state.ingredients[action.name],\r\n                value: state.ingredients[action.name].value + 1\r\n            }\r\n        },\r\n        totalPrice: state.totalPrice + state.ingredients[action.name].price,\r\n    };\r\n};\r\n\r\nconst removeIngredient = (state, action) => {\r\n    return {\r\n        ...state,\r\n        ingredients: {\r\n            ...state.ingredients,\r\n            [action.name]: {\r\n                ...state.ingredients[action.name],\r\n                value: state.ingredients[action.name].value - 1\r\n            }\r\n        },\r\n        totalPrice: state.totalPrice - state.ingredients[action.name].price,\r\n    };\r\n};\r\n\r\nconst clearIngredientValues = (state, action) => {\r\n    let ings = { ...state.ingredients };\r\n    Object.keys(ings).map(el => {\r\n        ings[el].value = 0\r\n        return ings[el].value;\r\n    });\r\n    return {\r\n        ...state,\r\n        ...state.ingredients,\r\n        ingredients: ings\r\n    };\r\n};\r\n\r\nconst cleartotalPrice = (state, action) => {\r\n    return {\r\n        ...state,\r\n        totalPrice: TOTAL_PRICE,\r\n    };\r\n};\r\n\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.FETCH_INGREDIENTS_SUCCESS: return fetchIngredientsSuccess(state, action);\r\n        case actionTypes.FETCH_INGREDIENTS_FAILED: return fetchIngredientsFailed(state, action);\r\n\r\n        case actionTypes.ADD_INGREDIENT: return addIngredient(state, action);\r\n        case actionTypes.REMOVE_INGREDIENT: return removeIngredient(state, action);\r\n        case actionTypes.CLEAR_INGREDIENT_VALUES: return clearIngredientValues(state, action);\r\n        case actionTypes.CLEAR_TOTAL_PRICE: return cleartotalPrice(state, action);\r\n        default: return state;\r\n    };\r\n\r\n};\r\n\r\n\r\nexport default reducer;\r\n\r\n\r\n","import userImage1 from './../../../assets/images/user-1.jpg';\r\nimport userImage2 from './../../../assets/images/user-2.jpg';\r\n\r\nconst initialState = {\r\n    reviews: {\r\n        Sarah: { img: userImage1, rating: 4.5, comment: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean pharetra nulla et rhoncus venenatis. Nam sollicitudin metus non urna feugiat, vel vehicula nunc semper. Proin nunc justo, tristique sit amet.' },\r\n        Paul: { img: userImage2, rating: 4, comment: 'Nulla ac libero nec elit porta aliquet mattis quis erat. Fusce congue mauris et quam finibus malesuada. Morbi pretium leo turpis, sed venenatis sapien vulputate eu. Duis volutpat lorem neque.' }\r\n    },\r\n}\r\n\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    return state;\r\n};\r\n\r\nexport default reducer;","import * as actionTypes from '../actions/actions';\r\n\r\n\r\n\r\nconst initialState = {\r\n    Burgers: null,\r\n    cart: 0,\r\n    totalPrice: 0,\r\n}\r\n\r\n\r\nconst removeItemFromCart = (state, action) => {\r\n    let items = state.Burgers[action.burgerObj.title].items;\r\n    let totalPrice = state.totalPrice - state.Burgers[action.burgerObj.title].price;\r\n    const cart = state.cart - items;\r\n    items = 0;\r\n\r\n    return {\r\n        ...state,\r\n        Burgers: {\r\n            ...state.Burgers,\r\n            [action.burgerObj.title]: undefined\r\n        },\r\n        cart,\r\n        totalPrice\r\n    }\r\n};\r\n\r\nconst incrementItem = (state, action) => {\r\n    let items = state.Burgers[action.burgerObj.title].items;\r\n    let price = state.Burgers[action.burgerObj.title].price + state.Burgers[action.burgerObj.title].initialprice;\r\n    let totalPrice = state.totalPrice + state.Burgers[action.burgerObj.title].initialprice;\r\n    const cart = state.cart + 1;\r\n    items += 1;\r\n\r\n    return {\r\n        ...state,\r\n        Burgers: {\r\n            ...state.Burgers,\r\n            [action.burgerObj.title]: {\r\n                ...state.Burgers[action.burgerObj.title],\r\n                items,\r\n                price,\r\n            }\r\n        },\r\n        cart,\r\n        totalPrice\r\n    }\r\n};\r\n\r\nconst decrementItem = (state, action) => {\r\n    let Burgers = { ...state.Burgers };\r\n    let items = state.Burgers[action.burgerObj.title].items;\r\n    let price = state.Burgers[action.burgerObj.title].price - state.Burgers[action.burgerObj.title].initialprice;\r\n    let totalPrice = state.totalPrice - state.Burgers[action.burgerObj.title].initialprice;\r\n    const cart = state.cart - 1;\r\n    items -= 1;\r\n\r\n    if (items > 0) {\r\n        Burgers = {\r\n            ...state.Burgers,\r\n            [action.burgerObj.title]: {\r\n                ...state.Burgers[action.burgerObj.title],\r\n                items,\r\n                price,\r\n            }\r\n        }\r\n    } else {\r\n        Burgers = {\r\n            ...state.Burgers,\r\n            [action.burgerObj.title]: undefined\r\n        }\r\n    }\r\n    return {\r\n        ...state,\r\n        Burgers,\r\n        cart,\r\n        totalPrice\r\n    }\r\n};\r\n\r\nconst addBurgersToCart = (state, action) => {\r\n    let totalPrice;\r\n    let Burger = { ...state.Burgers }\r\n\r\n    if (action.burgerObj.title === 'customBurger') {\r\n        action.burgerObj.title = `${action.burgerObj.title}-${action.burgerObj.id}`\r\n    }\r\n\r\n    if ((Object.keys(Burger).includes(action.burgerObj.title))) {\r\n        Burger[action.burgerObj.title].items += 1;\r\n        Burger[action.burgerObj.title].price += Burger[action.burgerObj.title].initialprice;\r\n        totalPrice = state.totalPrice + Burger[action.burgerObj.title].initialprice\r\n\r\n    } else {\r\n        Burger[action.burgerObj.title] = action.burgerObj;\r\n        Burger[action.burgerObj.title].items += 1;\r\n        Burger[action.burgerObj.title].price = Burger[action.burgerObj.title].initialprice;\r\n        totalPrice = state.totalPrice + Burger[action.burgerObj.title].initialprice\r\n    }\r\n\r\n    return {\r\n        ...state,\r\n        Burgers: Burger,\r\n        cart: state.cart + 1,\r\n        totalPrice\r\n    }\r\n};\r\n\r\nconst clearCart = (state, action) => {\r\n    return {\r\n        ...state,\r\n        cart: 0,\r\n        totalPrice: 0,\r\n        Burgers: null\r\n    }\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case (actionTypes.ADD_BURGERS_TO_CART): return addBurgersToCart(state, action)\r\n        case (actionTypes.INCREMENT_ITEM): return incrementItem(state, action)\r\n        case (actionTypes.DECREMENT_ITEM): return decrementItem(state, action)\r\n        case (actionTypes.REMOVE_ALL_ITEMS): return removeItemFromCart(state, action)\r\n\r\n        case (actionTypes.CLEAR_CART): return clearCart(state, action);\r\n        default: return state;\r\n    }\r\n};\r\n\r\nexport default reducer;","import * as actionTypes from './../actions/actions';\r\n\r\n\r\nconst initialState = {\r\n    getUsersInit: false,\r\n    getUsersStatus: null,\r\n\r\n    updateUserInit: false,\r\n    updateUserStatus: null,\r\n\r\n    deleteUserInit: false,\r\n    deleteUserStatus: null,\r\n\r\n    users: null\r\n}\r\n\r\nconst getAllUsersInit = (state, action) => {\r\n    return {\r\n        ...state,\r\n        getUsersInit: true,\r\n        getUsersStatus: null,\r\n    }\r\n}\r\n\r\n\r\nconst getAllUsersSuccess = (state, action) => {\r\n    return {\r\n        ...state,\r\n        getUsersInit: false,\r\n        getUsersStatus: 'success',\r\n        users: action.users\r\n    }\r\n}\r\n\r\nconst getAllUsersFailed = (state, action) => {\r\n    return {\r\n        ...state,\r\n        getUsersInit: false,\r\n        users: null,\r\n        getUsersStatus: action.error,\r\n    }\r\n}\r\n\r\nconst updateUserInit = (state, action) => {\r\n    return {\r\n        ...state,\r\n        updateUserInit: true,\r\n    }\r\n}\r\n\r\n\r\nconst updateUserFailed = (state, action) => {\r\n    return {\r\n        ...state,\r\n        updateUserInit: false,\r\n        updateUserStatus: action.error,\r\n    }\r\n}\r\n\r\nconst deleteUserInit = (state, action) => {\r\n    return {\r\n        ...state,\r\n        deleteUserInit: true,\r\n    }\r\n}\r\n\r\nconst deleteUserFailed = (state, action) => {\r\n    return {\r\n        ...state,\r\n        deleteUserInit: false,\r\n        deleteUserStatus: action.error,\r\n    }\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.GET_ALL_USERS_INIT: return getAllUsersInit(state, action);\r\n        case actionTypes.GET_ALL_USERS_SUCCESS: return getAllUsersSuccess(state, action);\r\n        case actionTypes.GET_ALL_USERS_FAILED: return getAllUsersFailed(state, action);\r\n\r\n        case actionTypes.UPDATE_ONE_USER_INIT: return updateUserInit(state, action);\r\n        case actionTypes.UPDATE_ONE_USER_FAILED: return updateUserFailed(state, action);\r\n\r\n        case actionTypes.DELETE_ONE_USER_INIT: return deleteUserInit(state, action);\r\n        case actionTypes.DELETE_ONE_USER_FAILED: return deleteUserFailed(state, action);\r\n\r\n        default: return state;\r\n    }\r\n}\r\n\r\nexport default reducer;","import * as actionTypes from './../actions/actions';\r\n\r\nconst initialState = {\r\n    userOrders: null,\r\n    orders: null,\r\n\r\n    order: null,\r\n\r\n    getOrderStatus: null,\r\n    getOrderInit: false,\r\n\r\n    totalOrdersPrice: null,\r\n    totalOrders: null,\r\n    totalCompletedOrders: null,\r\n    totalPendingOrders: null,\r\n    totalCancelledOrders: null,\r\n\r\n    getUserOrdersStatus: null,\r\n    getUserOrdersInit: false,\r\n\r\n    createUserOrderInit: false,\r\n    createUserOrderStatus: null,\r\n\r\n    getOrdersInit: false,\r\n    getOrdersStatus: null,\r\n\r\n    updateOrderStatusAdminInit: false,\r\n    updateOrderStatusAdminStatus: {},\r\n\r\n};\r\n\r\nconst createOrderInit = (state, action) => {\r\n    return {\r\n        ...state,\r\n        createUserOrderInit: true\r\n    }\r\n}\r\n\r\nconst createOrderSuccess = (state, action) => {\r\n    return {\r\n        ...state,\r\n        createUserOrderInit: false,\r\n        createUserOrderStatus: 'success'\r\n    }\r\n}\r\n\r\nconst createOrderFailed = (state, action) => {\r\n    return {\r\n        ...state,\r\n        createUserOrderInit: false,\r\n        createUserOrderStatus: action.error\r\n    }\r\n}\r\n\r\nconst getUserOrdersInit = (state, action) => {\r\n    return {\r\n        ...state,\r\n        getUserOrdersInit: true\r\n    }\r\n}\r\n\r\nconst getUserOrdersSuccess = (state, action) => {\r\n    return {\r\n        ...state,\r\n        getUserOrdersInit: false,\r\n        userOrders: action.orders,\r\n        getUserOrdersStatus: 'success'\r\n    }\r\n}\r\n\r\nconst getUserOrdersFailed = (state, action) => {\r\n    return {\r\n        ...state,\r\n        getUserOrdersInit: false,\r\n        getUserOrdersStatus: action.error\r\n    }\r\n}\r\n\r\nconst getAllOrdersInit = (state, action) => {\r\n\r\n    return {\r\n        ...state,\r\n        getOrdersInit: true\r\n    }\r\n}\r\n\r\nconst getAllOrdersSuccess = (state, action) => {\r\n    return {\r\n        ...state,\r\n        getOrdersInit: false,\r\n        orders: action.orders,\r\n        getOrdersStatus: 'success',\r\n        totalOrdersPrice: action.totalPrice,\r\n        totalOrders: action.totalOrders,\r\n        totalCompletedOrders: action.completedOrders,\r\n        totalPendingOrders: action.pendingOrders,\r\n        totalCancelledOrders: action.totalOrders - action.completedOrders - action.pendingOrders\r\n    }\r\n}\r\n\r\nconst getOrdersFailed = (state, action) => {\r\n    return {\r\n        ...state,\r\n        getOrderInit: false,\r\n        getOrderStatus: action.error\r\n    }\r\n}\r\n\r\nconst getOrderInit = (state, action) => {\r\n    return {\r\n        ...state,\r\n        getOrderInit: true,\r\n        getOrderStatus: null\r\n    }\r\n}\r\n\r\nconst getOrderSuccess = (state, action) => {\r\n    return {\r\n        ...state,\r\n        getOrderInit: false,\r\n        getOrderStatus: 'success',\r\n        order: action.order\r\n    }\r\n}\r\n\r\nconst getAllOrdersFailed = (state, action) => {\r\n    return {\r\n        ...state,\r\n        getOrdersInit: false,\r\n        getOrdersStatus: action.error\r\n    }\r\n}\r\n\r\n\r\nconst clearCart = (state, action) => {\r\n    return {\r\n        ...state,\r\n        getUserOrdersStatus: null,\r\n        getUserOrdersInit: false,\r\n\r\n        createUserOrderInit: false,\r\n        createUserOrderStatus: null\r\n    }\r\n}\r\n\r\n\r\nconst updateOrderStatusAdminInit = (state, action) => {\r\n    return {\r\n        ...state,\r\n        updateOrderStatusAdminInit: true,\r\n        updateOrderStatusAdminStatus: null,\r\n    }\r\n}\r\n\r\nconst updateOrderStatusAdminSuccess = (state, action) => {\r\n    return {\r\n        ...state,\r\n        updateOrderStatusAdminInit: false,\r\n        updateOrderStatusAdminStatus: action.response,\r\n    }\r\n}\r\n\r\nconst updateOrderStatusAdminFailed = (state, action) => {\r\n    return {\r\n        ...state,\r\n        updateOrderStatusAdminInit: false,\r\n        updateOrderStatusAdminStatus: action.error,\r\n    }\r\n}\r\n\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.GET_ALL_USER_ORDERS_INIT: return getUserOrdersInit(state, action)\r\n        case actionTypes.GET_ALL_USER_ORDERS_SUCCESS: return getUserOrdersSuccess(state, action)\r\n        case actionTypes.GET_ALL_USER_ORDERS_FAILED: return getUserOrdersFailed(state, action)\r\n\r\n        case actionTypes.CREATE_ORDER_INIT: return createOrderInit(state, action)\r\n        case actionTypes.CREATE_ORDER_SUCCESS: return createOrderSuccess(state, action)\r\n        case actionTypes.CREATE_ORDER_FAILED: return createOrderFailed(state, action)\r\n\r\n        case actionTypes.CLEAR_CART: return clearCart(state, action);\r\n\r\n        case actionTypes.GET_ALL_ORDERS_INIT: return getAllOrdersInit(state, action);\r\n        case actionTypes.GET_ALL_ORDERS_SUCCESS: return getAllOrdersSuccess(state, action);\r\n        case actionTypes.GET_ALL_ORDERS_FAILED: return getAllOrdersFailed(state, action);\r\n\r\n        case actionTypes.UPDATE_ORDER_ADMIN_STATUS_INIT: return updateOrderStatusAdminInit(state, action);\r\n        case actionTypes.UPDATE_ORDER_ADMIN_STATUS_SUCCESS: return updateOrderStatusAdminSuccess(state, action);\r\n        case actionTypes.UPDATE_ORDER_ADMIN_STATUS_FAILED: return updateOrderStatusAdminFailed(state, action);\r\n\r\n        case actionTypes.GET_ORDER_INIT: return getOrderInit(state, action);\r\n        case actionTypes.GET_ORDER_SUCCESS: return getOrderSuccess(state, action);\r\n        case actionTypes.GET_ORDER_FAILED: return getOrdersFailed(state, action);\r\n\r\n        default: return state\r\n    }\r\n}\r\n\r\nexport default reducer;","import * as actionTypes from './../actions/actions';\r\n\r\n\r\nconst initialState = {\r\n    ingredients: null,\r\n    ingredient: null,\r\n\r\n    getAllIngredientsStatus: null,\r\n    getAllIngredientsInit: false,\r\n\r\n    updateIngredientInit: false,\r\n    updateIngredientStatus: null,\r\n\r\n    getIngredientStatus: null,\r\n    getIngredientInit: false,\r\n\r\n    createIngredientsStatus: null,\r\n    createIngredientsInit: false,\r\n\r\n    deleteIngredientStatus: null,\r\n    deleteIngredientInit: false,\r\n}\r\n\r\n// Get all Ingredients\r\n//////////////////////////////////////////////////////////\r\n\r\nconst getAllIngredientsInit = (state, action) => {\r\n    return {\r\n        ...state,\r\n        getAllIngredientsStatus: null,\r\n        getAllIngredientsInit: true,\r\n    }\r\n}\r\n\r\nconst getAllIngredientsFailed = (state, action) => {\r\n    return {\r\n        ...state,\r\n        getAllIngredientsStatus: action.error,\r\n        getAllIngredientsInit: false,\r\n    }\r\n}\r\n\r\n\r\nconst getAllIngredientsSuccess = (state, action) => {\r\n    let ingredients = [];\r\n    (action.res.ingredients).map(el => {\r\n        return ingredients.push({ ...el, photo: `/uploads/ingredients/${el.photo}` })\r\n    })\r\n    return {\r\n        ...state,\r\n        ingredients,\r\n        getAllIngredientsStatus: action.res.status,\r\n        getAllIngredientsInit: false,\r\n    }\r\n}\r\n///////////////////////////////////////////////////////////////////////////////\r\n// get ingredient\r\n\r\nconst getIngredientInit = (state, action) => {\r\n    return {\r\n        ...state,\r\n        getIngredientStatus: null,\r\n        getIngredientInit: true,\r\n    }\r\n}\r\n\r\nconst getIngredientFailed = (state, action) => {\r\n    return {\r\n        ...state,\r\n        getIngredientStatus: action.error,\r\n        getIngredientInit: false,\r\n    }\r\n}\r\n\r\n\r\nconst getIngredientSuccess = (state, action) => {\r\n\r\n    return {\r\n        ...state,\r\n        ingredient: {\r\n            ...action.res.ingredient,\r\n            photo: `/uploads/ingredients/${action.res.ingredient.photo}`\r\n        },\r\n        getIngredientStatus: action.res.status,\r\n        getIngredientInit: false,\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n////////////////////////////////////////////////////////////////////////////////\r\n// Create ingredient\r\n\r\n\r\n\r\nconst createIngredientsInit = (state, action) => {\r\n    return {\r\n        ...state,\r\n        createIngredientsStatus: null,\r\n        createIngredientsInit: true,\r\n    }\r\n}\r\n\r\nconst createIngredientsFailed = (state, action) => {\r\n    return {\r\n        ...state,\r\n        createIngredientsStatus: action.error,\r\n        createIngredientsInit: false,\r\n    }\r\n}\r\n\r\n\r\nconst createIngredientsSuccess = (state, action) => {\r\n    return {\r\n        ...state,\r\n        createIngredientsStatus: action.res,\r\n        createIngredientsInit: false,\r\n    }\r\n}\r\n\r\n/////////////////////////////////////////////////////////////////////////////////////\r\n// Update ingredient\r\n\r\n\r\nconst updateIngredientInit = (state, action) => {\r\n    return {\r\n        ...state,\r\n        updateIngredientsStatus: null,\r\n        updateIngredientsInit: true,\r\n    }\r\n}\r\n\r\nconst updateIngredientFailed = (state, action) => {\r\n    return {\r\n        ...state,\r\n        updateIngredientsStatus: action.error,\r\n        updateIngredientsInit: false,\r\n    }\r\n}\r\n\r\n\r\nconst updateIngredientSuccess = (state, action) => {\r\n    return {\r\n        ...state,\r\n        ingredient: {\r\n            ...action.res.ingredient,\r\n            photo: `/uploads/ingredients/${action.res.ingredient.photo}`\r\n        },\r\n        updateIngredientsStatus: action.res,\r\n        updateIngredientsInit: false,\r\n    }\r\n}\r\n\r\n\r\n/////////////////////////////////////////////////////////////////////////////////////\r\n\r\nconst deleteIngredientInit = (state, action) => {\r\n    return {\r\n        ...state,\r\n        deleteIngredientStatus: null,\r\n        deleteIngredientInit: true,\r\n    }\r\n}\r\n\r\nconst deleteIngredientFailed = (state, action) => {\r\n    return {\r\n        ...state,\r\n        deleteIngredientStatus: action.error,\r\n        deleteIngredientInit: false,\r\n    }\r\n}\r\n\r\n\r\nconst deleteIngredientSuccess = (state, action) => {\r\n    return {\r\n        ...state,\r\n        deleteIngredientStatus: 'success',\r\n        deleteIngredientInit: false,\r\n    }\r\n}\r\n///////////////////////////////////////////////////////////////////////////////////\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.GET_INGREDIENTS_INIT: return getAllIngredientsInit(state, action);\r\n        case actionTypes.GET_INGREDIENTS_SUCCESS: return getAllIngredientsSuccess(state, action);\r\n        case actionTypes.GET_INGREDIENTS_FAILED: return getAllIngredientsFailed(state, action);\r\n\r\n        case actionTypes.CREATE_INGREDIENTS_INIT: return createIngredientsInit(state, action);\r\n        case actionTypes.CREATE_INGREDIENTS_SUCCESS: return createIngredientsSuccess(state, action);\r\n        case actionTypes.CREATE_INGREDIENTS_FAILED: return createIngredientsFailed(state, action);\r\n\r\n        case actionTypes.GET_INGREDIENT_INIT: return getIngredientInit(state, action);\r\n        case actionTypes.GET_INGREDIENT_SUCCESS: return getIngredientSuccess(state, action);\r\n        case actionTypes.GET_INGREDIENT_FAILED: return getIngredientFailed(state, action);\r\n\r\n        case actionTypes.UPDATE_INGREDIENT_INIT: return updateIngredientInit(state, action)\r\n        case actionTypes.UPDATE_INGREDIENT_SUCCESS: return updateIngredientSuccess(state, action)\r\n        case actionTypes.UPDATE_INGREDIENT_FAILED: return updateIngredientFailed(state, action)\r\n\r\n        case actionTypes.DELETE_INGREDIENT_INIT: return deleteIngredientInit(state, action);\r\n        case actionTypes.DELETE_INGREDIENT_SUCCESS: return deleteIngredientSuccess(state, action);\r\n        case actionTypes.DELETE_ONE_USER_FAILED: return deleteIngredientFailed(state, action);\r\n\r\n        default: return state;\r\n    }\r\n}\r\n\r\nexport default reducer;","import { combineReducers } from 'redux';\r\n\r\nimport authReducer from './auth';\r\nimport menuReducer from './menu';\r\nimport burgerBuilderReducer from './burgerBuilder';\r\nimport customerReducer from './customer';\r\nimport cartReducer from './cart';\r\nimport userReducer from './users';\r\nimport orderReducer from './orders';\r\nimport ingredientReducer from './ingredients';\r\n\r\n\r\nconst reducer = combineReducers({\r\n    menu: menuReducer,\r\n    customer: customerReducer,\r\n    burgerBuilder: burgerBuilderReducer,\r\n    cart: cartReducer,\r\n    auth: authReducer,\r\n    users: userReducer,\r\n    orders: orderReducer,\r\n    ingredients: ingredientReducer,\r\n});\r\n\r\nexport default reducer;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { createStore, applyMiddleware, compose } from 'redux';\r\n\r\nimport './scss/main.scss';\r\n\r\n\r\nimport App from './app/App';\r\nimport reducer from './app/Store/reducers/rootReducer';\r\n\r\nimport thunk from 'redux-thunk';\r\n\r\n// const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst composeEnhancers = process.env.NODE_ENV === 'development' ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ : null || compose;\r\n\r\nconst store = createStore(reducer, composeEnhancers(\r\n  applyMiddleware(thunk)\r\n));\r\n\r\nconst app = (\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>\r\n)\r\n\r\nReactDOM.render(app, document.getElementById('root'));\r\n\r\n"],"sourceRoot":""}