{"version":3,"sources":["app/Pages/Login/Login.js","app/Shared/Components/Alert/Alert.js","app/Shared/Utils/formInput.js","app/Shared/Components/Form/Input.js"],"names":["Login","state","formInput","email","password","showAlert","onChangeHandler","e","onChangeFormInput","setState","onCloseHandler","closeAlertTimer","setTimeout","props","loginStatus","cart","history","replace","user","role","onSubmitHandler","a","preventDefault","loginUser","clearFields","clearTimeout","this","Fragment","show","status","message","close","className","onSubmit","autoComplete","name","inputtype","type","label","onChange","value","minLength","loginInit","variant","Component","connect","auth","checkAuthInit","dispatch","data","authActions","Alert","target","stateCopy","Object","keys","map","el","Input","required","id","placeholder","markup","formGroupClass"],"mappings":"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","file":"static/js/20.dfd39fdd.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport Input from '../../Shared/Components/Form/Input';\r\n\r\n\r\nimport * as authActions from './../../Store/actions/auth';\r\nimport { onChangeFormInput, clearFields } from '../../Shared/Utils/formInput';\r\nimport Alert from '../../Shared/Components/Alert/Alert';\r\nimport Loader from '../../Shared/Components/Loader/Loader';\r\n\r\nclass Login extends Component {\r\n    state = {\r\n        formInput: {\r\n            email: '',\r\n            password: ''\r\n        },\r\n        showAlert: false,\r\n    }\r\n\r\n\r\n    onChangeHandler = e => {\r\n        let formInput = onChangeFormInput(e, { ...this.state })\r\n        this.setState({ ...formInput })\r\n    }\r\n\r\n    onCloseHandler = () => {\r\n        this.closeAlertTimer = setTimeout(() => {\r\n            this.setState({ showAlert: false });\r\n            if (this.props.loginStatus === 'success' && this.props.cart) {\r\n                this.props.history.replace('/cart')\r\n            } else if (this.props.loginStatus === 'success' && this.props.user.role === 'admin') {\r\n                this.props.history.replace('/dashboard/manage-orders');\r\n            } else if (this.props.loginStatus === 'success') {\r\n                this.props.history.replace('/menu');\r\n            }\r\n        }, 1500)\r\n    }\r\n\r\n    onSubmitHandler = async e => {\r\n        e.preventDefault();\r\n        await this.props.loginUser(this.state.formInput)\r\n        let formInput = clearFields(this.state);\r\n        this.setState({ formInput, showAlert: true });\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        clearTimeout(this.closeAlertTimer);\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <React.Fragment>\r\n                {this.state.showAlert && this.props.loginStatus &&\r\n                    <Alert\r\n                        show={this.state.showAlert}\r\n                        status={this.props.loginStatus === 'success' ? this.props.loginStatus : this.props.loginStatus.status}\r\n                        message={this.props.loginStatus === 'success'\r\n                            ? \"User Logged In Successfully\"\r\n                            : this.props.loginStatus.message}\r\n                        close={this.onCloseHandler()}\r\n                    />}\r\n                <section className=\"login\">\r\n                    <form className=\"login__form\" onSubmit={this.onSubmitHandler} autoComplete=\"off\">\r\n                        <div className=\"form__group\">\r\n                            <h2 className=\"heading-1 u-text-primary u-ftwt-400\">Login</h2>\r\n                        </div>\r\n                        <Input\r\n                            name=\"email\"\r\n                            inputtype='input'\r\n                            type='email'\r\n                            label='Email'\r\n                            onChange={this.onChangeHandler}\r\n                            value={this.state.formInput.email} />\r\n\r\n                        <Input\r\n                            name=\"password\"\r\n                            inputtype='input'\r\n                            type='password'\r\n                            label='Password'\r\n                            onChange={this.onChangeHandler}\r\n                            value={this.state.formInput.password}\r\n                            minLength={6} />\r\n                        <Input inputtype='submit' value={this.props.loginInit ? 'Loading...' : 'Login Now'} variant=\"tertiary\" />\r\n                    </form>\r\n                </section>\r\n\r\n            </React.Fragment>\r\n        );\r\n    };\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        loginInit: state.auth.loginInit,\r\n        loginStatus: state.auth.loginStatus,\r\n        checkAuthInit: state.auth.checkAuthInit,\r\n        user: state.auth.user,\r\n        cart: state.cart.cart\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        loginUser: (data) => dispatch(authActions.login(data)),\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\r\n","import React from 'react';\r\n\r\nconst Alert = props => {\r\n    return (\r\n        <div className={`alert alert__${props.show} alert--${props.status} ${props.className}`}>\r\n            {props.message}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Alert;\r\n","export const onChangeFormInput = (e, state) => {\r\n    return {\r\n        ...state,\r\n        formInput: {\r\n            ...state.formInput,\r\n            [e.target.name]: e.target.value\r\n        }\r\n    }\r\n}\r\n\r\nexport const clearFields = (state) => {\r\n    let stateCopy = { ...state.formInput };\r\n    let formInput = {};\r\n    Object.keys(stateCopy).map(el => {\r\n        return formInput[el] = ''\r\n    })\r\n    return formInput;\r\n}","import React from 'react'\r\n\r\nconst Input = props => {\r\n    if (props.inputtype === 'input') {\r\n        let required = props.required === false ? false : true;\r\n        return (\r\n            <div className={`form__group `}>\r\n                <label className=\"form__label\">{props.label}</label>\r\n                <input\r\n                    type={props.type}\r\n                    name={props.name}\r\n                    id={props.name}\r\n                    placeholder={props.placeholder}\r\n                    className={`form__${props.inputtype} ${props.className}`}\r\n                    onChange={props.onChange}\r\n                    minLength={props.minLength}\r\n                    value={props.value}\r\n                    required={required}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n\r\n    if (props.inputtype === 'submit') {\r\n        let markup = <input type=\"submit\"\r\n            value={props.value}\r\n            className={`btn btn__${props.variant} ${props.className}`}\r\n            {...props}\r\n        />\r\n\r\n        return (\r\n            <div className={`form__group ${props.formGroupClass}`}>\r\n                {markup}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Input\r\n"],"sourceRoot":""}