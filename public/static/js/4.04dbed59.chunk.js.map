{"version":3,"sources":["app/Pages/DashBoard/Admin/Menu/UpdateBurgerDetail.js","app/Shared/Components/Alert/Alert.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","app/Shared/Utils/formInput.js","../node_modules/uniqid/index.js","app/Shared/Components/Buttons/AddorRemoveButton.js","app/Shared/Components/Form/Input.js","app/Store/actions/burgerBuilder.js","app/Store/actions/menu.js","app/Shared/Components/Burger/Ingredients/Ingredients.js","app/Shared/Components/Burger/Burger.js","app/Shared/Components/Burger/Controls/Controls.js","app/Shared/Components/IngredientControls/IngredientControls.js","app/Shared/Components/Modal/Modal.js","app/Shared/Components/Modal/ConfirmModal.js"],"names":["setMenuIngredients","menu","id","ingredientsFetched","burger","ingredients","Object","keys","map","el","_id","menuIngs","ing","name","el2","value","amount","UpdateBurgerDetail","state","isLoading","formInput","title","price","photo","previewPhoto","showModal","message","type","alert","show","status","showAlertHandler","setState","onCloseHandler","closeAlertTimer","setTimeout","onChangeHandler","e","onChangeFormInput","changeFileHandler","URL","createObjectURL","target","files","uploadFileHandler","a","formData","FormData","append","props","match","params","updateBurger","resetIngredients","setIngredients","updateBurgerIngredients","ings","ingsArr","push","updateBurgerDetails","preventDefault","updateBurgersStatus","updateTimer","history","deleteBurgerStatus","closeModal","onDeleteHandler","onDeleteConfirmHandler","deleteBurger","this","timer","fetchIngredients","clearTimeout","className","Fragment","close","edit","submit","src","alt","onChange","style","display","htmlFor","onClick","autoComplete","onSubmit","inputtype","label","variant","NotfoodType","foodType","startsWith","hidePrice","totalBurgerPrice","success","danger","successField","dangerField","addIngredient","removeIngredient","successBtnType","Component","connect","Burgers","dispatch","menuActions","data","Alert","_arrayLikeToArray","arr","len","length","i","arr2","Array","_toConsumableArray","isArray","iter","Symbol","iterator","from","o","minLen","n","prototype","toString","call","slice","constructor","test","TypeError","clearFields","stateCopy","pid","process","now","time","Date","last","module","exports","default","prefix","suffix","AddorRemoveButton","classes","disabled","items","addItem","valueClass","removeItem","Input","required","placeholder","minLength","markup","formGroupClass","actionTypes","clearIngredientValues","clearPriceValue","initIngredients","axios","get","response","error","fetchBurgersSuccess","burgers","initBurgers","err","setMenuIngs","url","method","res","createBurger","Ingredients","ingredient","Burger","key","uniqid","buildControl","addIng","removeIng","parseInt","IngredientControls","markupIngs","filter","Controls","Modal","children","ConfirmModal","onSubmitHandler"],"mappings":"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","file":"static/js/4.04dbed59.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport IngredientControls from '../../../../Shared/Components/IngredientControls/IngredientControls';\r\nimport Burger from '../../../../Shared/Components/Burger/Burger';\r\n\r\nimport Input from '../../../../Shared/Components/Form/Input';\r\n\r\nimport * as menuActions from '../../../../Store/actions/menu';\r\nimport Loader from '../../../../Shared/Components/Loader/Loader';\r\nimport { onChangeFormInput } from '../../../../Shared/Utils/formInput';\r\n\r\nimport Backdrop from '../../../../Shared/Components/BackDrop/BackDrop';\r\nimport ConfirmModal from '../../../../Shared/Components/Modal/ConfirmModal';\r\nimport Alert from '../../../../Shared/Components/Alert/Alert';\r\n\r\n\r\n\r\nconst setMenuIngredients = (menu, id, ingredientsFetched) => {\r\n    let burger;\r\n    let ingredients = {};\r\n\r\n    Object.keys(menu).map(el => {\r\n        if (menu[el]._id === id) {\r\n            burger = menu[el]\r\n\r\n            let menuIngs = {}\r\n            menu[el].ingredients.map(ing => {\r\n                return menuIngs[ing.name] = {\r\n                    ...ing\r\n                }\r\n            })\r\n\r\n            Object.keys(ingredientsFetched).map(el2 => {\r\n                ingredients[el2] = {\r\n                    ...ingredientsFetched[el2],\r\n                    value: menuIngs[el2] ? menuIngs[el2].amount : 0\r\n                }\r\n                return ingredients;\r\n            })\r\n        }\r\n        return burger;\r\n    })\r\n    return { ingredients, burger };\r\n}\r\n\r\n\r\nclass UpdateBurgerDetail extends Component {\r\n    state = {\r\n        isLoading: false,\r\n        formInput: {\r\n            title: '',\r\n            price: ''\r\n        },\r\n        photo: '',\r\n        previewPhoto: '',\r\n        showModal: false,\r\n        message: '',\r\n        type: '',\r\n        alert: {\r\n            show: false,\r\n            status: '',\r\n            message: '',\r\n        },\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({ isLoading: true })\r\n        this.timer = setTimeout(async () => {\r\n            await this.props.fetchIngredients();\r\n            const { ingredients, burger } = setMenuIngredients(this.props.menu, this.props.match.params.id, this.props.ingredients)\r\n            let formInput = { title: burger.title, price: burger.price }\r\n            await this.props.setIngredients(ingredients)\r\n            this.setState({ formInput, isLoading: false, previewPhoto: burger.photo })\r\n        }, 2000)\r\n    }\r\n\r\n    showAlertHandler = (message, status) => {\r\n        this.setState({\r\n            ...this.state,\r\n            alert: {\r\n                show: true,\r\n                status,\r\n                message,\r\n            }\r\n        })\r\n    }\r\n\r\n    onCloseHandler = () => {\r\n        this.closeAlertTimer = setTimeout(() => {\r\n            this.setState({\r\n                ...this.state,\r\n                alert: {\r\n                    show: false, status: '', message: ''\r\n                }\r\n            });\r\n        }, 2000)\r\n    }\r\n\r\n\r\n    onChangeHandler = e => {\r\n        let formInput = onChangeFormInput(e, { ...this.state })\r\n        this.setState({ ...formInput })\r\n    }\r\n\r\n    changeFileHandler = e => {\r\n        this.setState({ previewPhoto: URL.createObjectURL(e.target.files[0]), photo: e.target.files[0] })\r\n    }\r\n\r\n    uploadFileHandler = async () => {\r\n        const formData = new FormData()\r\n        formData.append(\r\n            'photo',\r\n            this.state.photo,\r\n            this.state.photo.name\r\n        )\r\n        formData.append('_id', this.props.match.params.id);\r\n        await this.props.updateBurger(formData);\r\n    }\r\n\r\n    resetIngredients = async () => {\r\n        const { ingredients } = setMenuIngredients(this.props.menu, this.props.match.params.id, this.props.ingredients);\r\n        await this.props.setIngredients(ingredients);\r\n    }\r\n\r\n    updateBurgerIngredients = async (ings) => {\r\n        let burger = {};\r\n        burger['_id'] = this.props.match.params.id;\r\n        let ingsArr = [];\r\n        Object.keys(ings).map(el => {\r\n            return ingsArr.push({ ...ings[el] })\r\n        })\r\n        burger['ingredients'] = ingsArr;\r\n        await this.props.updateBurger(burger);\r\n    }\r\n\r\n    updateBurgerDetails = async e => {\r\n        e.preventDefault();\r\n        let burger = new FormData();\r\n        burger.append('_id', this.props.match.params.id)\r\n        burger.append('title', this.state.formInput.title)\r\n        burger.append('price', this.state.formInput.price)\r\n        await this.props.updateBurger(burger);\r\n\r\n        if (this.props.updateBurgersStatus.status === 'success') {\r\n            const message = 'Updated Burger Successfully';\r\n            this.showAlertHandler(message, 'success')\r\n            this.updateTimer = setTimeout(() => {\r\n                this.props.history.push('/dashboard/manage-menu');\r\n            }, 2000)\r\n        } else {\r\n            this.showAlertHandler(this.props.deleteBurgerStatus.message, 'fail')\r\n        }\r\n    }\r\n\r\n    showModal = (message, type) => {\r\n        this.setState({ showModal: true, message, type })\r\n    }\r\n\r\n    closeModal = () => {\r\n        this.setState({ showModal: false, message: '', type: '' })\r\n    }\r\n\r\n    onDeleteHandler = () => {\r\n        const message = 'Are you sure you want to delete this burger ? ';\r\n        this.showModal(message, 'delete')\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        clearTimeout(this.timer);\r\n        clearTimeout(this.updateTimer);\r\n    }\r\n\r\n    onDeleteConfirmHandler = async (type) => {\r\n        if (type === 'delete') {\r\n            await this.props.deleteBurger(this.props.match.params.id);\r\n            if (this.props.deleteBurgerStatus === 'success') {\r\n                this.props.history.push('/dashboard/manage-menu');\r\n            } else {\r\n                this.showAlertHandler(this.props.deleteBurgerStatus.message, 'fail')\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n        let { burger } = setMenuIngredients(this.props.menu, this.props.match.params.id, this.props.menuIngs);\r\n        let ingredients = this.props.menuIngs;\r\n\r\n        if (this.state.isLoading) {\r\n            return <div className=\"u-flex-center dashboard__dashboard u-bg-white u-vh-100\"><Loader /></div>\r\n        }\r\n\r\n        return (\r\n            <React.Fragment>\r\n                {this.state.alert.status && <Alert\r\n                    close={this.onCloseHandler()}\r\n                    show={this.state.alert.show}\r\n                    status={this.state.alert.status}\r\n                    message={this.state.alert.message}\r\n                />}\r\n                {<ConfirmModal\r\n                    show={this.state.showModal}\r\n                    close={this.closeModal}\r\n                    message={this.state.message}\r\n                    edit={this.props.message}\r\n                    type={this.state.type}\r\n                    submit={this.onDeleteConfirmHandler}\r\n                />}\r\n                <Backdrop show={this.state.showModal} close={this.closeModal} />\r\n                <div className=\"dashboard__dashboard update-menu__detail\">\r\n                    <h2 className=\"heading-1 update-menu__detail-heading\">\r\n                        Update {burger.title} Recipe\r\n                </h2>\r\n                    <div className=\"update-menu__detail-image-bg\">\r\n                        <img src={this.state.previewPhoto} className=\"update-menu__detail-image-bg-image\" alt={burger.title} />\r\n                        <input type=\"file\" onChange={this.changeFileHandler} style={{ display: 'none' }} id=\"photo\" name=\"photo\" />\r\n                        <label className=\"btn btn__tertiary-goTo btn-sm\" htmlFor=\"photo\" >Choose an Image</label>\r\n                        <button onClick={this.uploadFileHandler} className=\"btn btn__success\">Upload</button>\r\n                    </div>\r\n                    <form className=\"update-menu__detail-form\" autoComplete=\"off\" onSubmit={this.updateBurgerDetails}>\r\n                        <Input\r\n                            inputtype=\"input\"\r\n                            type=\"text\"\r\n                            name=\"title\"\r\n                            label=\"name of ingredient\"\r\n                            value={this.state.formInput.title}\r\n                            onChange={this.onChangeHandler}\r\n                        />\r\n\r\n                        <Input\r\n                            inputtype=\"input\"\r\n                            type=\"number\"\r\n                            name=\"price\"\r\n                            label=\"price\"\r\n                            onChange={this.onChangeHandler}\r\n                            value={this.state.formInput.price}\r\n                        />\r\n\r\n                        <Input\r\n                            inputtype=\"submit\"\r\n                            value=\"save details\"\r\n                            variant=\"tertiary\"\r\n                        />\r\n\r\n                    </form>\r\n                    <div className=\"custom-burger\">\r\n                        <Burger ingredients={ingredients} />\r\n                        <div className=\"controls\">\r\n                            <IngredientControls\r\n                                ingredients={ingredients}\r\n                                NotfoodType={`${burger.foodType}`.startsWith('v') ? 'non-vegetarian' : 'vegetarian'}\r\n                                foodType={burger.foodType}\r\n                                hidePrice\r\n                                totalBurgerPrice={burger.price}\r\n                                success={this.updateBurgerIngredients}\r\n                                danger={this.resetIngredients}\r\n                                successField=\"Save Ingredients\"\r\n                                dangerField=\"Reset Ingredients\"\r\n                                addIngredient={this.props.addIngredient}\r\n                                removeIngredient={this.props.removeIngredient}\r\n                                successBtnType=\"submit\"\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"delete__burger\">\r\n                        <h4 className=\"heading-2 delete__burger-heading\">\r\n                            Delete this Burger\r\n                        </h4>\r\n                        <button className=\"btn btn__danger--outline\"\r\n                            onClick={this.onDeleteHandler}\r\n                        >\r\n                            Delete\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        ingredients: state.menu.ingredients,\r\n        menu: state.menu.Burgers,\r\n        menuIngs: state.menu.menuIngs,\r\n        updateBurgersStatus: state.menu.updateBurgersStatus,\r\n        deleteBurgerStatus: state.menu.deleteBurgerStatus\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        fetchIngredients: () => dispatch(menuActions.fetchIngredients()),\r\n        addIngredient: (name) => dispatch(menuActions.addIngredient(name)),\r\n        removeIngredient: (name) => dispatch(menuActions.removeIngredient(name)),\r\n        setIngredients: (ings) => dispatch(menuActions.setMenuIngs(ings)),\r\n        updateBurger: (data) => dispatch(menuActions.updateBurger(data)),\r\n        deleteBurger: (burger) => dispatch(menuActions.deleteBurger(burger))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UpdateBurgerDetail);","import React from 'react';\r\n\r\nconst Alert = props => {\r\n    return (\r\n        <div className={`alert alert__${props.show} alert--${props.status} ${props.className}`}>\r\n            {props.message}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Alert;\r\n","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(n);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","export const onChangeFormInput = (e, state) => {\r\n    return {\r\n        ...state,\r\n        formInput: {\r\n            ...state.formInput,\r\n            [e.target.name]: e.target.value\r\n        }\r\n    }\r\n}\r\n\r\nexport const clearFields = (state) => {\r\n    let stateCopy = { ...state.formInput };\r\n    let formInput = {};\r\n    Object.keys(stateCopy).map(el => {\r\n        return formInput[el] = ''\r\n    })\r\n    return formInput;\r\n}","/* \n(The MIT License)\nCopyright (c) 2014-2019 Halász Ádám <mail@adamhalasz.com>\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\n//  Unique Hexatridecimal ID Generator\n// ================================================\n\n//  Dependencies\n// ================================================\nvar pid = process && process.pid ? process.pid.toString(36) : '' ;\nvar address = '';\nif(typeof __webpack_require__ !== 'function'){\n    var mac = '', networkInterfaces = require('os').networkInterfaces();\n    for(let interface_key in networkInterfaces){\n        const networkInterface = networkInterfaces[interface_key];\n        const length = networkInterface.length;\n        for(var i = 0; i < length; i++){\n            if(networkInterface[i].mac && networkInterface[i].mac != '00:00:00:00:00:00'){\n                mac = networkInterface[i].mac; break;\n            }\n        }\n    }\n    address = mac ? parseInt(mac.replace(/\\:|\\D+/gi, '')).toString(36) : '' ;\n} \n\n//  Exports\n// ================================================\nmodule.exports = module.exports.default = function(prefix, suffix){ return (prefix ? prefix : '') + address + pid + now().toString(36) + (suffix ? suffix : ''); }\nmodule.exports.process = function(prefix, suffix){ return (prefix ? prefix : '') + pid + now().toString(36) + (suffix ? suffix : ''); }\nmodule.exports.time    = function(prefix, suffix){ return (prefix ? prefix : '') + now().toString(36) + (suffix ? suffix : ''); }\n\n//  Helpers\n// ================================================\nfunction now(){\n    var time = Date.now();\n    var last = now.last || time;\n    return now.last = time > last ? time : last + 1;\n}\n","import React from 'react'\r\n\r\nconst AddorRemoveButton = props => {\r\n    let disabled = false;\r\n    let classes;\r\n    if (props.items === 0) {\r\n        disabled = true;\r\n        classes = \"btn btn__primary-disabled\";\r\n    }\r\n    return (\r\n        <div className={`btn__addOrRemove ${props.className}`}>\r\n            <button type=\"button\" onClick={props.addItem} className={props.classes}>+</button>\r\n            <p className={`u-text-tertiary ${props.valueClass}`}>{props.items}</p>\r\n            <button type=\"button\" onClick={props.removeItem} disabled={disabled} className={classes || props.classes}>-</button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AddorRemoveButton;\r\n","import React from 'react'\r\n\r\nconst Input = props => {\r\n    if (props.inputtype === 'input') {\r\n        let required = props.required === false ? false : true;\r\n        return (\r\n            <div className={`form__group `}>\r\n                <label className=\"form__label\">{props.label}</label>\r\n                <input\r\n                    type={props.type}\r\n                    name={props.name}\r\n                    id={props.name}\r\n                    placeholder={props.placeholder}\r\n                    className={`form__${props.inputtype} ${props.className}`}\r\n                    onChange={props.onChange}\r\n                    minLength={props.minLength}\r\n                    value={props.value}\r\n                    required={required}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n\r\n    if (props.inputtype === 'submit') {\r\n        let markup = <input type=\"submit\"\r\n            value={props.value}\r\n            className={`btn btn__${props.variant} ${props.className}`}\r\n            {...props}\r\n        />\r\n\r\n        return (\r\n            <div className={`form__group ${props.formGroupClass}`}>\r\n                {markup}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Input\r\n","import * as actionTypes from './actions';\r\nimport axios from 'axios';\r\n\r\n\r\nexport const addIngredient = (name) => {\r\n    return {\r\n        type: actionTypes.ADD_INGREDIENT,\r\n        name: name\r\n    };\r\n};\r\n\r\nexport const removeIngredient = (name) => {\r\n    return {\r\n        type: actionTypes.REMOVE_INGREDIENT,\r\n        name: name\r\n    };\r\n};\r\n\r\nexport const clearIngredientValues = ingredients => {\r\n    return {\r\n        type: actionTypes.CLEAR_INGREDIENT_VALUES,\r\n        ingredients: ingredients\r\n    }\r\n}\r\n\r\nexport const clearPriceValue = () => {\r\n    return {\r\n        type: actionTypes.CLEAR_TOTAL_PRICE,\r\n    };\r\n};\r\n\r\nexport const fetchIngredientsSuccess = (ingredients) => {\r\n    return {\r\n        type: actionTypes.FETCH_INGREDIENTS_SUCCESS,\r\n        ingredients,\r\n    }\r\n}\r\n\r\nexport const fetchIngredientsFailed = (error) => {\r\n    return {\r\n        type: actionTypes.FETCH_INGREDIENTS_FAILED,\r\n        error\r\n    }\r\n}\r\nexport const initIngredients = () => {\r\n    return async dispatch => {\r\n        try {\r\n            const response = await axios.get(`/api/v1/ingredients`);\r\n            dispatch(fetchIngredientsSuccess(response.data.ingredients));\r\n        } catch (err) {\r\n            dispatch(fetchIngredientsFailed({ ...err }.response.data));\r\n        }\r\n    }\r\n};\r\n","import * as actionTypes from './actions';\r\nimport axios from 'axios';\r\nimport { initIngredients } from './burgerBuilder';\r\n\r\n\r\nexport const fetchBurgersSuccess = burgers => {\r\n    return {\r\n        type: actionTypes.FETCH_BURGERS_SUCCESS,\r\n        burgers\r\n    };\r\n};\r\n\r\nexport const fetchBurgersFailed = (err) => {\r\n    return {\r\n        type: actionTypes.FETCH_BURGERS_FAILED,\r\n        error: err\r\n    }\r\n}\r\n\r\nexport const fetchBurgersInit = () => {\r\n    return {\r\n        type: actionTypes.FETCH_BURGERS_INIT\r\n    }\r\n}\r\n////////////////////////////////////////////////////////////////\r\n\r\n\r\nexport const fetchIngredientsInit = () => {\r\n    return {\r\n        type: actionTypes.FETCH_INGREDIENTS_INIT\r\n    }\r\n}\r\n\r\nexport const fetchIngredientsSuccess = (ingredients) => {\r\n    return {\r\n        type: actionTypes.FETCH_INGREDIENTS_SUCCESS,\r\n        ingredients,\r\n    }\r\n}\r\n\r\nexport const fetchIngredientsFailed = (error) => {\r\n    return {\r\n        type: actionTypes.FETCH_INGREDIENTS_FAILED,\r\n        error\r\n    }\r\n}\r\n\r\nexport const fetchIngredients = () => {\r\n    return async dispatch => {\r\n        dispatch(fetchIngredientsInit())\r\n        try {\r\n            const response = await axios.get(`/api/v1/ingredients`);\r\n            dispatch(fetchIngredientsSuccess(response.data.ingredients));\r\n        } catch (err) {\r\n            dispatch(fetchIngredientsFailed({ ...err }.response.data));\r\n        }\r\n    }\r\n};\r\n\r\n\r\n///////////////////////////////////////////////////////////////\r\nexport const initBurgers = () => {\r\n    return async dispatch => {\r\n        dispatch(fetchBurgersInit());\r\n        try {\r\n            const response = await axios.get(`/api/v1/burgers`);\r\n            const burgers = response.data.burgers\r\n            dispatch(fetchBurgersSuccess(burgers));\r\n        } catch (err) {\r\n            const error = { ...err }.response ? { ...err }.response : err;\r\n            dispatch(fetchBurgersFailed(error));\r\n        }\r\n    }\r\n};\r\n\r\n\r\n/////////////////////////////////////////////////////////////\r\n\r\nexport const addIngredient = (name) => {\r\n    return {\r\n        type: actionTypes.UPDATE_MENU_ADD_INGREDIENT,\r\n        name\r\n    };\r\n};\r\n\r\nexport const removeIngredient = (name) => {\r\n    return {\r\n        type: actionTypes.UPDATE_MENU_REMOVE_INGREDIENT,\r\n        name\r\n    };\r\n};\r\n\r\n///////////////////////////////////////////////////////////////\r\n\r\nexport const setMenuIngs = (ings) => {\r\n    return {\r\n        type: actionTypes.SET_MENU_INGREDIENTS,\r\n        ings\r\n    }\r\n}\r\n///////////////////////////////////////////////////////////////\r\n\r\nexport const updateBurgerFailed = (error) => {\r\n    return {\r\n        type: actionTypes.UPDATE_BURGER_FAILED,\r\n        error,\r\n    }\r\n}\r\n\r\nexport const updateBurgerSuccess = response => {\r\n    return {\r\n        type: actionTypes.UPDATE_BURGER_SUCCESS,\r\n        status: response\r\n    }\r\n}\r\n\r\nexport const updateBurger = (burger) => {\r\n    return async dispatch => {\r\n        let id = burger._id ? burger._id : burger.get('_id');\r\n        try {\r\n            const res = await axios({\r\n                url: `/api/v1/burgers/${id}`,\r\n                data: burger,\r\n                method: 'PATCH'\r\n            })\r\n\r\n            dispatch(updateBurgerSuccess(res.data))\r\n            dispatch(initBurgers());\r\n            dispatch(initIngredients());\r\n        } catch (err) {\r\n            dispatch(updateBurgerFailed({ ...err.response.data }))\r\n        }\r\n    }\r\n}\r\n\r\n////////////////////////////////////////////////////////////////////\r\n\r\n\r\nexport const createBurgerFailed = (error) => {\r\n    return {\r\n        type: actionTypes.CREATE_BURGER_FAILED,\r\n        error,\r\n    }\r\n}\r\n\r\nexport const createBurgerSuccess = response => {\r\n    return {\r\n        type: actionTypes.CREATE_BURGER_SUCCESS,\r\n        status: response\r\n    }\r\n}\r\n\r\nexport const createBurger = (burger) => {\r\n    return async dispatch => {\r\n        try {\r\n            const res = await axios({\r\n                url: `/api/v1/burgers`,\r\n                data: burger,\r\n                method: 'POST'\r\n            })\r\n            dispatch(createBurgerSuccess(res.data))\r\n        } catch (err) {\r\n            dispatch(createBurgerFailed({ ...err.response.data }))\r\n        }\r\n    }\r\n}\r\n////////////////////////////////////////////////////////////////////\r\n\r\nexport const deleteBurgerInit = () => {\r\n    return {\r\n        type: actionTypes.DELETE_BURGER_INIT\r\n    }\r\n}\r\n\r\n\r\nexport const deleteBurgerFailed = (error) => {\r\n    return {\r\n        type: actionTypes.DELETE_BURGER_FAILED,\r\n        error,\r\n    }\r\n}\r\n\r\nexport const deleteBurgerSuccess = response => {\r\n    return {\r\n        type: actionTypes.DELETE_BURGER_SUCCESS,\r\n        response\r\n    }\r\n}\r\n\r\nexport const deleteBurger = (id) => {\r\n    return async dispatch => {\r\n        try {\r\n            dispatch(deleteBurgerInit());\r\n\r\n            const res = await axios({\r\n                url: `/api/v1/burgers/${id}`,\r\n                method: 'delete'\r\n            })\r\n            dispatch(deleteBurgerSuccess(res.data))\r\n        } catch (err) {\r\n            dispatch(deleteBurgerFailed({ ...err.response.data }))\r\n        }\r\n    }\r\n}\r\n\r\n/////////////////////////////////////////////////////////////////","import React, { Component } from 'react';\r\n\r\nclass Ingredients extends Component {\r\n    render() {\r\n        let markup;\r\n\r\n        switch (this.props.ingredient) {\r\n            case 'breadTop':\r\n                markup = <div className=\"bread-top\"></div>\r\n                break;\r\n            case 'breadBottom':\r\n                markup = <div className=\"bread-bottom\"></div>\r\n                break;\r\n            case 'chicken':\r\n                markup = <div className=\"chicken\"></div>\r\n                break;\r\n            case 'aloo':\r\n                markup = <div className=\"aloo\"></div>\r\n                break;\r\n            case 'lettuce':\r\n                markup = <div className=\"lettuce\"></div>\r\n                break;\r\n            case 'paneer':\r\n                markup = <div className=\"paneer\"></div>\r\n                break;\r\n            case 'cheese':\r\n                markup = <div className=\"cheese\"></div>\r\n                break;\r\n            case 'tomatoes':\r\n                markup = <div className=\"tomatoes\"></div>\r\n                break;\r\n            default:\r\n                markup = null;\r\n                break;\r\n        }\r\n        return markup;\r\n    }\r\n}\r\n\r\nexport default Ingredients;\r\n","import React, { Component } from \"react\";\r\nimport Ingredient from \"./Ingredients/Ingredients\";\r\nimport uniqid from \"uniqid\";\r\n\r\nclass Burger extends Component {\r\n  render() {\r\n    let ingredients = null;\r\n    if (this.props.ingredients) {\r\n      ingredients = Object.keys(this.props.ingredients).map((el) => {\r\n        return [...Array(this.props.ingredients[el].value)].map(() => {\r\n          return <Ingredient key={uniqid()} ingredient={el} />;\r\n        });\r\n      });\r\n    }\r\n\r\n    return (\r\n      <div className=\"burger\">\r\n        <Ingredient ingredient=\"breadTop\" />\r\n        {ingredients}\r\n        <Ingredient ingredient=\"breadBottom\" />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Burger;\r\n","import React from 'react';\r\nimport AddorRemoveBtn from '../../Buttons/AddorRemoveButton';\r\nconst buildControl = props => {\r\n\r\n    return (\r\n        <div className=\"controls__ingredient\">\r\n            <img src={props.photo} alt=\"ingredient\" className=\"controls__ingredient-img\" />\r\n            <p className=\"controls__ingredient-name\">{props.name}</p>\r\n            <AddorRemoveBtn\r\n                addItem={props.addIng}\r\n                removeItem={props.removeIng}\r\n                items={parseInt(props.items)}\r\n                classes=\"btn btn__primary btn__primary-round\"\r\n                valueClass=\"u-fontSize-2rem\" />\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default buildControl;\r\n","import React, { Component } from 'react';\r\nimport Controls from '../Burger/Controls/Controls';\r\n// import uniqid from 'uniqid';\r\n\r\nexport default class IngredientControls extends Component {\r\n    render() {\r\n        let markupIngs;\r\n        let ings = {};\r\n        let disabled = true;\r\n\r\n        let style = this.props.hidePrice ? { display: 'none' } : null\r\n\r\n        this.props.ingredients ?\r\n            markupIngs = Object.keys(this.props.ingredients)\r\n                .filter((el) => {\r\n                    return this.props.ingredients[el].foodType !== this.props.NotfoodType;\r\n                })\r\n                .map((el2) => {\r\n                    if (this.props.ingredients[el2].value > 0) {\r\n                        disabled = false;\r\n                        ings[el2] = {\r\n                            name: el2,\r\n                            _id: this.props.ingredients[el2]._id,\r\n                            amount: this.props.ingredients[el2].value,\r\n                        }\r\n                    }\r\n                    return (\r\n                        <Controls name={el2} key={el2} items={this.props.ingredients[el2].value} photo={this.props.ingredients[el2].photo}\r\n                            addIng={() => this.props.addIngredient(el2)}\r\n                            removeIng={() => this.props.removeIngredient(el2)}\r\n                        />\r\n                    );\r\n                }) : markupIngs = '';\r\n\r\n        return (\r\n            <div className={`controls__ingredients ${this.props.className}`}>\r\n                <p className=\"controls__price\" style={style}>\r\n                    Total Price:&nbsp;\r\n                <span className=\"controls__price-value\" >\r\n                        Rs&nbsp;{this.props.totalBurgerPrice}\r\n                    </span>\r\n                </p>\r\n                {markupIngs}\r\n                <button\r\n                    type=\"button\"\r\n                    onClick={this.props.danger} className=\"btn btn__danger--outline\"> {this.props.dangerField} </button>\r\n                <button\r\n                    type={this.props.successBtnType ? this.props.successBtnType : \"button\"}\r\n                    onClick={() => this.props.success(ings, this.props.foodType)} disabled={disabled}\r\n                    className={`btn btn__success${disabled === true ? \"--outline-disabled\" : \"--outline\"}`}>{this.props.successField}</button>\r\n            </div >\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport default class Modal extends Component {\r\n    render() {\r\n        return (\r\n            <div className={`modal modal__${this.props.show} ${this.props.className}`}>\r\n                {this.props.children}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport Modal from './Modal';\r\n\r\n\r\nclass ConfirmModal extends Component {\r\n\r\n    onSubmitHandler = () => {\r\n        this.props.submit(this.props.type)\r\n        this.props.close();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Modal className=\"confirm__modal\" show={this.props.show}>\r\n                <h4 className=\"confirm__modal-message\">{this.props.message}</h4>\r\n                <button onClick={this.onSubmitHandler}\r\n                    className=\"btn btn__success confirm__modal-btn-success\">Yes</button>\r\n                <button\r\n                    onClick={this.props.close}\r\n                    className=\"btn btn__danger confirm__modal-btn-danger\">No</button>\r\n            </Modal>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ConfirmModal;"],"sourceRoot":""}