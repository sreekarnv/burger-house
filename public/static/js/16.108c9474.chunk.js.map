{"version":3,"sources":["app/Pages/DashBoard/User/components/updateUserData.js","app/Pages/DashBoard/User/components/updateUserPassword.js","app/Pages/DashBoard/User/Profile.js","app/Shared/Components/Alert/Alert.js","app/Shared/Utils/formInput.js","app/Shared/Components/Form/Input.js","app/Shared/Components/Modal/Modal.js","app/Shared/Components/Modal/ConfirmModal.js"],"names":["UpdateUserData","state","formInput","name","props","user","email","photo","alert","show","status","message","previewPhoto","fileUploaded","showAlertHandler","setState","onCloseHandler","closeAlertTimer","setTimeout","onChangeHandler","e","onChangeFormInput","onFileChangeHandler","target","files","URL","createObjectURL","onSubmitHandler","a","preventDefault","formData","FormData","append","updateUserData","userDataStatus","Fragment","this","Alert","close","onSubmit","autoComplete","className","Input","inputtype","type","label","onChange","value","id","style","display","htmlFor","src","alt","loading","variant","Component","connect","auth","updateUserDataInit","updateUserDataStatus","dispatch","data","authActions","UpdateUserPassword","passwordCurrent","password","passwordConfirm","updateUserPassword","userPasswordStatus","LogoutTimer","history","replace","clearTimeout","minLength","updateUserPasswordInit","updateUserPasswordStatus","Profile","showModal","closeModal","onDeleteHandler","deleteCurrentUser","deleteUserStatus","push","deleteUserInit","Loader","ConfirmModal","edit","submit","showAlert","onClick","clearFields","stateCopy","Object","keys","map","el","required","placeholder","markup","formGroupClass","Modal","children"],"mappings":"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","file":"static/js/16.108c9474.chunk.js","sourcesContent":["import React from 'react'\r\nimport Input from '../../../../Shared/Components/Form/Input'\r\nimport { connect } from 'react-redux';\r\nimport { Component } from 'react'\r\n\r\nimport { onChangeFormInput } from '../../../../Shared/Utils/formInput';\r\n\r\nimport * as authActions from '../../../../Store/actions/auth';\r\nimport Alert from '../../../../Shared/Components/Alert/Alert';\r\n\r\n\r\nclass UpdateUserData extends Component {\r\n    state = {\r\n        formInput: {\r\n            name: this.props.user.name,\r\n            email: this.props.user.email,\r\n            photo: this.props.user.photo\r\n        },\r\n        alert: {\r\n            show: false,\r\n            status: '',\r\n            message: '',\r\n        },\r\n        previewPhoto: this.props.user.photo,\r\n        fileUploaded: false,\r\n    }\r\n\r\n    showAlertHandler = (message, status) => {\r\n        this.setState({\r\n            ...this.state,\r\n            alert: {\r\n                show: true,\r\n                status,\r\n                message,\r\n            }\r\n        })\r\n    }\r\n\r\n    onCloseHandler = () => {\r\n        this.closeAlertTimer = setTimeout(() => {\r\n            this.setState({\r\n                ...this.state,\r\n                alert: {\r\n                    show: false, status: '', message: ''\r\n                }\r\n            });\r\n        }, 2000)\r\n    }\r\n\r\n    onChangeHandler = e => {\r\n        let formInput = onChangeFormInput(e, { ...this.state })\r\n        this.setState({ ...formInput })\r\n    }\r\n\r\n    onFileChangeHandler = e => {\r\n        this.setState({\r\n            ...this.state,\r\n            formInput: {\r\n                ...this.state.formInput,\r\n                photo: e.target.files[0]\r\n            },\r\n            fileUploaded: true,\r\n            previewPhoto: URL.createObjectURL(e.target.files[0])\r\n        })\r\n    }\r\n\r\n    onSubmitHandler = async e => {\r\n        e.preventDefault();\r\n        let formData = new FormData();\r\n        formData.append('name', this.state.formInput.name);\r\n        formData.append('email', this.state.formInput.email);\r\n        if (this.state.fileUploaded) {\r\n            formData.append('photo', this.state.formInput.photo);\r\n        }\r\n        await this.props.updateUserData(formData)\r\n        let message, status;\r\n        if (this.props.userDataStatus === 'success') {\r\n            status = this.props.userDataStatus\r\n            message = 'User details updated Successfully'\r\n            this.setState({\r\n                formInput: {\r\n                    ...this.props.photo,\r\n                    name: this.props.user.name,\r\n                    email: this.props.user.email,\r\n                    photo: this.props.user.photo\r\n                },\r\n                previewPhoto: this.props.user.photo,\r\n                fileUploaded: false,\r\n            })\r\n        } else {\r\n            status = this.props.userDataStatus.status;\r\n            message = this.props.userDataStatus.message;\r\n            this.setState({\r\n                fileUploaded: false,\r\n            })\r\n        }\r\n        this.showAlertHandler(message, status)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                {this.state.alert.status && <Alert\r\n                    close={this.onCloseHandler()}\r\n                    show={this.state.alert.show}\r\n                    status={this.state.alert.status}\r\n                    message={this.state.alert.message}\r\n                />}\r\n                <form onSubmit={this.onSubmitHandler} autoComplete=\"off\">\r\n                    <div className=\"form__group\">\r\n                        <h2 className=\"heading-1 u-text-primary u-ftwt-400\">\r\n                            Update User Details\r\n                    </h2>\r\n                    </div>\r\n                    <Input\r\n                        inputtype=\"input\"\r\n                        name=\"name\"\r\n                        type=\"text\"\r\n                        label=\"name\"\r\n                        onChange={this.onChangeHandler}\r\n                        value={this.state.formInput.name}\r\n                    />\r\n\r\n                    <Input\r\n                        inputtype=\"input\"\r\n                        name=\"email\"\r\n                        type=\"email\"\r\n                        label=\"Email\"\r\n                        onChange={this.onChangeHandler}\r\n                        value={this.state.formInput.email}\r\n                    />\r\n\r\n                    <div className=\"form__group u-flex-between\">\r\n                        <div>\r\n                            <input type=\"file\" id=\"photo\" onChange={this.onFileChangeHandler} style={{ display: 'none' }} />\r\n                            <label htmlFor=\"photo\" className=\"btn btn__tertiary-goTo btn__sm\">Choose Image</label>\r\n                        </div>\r\n                        <div className=\"update__user-data-preview-img-bg \">\r\n                            <img src={this.state.previewPhoto} className=\"update__user-data-preview-img-image\" alt={this.state.formInput.name} />\r\n                        </div>\r\n                    </div>\r\n\r\n                    <Input\r\n                        inputtype=\"submit\"\r\n                        value={this.props.loading ? 'Loading....' : \"update details\"}\r\n                        variant=\"tertiary\"\r\n                    />\r\n\r\n                </form >\r\n            </React.Fragment>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.auth.user,\r\n        loading: state.auth.updateUserDataInit,\r\n        userDataStatus: state.auth.updateUserDataStatus,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        updateUserData: (data) => dispatch(authActions.updateCurrentUser(data)),\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UpdateUserData);\r\n","import React, { Component } from 'react'\r\nimport Input from '../../../../Shared/Components/Form/Input'\r\nimport { connect } from 'react-redux';\r\n\r\nimport Alert from '../../../../Shared/Components/Alert/Alert';\r\n\r\nimport { onChangeFormInput } from '../../../../Shared/Utils/formInput';\r\n\r\nimport * as authActions from '../../../../Store/actions/auth';\r\n\r\n\r\nclass UpdateUserPassword extends Component {\r\n    state = {\r\n        formInput: {\r\n            passwordCurrent: '',\r\n            password: '',\r\n            passwordConfirm: '',\r\n        },\r\n        alert: {\r\n            show: false,\r\n            status: '',\r\n            message: '',\r\n        },\r\n    }\r\n\r\n    showAlertHandler = (message, status) => {\r\n        this.setState({\r\n            ...this.state,\r\n            alert: {\r\n                show: true,\r\n                status,\r\n                message,\r\n            }\r\n        })\r\n    }\r\n\r\n    onCloseHandler = () => {\r\n        this.closeAlertTimer = setTimeout(() => {\r\n            this.setState({\r\n                ...this.state,\r\n                alert: {\r\n                    show: false, status: '', message: ''\r\n                }\r\n            });\r\n        }, 2000)\r\n    }\r\n\r\n    onChangeHandler = e => {\r\n        let formInput = onChangeFormInput(e, { ...this.state })\r\n        this.setState({ ...formInput })\r\n    }\r\n\r\n    onSubmitHandler = async e => {\r\n        e.preventDefault();\r\n        await this.props.updateUserPassword(this.state.formInput)\r\n        let message, status;\r\n        if (this.props.userPasswordStatus === 'success') {\r\n            status = this.props.userPasswordStatus\r\n            message = 'User Password updated Successfully'\r\n            this.showAlertHandler(message, status)\r\n\r\n            this.LogoutTimer = setTimeout(() => {\r\n                this.props.history.replace('/logout');\r\n            }, 1500)\r\n\r\n        } else {\r\n            status = this.props.userPasswordStatus.status;\r\n            message = this.props.userPasswordStatus.message;\r\n            this.showAlertHandler(message, status)\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        clearTimeout(this.LogoutTimer)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                {this.state.alert.status && <Alert\r\n                    close={this.onCloseHandler()}\r\n                    show={this.state.alert.show}\r\n                    status={this.state.alert.status}\r\n                    message={this.state.alert.message}\r\n                />}\r\n                <form onSubmit={this.onSubmitHandler}>\r\n                    <div className=\"form__group\">\r\n                        <h2 className=\"heading-1 u-text-primary u-ftwt-400\">\r\n                            Update User Password\r\n                    </h2>\r\n                    </div>\r\n                    <Input\r\n                        inputtype=\"input\"\r\n                        name=\"passwordCurrent\"\r\n                        type=\"password\"\r\n                        label=\"Current Password\"\r\n                        onChange={this.onChangeHandler}\r\n                        value={this.state.formInput.passwordCurrent}\r\n                        minLength={6}\r\n                    />\r\n\r\n                    <Input\r\n                        inputtype=\"input\"\r\n                        name=\"password\"\r\n                        type=\"password\"\r\n                        label=\"Password\"\r\n                        onChange={this.onChangeHandler}\r\n                        value={this.state.formInput.password}\r\n                        minLength={6}\r\n                    />\r\n\r\n                    <Input\r\n                        inputtype=\"input\"\r\n                        name=\"passwordConfirm\"\r\n                        type=\"password\"\r\n                        label=\"Password Confirm\"\r\n                        onChange={this.onChangeHandler}\r\n                        value={this.state.formInput.passwordConfirm}\r\n                        minLength={6}\r\n                    />\r\n\r\n                    <Input\r\n                        inputtype=\"submit\"\r\n                        value=\"update password\"\r\n                        variant=\"tertiary\"\r\n                    />\r\n                </form >\r\n\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.auth.user,\r\n        loading: state.auth.updateUserPasswordInit,\r\n        userPasswordStatus: state.auth.updateUserPasswordStatus,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        updateUserPassword: (data) => dispatch(authActions.updateCurrentUserPassword(data))\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UpdateUserPassword);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport UpdateUserData from './components/updateUserData'\r\nimport UpdateUserPassword from './components/updateUserPassword';\r\nimport Loader from '../../../Shared/Components/Loader/Loader';\r\nimport ConfirmModal from './../../../Shared/Components/Modal/ConfirmModal';\r\n\r\nimport * as authActions from './../../../Store/actions/auth';\r\nimport Backdrop from '../../../Shared/Components/BackDrop/BackDrop';\r\n\r\nclass Profile extends Component {\r\n    state = {\r\n        showModal: false,\r\n        message: '',\r\n        type: ''\r\n    }\r\n\r\n\r\n    showModal = (message, type) => {\r\n        this.setState({ showModal: true, message, type })\r\n    }\r\n\r\n    closeModal = () => {\r\n        this.setState({ showModal: false, message: '', type: '' })\r\n    }\r\n\r\n    onDeleteHandler = () => {\r\n        const message = 'Are you sure you want to delete your account ? ';\r\n        this.showModal(message, 'delete')\r\n    }\r\n\r\n    onSubmitHandler = async (type) => {\r\n        if (type === 'delete') {\r\n            await this.props.deleteCurrentUser();\r\n            if (this.props.deleteUserStatus === 'success') {\r\n                this.props.history.push('/logout');\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (this.props.deleteUserInit) {\r\n            return <div className=\"u-flex-center u-vh-100 u-bg-white dashboard__dashboard\"><Loader /></div>\r\n        }\r\n\r\n        if (this.props.user) {\r\n            return (\r\n                <React.Fragment  >\r\n                    {\r\n                        <ConfirmModal\r\n                            show={this.state.showModal}\r\n                            close={this.closeModal}\r\n                            message={this.state.message}\r\n                            edit={this.props.message}\r\n                            type={this.state.type}\r\n                            submit={this.onSubmitHandler}\r\n                        />\r\n                    }\r\n                    <Backdrop show={this.state.showModal} close={this.closeModal} />\r\n                    <div className=\"dashboard__dashboard update__user\">\r\n                        <div className=\"u-mx-auto update__user-data\">\r\n                            <UpdateUserData\r\n                                {...this.props}\r\n                                showAlert={this.showAlertHandler} />\r\n                        </div>\r\n                        <div className=\"u-mx-auto update__user-password\">\r\n                            <UpdateUserPassword {...this.props} />\r\n                        </div>\r\n                        <div className=\"delete__user\">\r\n                            <h4 className=\"heading-1 delete__user-heading\">Delete My Account</h4>\r\n                            <button\r\n                                onClick={this.onDeleteHandler}\r\n                                className=\"btn btn__danger--outline\">Delete</button>\r\n                        </div>\r\n                    </div>\r\n                </React.Fragment >\r\n            )\r\n        } else {\r\n            return '';\r\n        }\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.auth.user,\r\n        updateUserDataInit: state.auth.updateUserDataInit,\r\n        deleteUserInit: state.auth.deleteUserInit,\r\n        deleteUserStatus: state.auth.deleteUserStatus\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        deleteCurrentUser: () => dispatch(authActions.deleteCurrentUser())\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Profile);","import React from 'react';\r\n\r\nconst Alert = props => {\r\n    return (\r\n        <div className={`alert alert__${props.show} alert--${props.status} ${props.className}`}>\r\n            {props.message}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Alert;\r\n","export const onChangeFormInput = (e, state) => {\r\n    return {\r\n        ...state,\r\n        formInput: {\r\n            ...state.formInput,\r\n            [e.target.name]: e.target.value\r\n        }\r\n    }\r\n}\r\n\r\nexport const clearFields = (state) => {\r\n    let stateCopy = { ...state.formInput };\r\n    let formInput = {};\r\n    Object.keys(stateCopy).map(el => {\r\n        return formInput[el] = ''\r\n    })\r\n    return formInput;\r\n}","import React from 'react'\r\n\r\nconst Input = props => {\r\n    if (props.inputtype === 'input') {\r\n        let required = props.required === false ? false : true;\r\n        return (\r\n            <div className={`form__group `}>\r\n                <label className=\"form__label\">{props.label}</label>\r\n                <input\r\n                    type={props.type}\r\n                    name={props.name}\r\n                    id={props.name}\r\n                    placeholder={props.placeholder}\r\n                    className={`form__${props.inputtype} ${props.className}`}\r\n                    onChange={props.onChange}\r\n                    minLength={props.minLength}\r\n                    value={props.value}\r\n                    required={required}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n\r\n    if (props.inputtype === 'submit') {\r\n        let markup = <input type=\"submit\"\r\n            value={props.value}\r\n            className={`btn btn__${props.variant} ${props.className}`}\r\n            {...props}\r\n        />\r\n\r\n        return (\r\n            <div className={`form__group ${props.formGroupClass}`}>\r\n                {markup}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Input\r\n","import React, { Component } from 'react'\r\n\r\nexport default class Modal extends Component {\r\n    render() {\r\n        return (\r\n            <div className={`modal modal__${this.props.show} ${this.props.className}`}>\r\n                {this.props.children}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport Modal from './Modal';\r\n\r\n\r\nclass ConfirmModal extends Component {\r\n\r\n    onSubmitHandler = () => {\r\n        this.props.submit(this.props.type)\r\n        this.props.close();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Modal className=\"confirm__modal\" show={this.props.show}>\r\n                <h4 className=\"confirm__modal-message\">{this.props.message}</h4>\r\n                <button onClick={this.onSubmitHandler}\r\n                    className=\"btn btn__success confirm__modal-btn-success\">Yes</button>\r\n                <button\r\n                    onClick={this.props.close}\r\n                    className=\"btn btn__danger confirm__modal-btn-danger\">No</button>\r\n            </Modal>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ConfirmModal;"],"sourceRoot":""}