{"version":3,"sources":["app/Pages/Register/Register.js","app/Shared/Components/Alert/Alert.js","app/Shared/hoc/UnAuthRoutes.js"],"names":["Register","state","formInput","name","email","password","passwordConfirm","location","coordinates","showAlert","onChangeHandler","e","onChangeFormInput","setState","onSubmitHandler","a","preventDefault","props","registerUser","clearFields","onCloseHandler","closeAlertTimer","setTimeout","registerStatus","data","status","history","replace","navigator","geolocation","getCurrentPosition","res","console","log","coords","longitude","latitude","clearTimeout","this","show","message","close","className","onSubmit","autoComplete","inputtype","type","label","onChange","value","minLength","registerInit","variant","Component","connect","auth","user","dispatch","authActions","Alert","UnAuthRoutes","checkAuthState","checkAuthInit","role","to","children"],"mappings":"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","file":"static/js/20.17a5c184.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport Input from '../../Shared/Components/Form/Input';\r\n\r\nimport * as authActions from '../../Store/actions/auth';\r\n\r\nimport { onChangeFormInput, clearFields } from '../../Shared/Utils/formInput';\r\n\r\nimport Alert from '../../Shared/Components/Alert/Alert';\r\nimport UnAuthRoutes from '../../Shared/hoc/UnAuthRoutes';\r\n\r\n\r\nclass Register extends Component {\r\n    state = {\r\n        formInput: {\r\n            name: '',\r\n            email: '',\r\n            password: '',\r\n            passwordConfirm: '',\r\n            location: {\r\n                coordinates: null\r\n            },\r\n        },\r\n        showAlert: false\r\n    }\r\n\r\n    componentDidMount() {\r\n        navigator.geolocation.getCurrentPosition((res) => {\r\n            console.log(res);\r\n            this.setState({\r\n                formInput: {\r\n                    ...this.state.formInput,\r\n                    location: {\r\n                        coordinates: [res.coords.longitude, res.coords.latitude]\r\n                    }\r\n                }\r\n            })\r\n        });\r\n    }\r\n\r\n\r\n    onChangeHandler = e => {\r\n        let formInput = onChangeFormInput(e, { ...this.state })\r\n        this.setState({ ...formInput })\r\n    }\r\n\r\n    onSubmitHandler = async e => {\r\n        e.preventDefault();\r\n        await this.props.registerUser(this.state.formInput)\r\n        let formInput = clearFields(this.state);\r\n\r\n        this.setState({ formInput, showAlert: true })\r\n    }\r\n\r\n    onCloseHandler = () => {\r\n        this.closeAlertTimer = setTimeout(() => {\r\n            this.setState({ showAlert: false });\r\n            if (this.props.registerStatus.data.status === 'success') {\r\n                this.props.history.replace('/confirm-email-message')\r\n            }\r\n        }, 2000)\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        clearTimeout(this.closeAlertTimer);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <UnAuthRoutes>\r\n                {this.state.showAlert && this.props.registerStatus &&\r\n                    <Alert\r\n                        show={this.state.showAlert}\r\n                        status={this.props.registerStatus === 'success' ? this.props.registerStatus : this.props.registerStatus.data.status}\r\n                        message={this.props.registerStatus.data.status === 'success'\r\n                            ? \"User Created Successfully\"\r\n                            : this.props.registerStatus.data.message}\r\n                        close={this.onCloseHandler()}\r\n                    />}\r\n                <section className=\"register\">\r\n\r\n                    <form className=\"register__form\" onSubmit={this.onSubmitHandler} autoComplete=\"off\">\r\n                        <div className=\"form__group\">\r\n                            <h2 className=\"heading-1 u-text-primary u-ftwt-400\">Create an Account</h2>\r\n                        </div>\r\n                        <Input\r\n                            name=\"name\"\r\n                            inputtype=\"input\"\r\n                            type=\"text\"\r\n                            label=\"Name\"\r\n                            onChange={this.onChangeHandler}\r\n                            value={this.state.formInput.name}\r\n                        />\r\n\r\n                        <Input\r\n                            name=\"email\"\r\n                            inputtype=\"input\"\r\n                            type=\"email\"\r\n                            label=\"Email\"\r\n                            onChange={this.onChangeHandler}\r\n                            value={this.state.formInput.email}\r\n                        />\r\n\r\n                        <Input\r\n                            name=\"password\"\r\n                            inputtype=\"input\"\r\n                            type=\"password\"\r\n                            label=\"Password\"\r\n                            onChange={this.onChangeHandler}\r\n                            value={this.state.formInput.password}\r\n                            minLength={6}\r\n                        />\r\n\r\n                        <Input\r\n                            name=\"passwordConfirm\"\r\n                            inputtype=\"input\"\r\n                            type=\"password\"\r\n                            label=\"Password Confirm\"\r\n                            onChange={this.onChangeHandler}\r\n                            value={this.state.formInput.passwordConfirm}\r\n                            minLength={6}\r\n                        />\r\n\r\n                        <Input\r\n                            inputtype='submit'\r\n                            value={!this.props.registerInit ? 'Register' : 'Loading....'}\r\n                            variant=\"tertiary\" />\r\n                    </form>\r\n                </section>\r\n            </UnAuthRoutes>\r\n        );\r\n    };\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        registerInit: state.auth.registerInit,\r\n        registerStatus: state.auth.registerStatus,\r\n        user: state.auth.user,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        registerUser: (data) => dispatch(authActions.register(data)),\r\n\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Register);\r\n","import React from 'react';\r\n\r\nconst Alert = props => {\r\n    return (\r\n        <div className={`alert alert__${props.show} alert--${props.status} ${props.className}`}>\r\n            {props.message}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Alert;\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nimport * as authActions from '../../Store/actions/auth';\r\nimport { Redirect } from 'react-router';\r\nimport Loader from '../Components/Loader/Loader';\r\n\r\n\r\nclass UnAuthRoutes extends Component {\r\n    async componentDidMount() {\r\n        // if (this.props.user) {\r\n        await this.props.checkAuthState();\r\n        // }\r\n    }\r\n\r\n    render() {\r\n        if (!this.props.user) {\r\n            return this.props.children\r\n        }\r\n\r\n        if (this.props.checkAuthInit) {\r\n            return <div className=\"u-flex-center u-vh-100 u-bg-white\">\r\n                <Loader />\r\n            </div>\r\n        }\r\n\r\n        if (this.props.user && this.props.user.role === 'admin') {\r\n            return <Redirect to=\"/dashboard/manage-orders\" />\r\n        }\r\n\r\n        if (this.props.user && (!this.props.user.role || this.props.user.role !== 'admin')) {\r\n            return <Redirect to=\"/menu\" />\r\n        }\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.auth.user,\r\n        checkAuthInit: state.auth.checkAuthInit\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        checkAuthState: () => dispatch(authActions.checkAuth()),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UnAuthRoutes);"],"sourceRoot":""}