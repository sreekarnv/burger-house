{"version":3,"sources":["assets/images/non-veg.jpg","assets/images/veg.jpg","assets/images/logo.svg","assets/images/about-1.jpg","assets/images/gallery-1.jpg","assets/images/gallery-2.jpg","assets/images/gallery-3.jpg","assets/images/user-1.jpg","assets/images/user-2.jpg","webpack:///./src/assets/images/logo.svg?f965","app/Shared/Icons/Logo.js","app/Shared/Components/Navigation/Navbar.js","app/Shared/Components/Badge/Badge.js","app/Shared/Components/Navigation/NavItem.js","app/Layout/Header.js","app/Layout/Footer.js","assets/icons/check.svg","app/Shared/Icons/Tick.js","app/Pages/Home/Components/HeroPromises/HeroPromises.js","app/Shared/Components/Buttons/AddorRemoveButton.js","app/Shared/Components/Card/CardMenu.js","app/Pages/Home/Components/Review/Review.js","app/Shared/Components/Loader/Loader.js","app/Store/actions/orders.js","app/Store/actions/actions.js","app/Store/actions/cart.js","app/Store/actions/burgerBuilder.js","app/Store/actions/menu.js","app/Shared/Components/Alert/Alert.js","app/Pages/Home/Home.js","app/Pages/Menu/Menu.js","assets/icons/trash.svg","app/Shared/Icons/Trash.js","app/Shared/Components/Card/CardCart.js","app/Pages/Cart/Cart.js","app/Pages/CustomBurger/pages/CustomBurgerHome.js","app/Shared/Components/Burger/Ingredients/Ingredients.js","app/Shared/Components/Burger/Burger.js","app/Shared/Components/Burger/Controls/Controls.js","app/Shared/Components/IngredientControls/IngredientControls.js","app/Pages/CustomBurger/pages/customBurgerBuilder.js","app/Pages/CustomBurger/CustomBurger.js","app/Pages/About/About.js","app/Shared/Components/Form/Input.js","app/Store/actions/auth.js","app/Shared/Utils/formInput.js","app/Pages/Register/Register.js","app/Pages/Login/Login.js","app/Pages/DashBoard/components/Sidebar.js","app/Pages/DashBoard/User/components/updateUserData.js","app/Pages/DashBoard/User/components/updateUserPassword.js","app/Shared/Components/Modal/Modal.js","app/Shared/Components/Modal/ConfirmModal.js","app/Shared/Components/BackDrop/BackDrop.js","app/Pages/DashBoard/User/Profile.js","assets/icons/burger.svg","app/Shared/Icons/HamburgerMenu.js","app/Shared/Components/List/ListItem.js","assets/icons/edit.svg","app/Shared/Icons/Edit.js","app/Pages/DashBoard/Admin/components/UserItem.js","app/Pages/DashBoard/Admin/components/UserForm.js","app/Store/actions/users.js","app/Pages/DashBoard/Admin/Users/Users.js","app/Pages/DashBoard/User/components/ListItemOrders.js","app/Pages/DashBoard/components/StatusCard.js","app/Pages/DashBoard/components/Orders.js","app/Pages/DashBoard/Admin/Orders/UserOrders.js","app/Pages/DashBoard/User/CurrentUserOrders.js","app/Pages/DashBoard/Admin/Menu/UpdateBurgerDetail.js","app/Pages/DashBoard/Admin/Menu/UpdateBurgerList.js","app/Pages/DashBoard/Admin/Menu/CreateBurger.js","app/Pages/DashBoard/components/OrderDetail.js","app/Store/actions/ingredients.js","app/Pages/DashBoard/Admin/components/IngredientItem.js","app/Pages/DashBoard/Admin/Ingredients/Ingredients.js","app/Pages/DashBoard/Admin/Ingredients/IngredientsForm.js","app/Pages/DashBoard/Layout.js","app/Pages/Error/Error.js","app/Pages/Logout/Logout.js","app/Layout/Body.js","app/App.js","app/Store/reducers/auth.js","app/Store/reducers/menu.js","app/Store/reducers/burgerBuilder.js","app/Store/reducers/customer.js","app/Store/reducers/cart.js","app/Store/reducers/users.js","app/Store/reducers/orders.js","app/Store/reducers/ingredients.js","app/Store/reducers/rootReducer.js","index.js"],"names":["module","exports","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","createElement","transform","d","fill","_ref","svgRef","title","props","viewBox","ref","ForwardRef","forwardRef","logo","className","navbar","classNav","children","badge","badgeVal","navItem","Badge","activeNavitemClass","active","classNavItemActive","exact","onClick","closeSidebar","activeClassName","to","pathname","path","classNavLink","classNavItem","Header","Logo","Navbar","NavItem","user","cart","Component","connect","state","auth","Footer","description","width","height","undefined","tick","heroPromises","pk","Tick","para","AddorRemoveButton","classes","disabled","items","type","addItem","valueClass","removeItem","Card","showAlert","showAddorRemoveBtn","ingredients","map","el","uniqid","name","amount","card__btn","Burger","_id","initialprice","foodType","BurgerImage","burgerImage","price","menuBurgers","page","chooseBurger","cartBurgers","addItemToCart","src","alt","Burgers","menu","review","img","rating","toFixed","comment","Loader","getAllUserOrdersFailed","error","createOrdersFailed","getAllOrdersFailed","updateOrderStatusAdminSuccess","res","response","addBurgerToCart","burgerObj","incrementItem","decrementItem","removeBurgerFromCart","clearCart","initIngredients","dispatch","a","axios","get","data","fetchBurgersSuccess","burgers","fetchIngredients","initBurgers","addIngredient","removeIngredient","setMenuIngs","ings","Alert","show","status","message","Home","isLoading","alert","takeToMenu","history","push","tocustomBurger","showAlertHandler","setState","onCloseHandler","closeAlertTimer","setTimeout","decrementItemFromCartHandler","onDecrementItemCart","onItemRemovedFromCart","onItemPushedToCart","incrementBurgerInCart","onIncrementItemInCart","loadBurgers","timer","clearTimeout","cards","reviews","reviewArr","filter","Review","slice","loading","totalprice","photo","reverse","Fragment","close","HeroPromises","customer","cartActions","menuActions","Menu","takeToBurgerBuilder","trash","CardCart","btns","value","deleteItem","Trash","burgerName","startsWith","Cart","goBack","deleteItemFromCart","addItemInCartHandler","onOrderHandler","replace","menuOrders","customOrders","el2","ing","customOrder","menuOrder","totalPrice","placeOrder","placeOrderStatus","placeOrderTimer","markup","placeOrderLoading","orders","createUserOrderInit","createUserOrderStatus","method","url","orderActions","CustomBurgerHome","match","Veg","NonVeg","Ingredients","ingredient","Array","buildControl","addIng","removeIng","parseInt","IngredientControls","markupIngs","style","hidePrice","display","NotfoodType","Controls","totalBurgerPrice","danger","dangerField","successBtnType","success","successField","customBurgerBuilder","AddBurgerToCartHandler","idArr","id","toString","split","join","BurgerNew","customBurgerImg","clearIngsTimer","clearPriceValue","clearIngValues","goBackButtonHandler","getIngredients","burger","burgerBuilder","burgerBuilderActions","CustomBurgerNew","component","about","aboutImg","BurgerImage1","BurgerImage2","BurgerImage3","Input","inputtype","required","label","placeholder","onChange","minLength","variant","formGroupClass","registerSuccess","registerFailed","loginSuccess","loginFailed","logout","onChangeFormInput","e","formInput","clearFields","stateCopy","Register","email","password","passwordConfirm","onChangeHandler","onSubmitHandler","preventDefault","registerUser","registerStatus","authRedirect","onSubmit","autoComplete","registerInit","authActions","Login","loginStatus","role","loginUser","loginInit","Sidebar","isActive","UpdateUserData","previewPhoto","fileUploaded","onFileChangeHandler","files","URL","createObjectURL","formData","FormData","append","updateUserData","userDataStatus","console","log","htmlFor","updateUserDataInit","updateUserDataStatus","UpdateUserPassword","passwordCurrent","updateUserPassword","userPasswordStatus","LogoutTimer","updateUserPasswordInit","updateUserPasswordStatus","updateCurrentUserPasswordSuccess","Modal","ConfirmModal","submit","backDrop","Profile","showModal","closeModal","onDeleteHandler","deleteCurrentUser","deleteUserStatus","deleteUserInit","edit","enableBackground","HamburgerMenu","ListItem","listStyle","UserItem","Edit","delete","UserForm","getUsers","getAllUsers","query","users","Users","userId","onEditHandler","updateUser","deleteUser","getUsersInit","params","userActions","ListItemOrders","date","hours","Date","getHours","minutes","getMinutes","seconds","getSeconds","time","results","StatusCard","heading","Orders","onFilterHandler","getAllOrders","showOrdersStatus","totalOrdersPrice","totalOrders","totalCancelledOrders","totalCompletedOrders","totalPendingOrders","createdAt","UserOrders","order","res2","pendingOrders","completedOrders","CurrentUserOrders","userOrders","getAllUserOrders","userOrdersInit","getUserOrdersInit","setMenuIngredients","ingredientsFetched","menuIngs","UpdateBurgerDetail","changeFileHandler","uploadFileHandler","updateBurger","resetIngredients","setIngredients","updateBurgerIngredients","ingsArr","updateBurgerDetails","updateBurgersStatus","updateTimer","deleteBurgerStatus","onDeleteConfirmHandler","deleteBurger","UpdateBurgerList","onChooseMenuHandler","toCreateBurger","initMenu","menuList","CreateBurger","addIngredientsToBurger","submitBurgerHandler","JSON","stringify","createBurger","createBurgerStatus","successTimer","createBurgerInit","OrderDetail","onChangeStatusHandler","updateOrderStatusAdmin","orderStatus","updatedOrder","onCancelOrder","getOrder","find","loggedInUser","updateOrderStatusAdminStatus","payload","createIngredientSuccess","updateIngredientSuccess","IngredientItem","image","ingId","onCreateHandler","deleteIngredient","getAllIngredients","deleteIngredientInit","deleteIngredientStatus","deleteIngredientsInit","ingredientActions","IngredientsCreate","location","onUpdateHandler","createIngredient","createIngredientsStatus","updateIngredient","updateIngredientsStatus","getIngredient","getIngredientStatus","createIngredientsInit","updateIngredientsInit","getIngredientInit","Layout","showSideBar","sidebarShowHandler","sidebarCloseHandler","IngredientsForm","Error","Logout","logoutInit","Body","CustomBurger","About","Dashboard","App","checkAuthState","checkAuth","checkAuthInit","initialState","checkAuthSuccess","action","userPhoto","checkAuthStateInit","logoutSuccess","logoutFailed","updateUserDataSuccess","updateUserDataFailed","updateUserPasswordSuccess","updateUserPasswordFailed","deleteCurrentUserInit","deleteCurrentUserSuccess","deleteCurrentUserFailed","reducer","updateBurgers","deleteBurgerInit","x","fetchBurgersFailed","fetchBurgersInit","fetchIngredientsSuccess","fetchIngredientsFailed","updateMenuBurgerSuccess","updateMenuBurgerFailed","createBurgerSuccess","createBurgerFailed","deleteBurgerFailed","deleteBurgerSuccess","ingredientsLoading","clearIngredientValues","cleartotalPrice","Sarah","userImage1","Paul","userImage2","removeItemFromCart","addBurgersToCart","includes","getUsersStatus","updateUserInit","updateUserStatus","getAllUsersInit","getAllUsersSuccess","getAllUsersFailed","updateUserFailed","deleteUserFailed","getOrderStatus","getOrderInit","getUserOrdersStatus","getOrdersInit","getOrdersStatus","updateOrderStatusAdminInit","createOrderInit","createOrderSuccess","createOrderFailed","getUserOrdersSuccess","getUserOrdersFailed","getAllOrdersInit","getAllOrdersSuccess","getOrdersFailed","getOrderSuccess","updateOrderStatusAdminFailed","getAllIngredientsStatus","getAllIngredientsInit","updateIngredientInit","updateIngredientStatus","getAllIngredientsFailed","getAllIngredientsSuccess","getIngredientFailed","getIngredientSuccess","createIngredientsFailed","createIngredientsSuccess","updateIngredientFailed","deleteIngredientFailed","deleteIngredientSuccess","combineReducers","menuReducer","customerReducer","burgerBuilderReducer","cartReducer","authReducer","userReducer","orderReducer","ingredientReducer","composeEnhancers","compose","store","createStore","applyMiddleware","thunk","app","StrictMode","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e5f6c679.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/non-veg.ef703756.jpg\";","module.exports = __webpack_public_path__ + \"static/media/veg.e59295ab.jpg\";","module.exports = __webpack_public_path__ + \"static/media/logo.b22cebeb.svg\";","module.exports = __webpack_public_path__ + \"static/media/about-1.168cbf05.jpg\";","module.exports = __webpack_public_path__ + \"static/media/gallery-1.fbabfc54.jpg\";","module.exports = __webpack_public_path__ + \"static/media/gallery-2.ef703756.jpg\";","module.exports = __webpack_public_path__ + \"static/media/gallery-3.3f87ebe8.jpg\";","module.exports = __webpack_public_path__ + \"static/media/user-1.44f16efe.jpg\";","module.exports = __webpack_public_path__ + \"static/media/user-2.7f8d1a3b.jpg\";","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"g\", {\n  transform: \"translate(-362 -245.65)\"\n}, /*#__PURE__*/React.createElement(\"path\", {\n  d: \"m431.17 578c-11.06 55.54-31.772 165.12 24.438 164 277.98 17.756 530.07 3.9597 778.24-10 50.228-9.0648 19.898-106.25 18.798-160l-821.48 6z\",\n  fill: \"#daa507\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"m422.46 499.2c-25.431 9.4389-46.304 99.169 4.3398 117.12 274.98 29.097 553.01-16.46 813.43-29.196 63.396 13.378 42.963-117.56-8.6991-135.37-273.63-11.401-542.49 10.132-809.07 47.445z\",\n  fill: \"#803300\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"m443.21 475.11c-23.993 5.9224-51.685 108.22-3.9057 119.49 197.71 15.531-67.967-57.164 775.42-64.319 59.81 8.394 40.533-73.765-8.207-84.936-258.16-7.1537-511.81 6.3573-763.3 29.769z\",\n  fill: \"#520\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"m418 464 748-12c-160.89 63.641-254.48 10.073-510 216-188.48-218.73-172.56-147.95-238-204z\",\n  fill: \"#fd5\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"m424 440 748-12c-160.89 63.641-254.48 10.073-510 216-188.48-218.73-172.56-147.95-238-204z\",\n  fill: \"#fc0\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"m505.48 400.69 672.2-2.6898c144.64 58.078 245.7 103.9 62.97 69.934 75.848 110.82-126.76 8.3708-113.35-21.518 74.883 116.47-4.5491 88.425-55.099 37.657-8.7625 73.091-71.916 16.076-119.64-4.0346l56.673-24.208c-38.281 168.75-136.35 27.984-151.13-13.449 57.537 80.555-41.051 137.43-75.564-5.3795 68.577 66.586-39.779 136.79-102.33 90.107l77.138-59.175c-155.4 198.56-193.16 10.894-190.48-13.449l37.782 30.932c-27.652 99.795-115.05-47.378-130.66-84.727h31.485z\",\n  fill: \"#4a0\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"m501.64 458.62 632.9-50.524c138.18 14.738 234.9 27.326 61.677 25.911 75.195 42.816-119.08 12.961-107.47-1.0737 74.479 45.355-1.2742 38.941-50.603 20.486-5.7633 32.556-67.174 12.299-112.8 7.022l52.543-14.73c-30.303 76.49-127.44 22.228-142.77 5.2231 56.923 30.947-33.978 63.015-71.339 3.1988 66.843 24.038-32.803 62.644-93.29 46.854l70.624-31.499c-139.57 98.103-181.52 18.937-179.83 8.1125l36.631 10.732c-22.642 45.602-109.95-12.239-125.92-27.4l29.648-2.3115z\",\n  fill: \"#338000\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"m932 394c-195.3 11.624-390.34 23.877-570 72 1.1826 56.54 7.6169 71.065 14 86 163.3-69.369 369.46-86.366 580-98-0.2947-13.579 6.6639-21.113-24-60z\",\n  fill: \"#eb3f0b\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"m923.57 404c-235.35 3.181-395.48 37.584-555.57 72 141.22-10.977 375.08-47.586 340.78-10 69.026-9.2156 139.81-17.294 225.12-16 9.8728-32.525-5.4898-32.467-10.327-46z\",\n  fill: \"#d40000\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"m427.04 447.59c291.22-5.089 567.34-12.87 807.18-27.117 69.215-227.64-854.43-247.57-807.18 27.117z\",\n  fill: \"#daa507\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"m428 658c0.0249 27.185-8.9057 59.743 16 72 230.49 23.486 478.2 3.001 694 2-826.08 9.136-610.82-44.108-710-74z\",\n  fill: \"#d3bc5f\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"m477.77 352.39c-15.67-12.051-63.092 65.279-34 88 515.44-10.514 478.2-14.999 694-16-826.08 9.136-638.82-10.108-660-72z\",\n  fill: \"#d3bc5f\"\n}));\n\nvar SvgLogo = function SvgLogo(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 977.22565 504.75369\",\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _ref2);\n};\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgLogo, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/logo.b22cebeb.svg\";\nexport { ForwardRef as ReactComponent };","import React from 'react';\r\nimport { ReactComponent as Logo } from './../../../assets/images/logo.svg';\r\n\r\nconst logo = props => {\r\n    return (\r\n        <Logo className={props.className} />\r\n    )\r\n}\r\n\r\nexport default logo;","import React from 'react'\r\n\r\nconst navbar = (props) => {\r\n    return (\r\n        <ul className={props.classNav}>\r\n            {props.children}\r\n        </ul>\r\n    );\r\n};\r\n\r\nexport default navbar;","import React from 'react'\r\n\r\nconst badge = props => {\r\n    return (\r\n        <div className=\"badge\">\r\n            <p>{props.badgeVal}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default badge;","import React from 'react';\r\nimport Badge from '../Badge/Badge';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst navItem = (props) => {\r\n    let badge;\r\n    let badgeDisplay = props.badge === true ? props.badge : null;\r\n    if (badgeDisplay) badge = <Badge badgeVal={props.badgeVal} />\r\n    else badge = null;\r\n\r\n    let activeNavitemClass = null;\r\n    if (props.active && props.classNavItemActive) {\r\n        activeNavitemClass = props.classNavItemActive;\r\n    }\r\n\r\n    return (\r\n        <NavLink\r\n            exact={props.exact ? true : false}\r\n            onClick={props.closeSidebar}\r\n            activeClassName={props.active} to={{ pathname: props.path }} className={props.classNavLink} >\r\n            <li className={`${props.classNavItem} ${activeNavitemClass}`} >\r\n                {badge}\r\n                {props.children}\r\n            </li>\r\n        </NavLink >\r\n    )\r\n}\r\n\r\n\r\nexport default navItem; \r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Logo from './../Shared/Icons/Logo';\r\nimport Navbar from './../Shared/Components/Navigation/Navbar';\r\nimport NavItem from './../Shared/Components/Navigation/NavItem';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nclass Header extends Component {\r\n    render() {\r\n        return (\r\n            <header className=\"header\">\r\n                <Link className=\"header__brand\" to=\"/\">\r\n                    <Logo className=\"header__logo\" />\r\n                    <h1 className=\"header__brand-name\">Burger house</h1>\r\n                </Link>\r\n\r\n                <Navbar classNav=\"header__nav\">\r\n                    <NavItem active=\"header__nav-link--active\" exact classNavItem=\"header__nav-item\" classNavLink=\"header__nav-link\" path=\"/\" >Home</NavItem>\r\n\r\n                    <NavItem active=\"header__nav-link--active\" classNavItem=\"header__nav-item\" classNavLink=\"header__nav-link\" path=\"/menu\" >Menu</NavItem>\r\n\r\n                    {this.props.user && <NavItem active=\"header__nav-link--active\" classNavItem=\"header__nav-item\" classNavLink=\"header__nav-link\"\r\n                        // path={`/dashboard/${this.props.user.role === 'admin' ? 'manage-orders' : 'my-orders'}`} >Dashboard</NavItem>}\r\n                        path={`/dashboard`} >Dashboard</NavItem>}\r\n\r\n                    {!this.props.user && <NavItem active=\"header__nav-link--active\" classNavItem=\"header__nav-item\" classNavLink=\"header__nav-link\" path=\"/login\" >Login</NavItem>}\r\n\r\n                    {!this.props.user && <NavItem active=\"header__nav-link--active\" classNavItem=\"header__nav-item\" classNavLink=\"header__nav-link\" path=\"/register\" >Register</NavItem>}\r\n\r\n                    <NavItem active=\"header__nav-link--active\" classNavItem=\"header__nav-item\" classNavLink=\"header__nav-link\" badge path=\"/cart\" badgeVal={this.props.cart}>Cart</NavItem>\r\n\r\n                    {this.props.user &&\r\n                        <Link to=\"/logout\" className=\"btn btn__logout\">logout</Link>}\r\n\r\n                </Navbar>\r\n            </header>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        cart: state.cart.cart,\r\n        user: state.auth.user\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Header); ","import React, { Component } from 'react';\r\nimport Navbar from './../Shared/Components/Navigation/Navbar';\r\nimport NavItem from './../Shared/Components/Navigation/NavItem';\r\n\r\nclass Footer extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <footer className=\"footer\">\r\n                <Navbar classNav=\"footer__nav\">\r\n                    <NavItem path=\"/about\" classNavItem=\"footer__nav__item\" classNavLink=\"footer__nav__link\" description=\"About\">About</NavItem>\r\n                </Navbar>\r\n                <p className=\"copyright\">Copyright &copy; by Sreekar Venkata Nutulapati</p>\r\n            </footer>\r\n        )\r\n    };\r\n};\r\n\r\nexport default Footer;","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"title\", null, \"check\");\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M8.294 16.998c-0.435 0-0.847-0.203-1.111-0.553l-3.573-4.721c-0.465-0.613-0.344-1.486 0.27-1.951 0.615-0.467 1.488-0.344 1.953 0.27l2.351 3.104 5.911-9.492c0.407-0.652 1.267-0.852 1.921-0.445s0.854 1.266 0.446 1.92l-6.984 11.21c-0.242 0.391-0.661 0.635-1.12 0.656-0.022 0.002-0.042 0.002-0.064 0.002z\"\n});\n\nvar SvgCheck = function SvgCheck(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 20,\n    height: 20,\n    viewBox: \"0 0 20 20\",\n    ref: svgRef\n  }, props), title === undefined ? _ref2 : title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _ref3);\n};\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgCheck, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/check.7f4e4d44.svg\";\nexport { ForwardRef as ReactComponent };","import React from 'react';\r\nimport { ReactComponent as Tick } from './../../../assets/icons/check.svg';\r\n\r\nconst tick = props => {\r\n    return (\r\n        <Tick className={props.className} />\r\n    )\r\n}\r\n\r\nexport default tick;\r\n","import React from 'react';\r\nimport Tick from '../../../../Shared/Icons/Tick';\r\n\r\nconst heroPromises = props => {\r\n    return (\r\n        <div className={`hero__promises-item hero__promises-item-${props.pk}`}>\r\n            <Tick className={`icon-check icon`} />\r\n            <p>{props.para}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default heroPromises;\r\n","import React from 'react'\r\n\r\nconst AddorRemoveButton = props => {\r\n    let disabled = false;\r\n    let classes;\r\n    if (props.items === 0) {\r\n        disabled = true;\r\n        classes = \"btn btn__primary-disabled\";\r\n    }\r\n    return (\r\n        <div className={`btn__addOrRemove ${props.className}`}>\r\n            <button type=\"button\" onClick={props.addItem} className={props.classes}>+</button>\r\n            <p className={`u-text-tertiary ${props.valueClass}`}>{props.items}</p>\r\n            <button type=\"button\" onClick={props.removeItem} disabled={disabled} className={classes || props.classes}>-</button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AddorRemoveButton;\r\n","import React, { Component } from 'react';\r\nimport uniqid from 'uniqid';\r\nimport { connect } from 'react-redux';\r\nimport AddorRemoveBtn from './../../Components/Buttons/AddorRemoveButton';\r\n\r\nclass Card extends Component {\r\n    state = {\r\n        showAlert: false,\r\n        showAddorRemoveBtn: false,\r\n    };\r\n\r\n    ingredients = Object.keys(this.props.ingredients).map(el => <p key={uniqid()}\r\n        className=\"card__menu-ingredient\">\r\n        <span className=\"card__menu-ingredient-name\">{this.props.ingredients[el].name}</span>&nbsp;&#10005;&nbsp;\r\n        <span>{this.props.ingredients[el].amount}</span></p>)\r\n\r\n    render() {\r\n        let Burger = {\r\n            _id: this.props._id,\r\n            title: this.props.title,\r\n            initialprice: this.props.initialprice,\r\n            foodType: this.props.foodType,\r\n            ingredients: this.props.ingredients,\r\n            BurgerImage: this.props.burgerImage,\r\n            items: this.props.items,\r\n            price: this.props.price,\r\n        };\r\n\r\n        let card__btn;\r\n        Object.keys(this.props.menuBurgers).map(el => {\r\n            if (this.props.page === 'menu') {\r\n                if (!this.props.cartBurgers || !this.props.cartBurgers[this.props.title]) {\r\n                    return card__btn = <button onClick={() => this.props.addItemToCart(Burger)}\r\n                        className=\"btn btn__primary card__menu-btn\">Add to Cart</button>\r\n\r\n                } else if (this.props.cartBurgers[this.props.title].items > 0) {\r\n                    Burger.items = this.props.cartBurgers[this.props.title].items\r\n                    return card__btn = <AddorRemoveBtn\r\n                        valueClass=\"u-fontSize-3rem\"\r\n                        className=\"card__menu-btn\"\r\n                        classes=\"btn btn__primary btn__primary-round btn--large \"\r\n                        removeItem={() => this.props.removeItem(Burger)}\r\n                        addItem={() => this.props.addItem(Burger)} items={this.props.cartBurgers[this.props.title].items} />\r\n\r\n                }\r\n            } else {\r\n                return card__btn = <button\r\n                    onClick={() => this.props.chooseBurger(this.props._id)}\r\n                    className=\"btn btn__primary card__menu-btn\">Update Settings</button>;;\r\n            }\r\n            return card__btn;\r\n        })\r\n\r\n        return (\r\n            <div className=\"card__menu\">\r\n                <img src={this.props.burgerImage} alt=\"burger\" className=\"card__menu-img\" />\r\n                <h3 className=\"card__menu-title\">{this.props.title}</h3>\r\n                <p className={`u-text-${this.props.foodType} card__menu-foodType`}>{this.props.foodType}</p>\r\n                <div className=\"card__menu-ingredients\">\r\n                    {this.ingredients}\r\n                </div>\r\n                <p className=\"card__menu-price\">Rs {this.props.initialprice}</p>\r\n                {card__btn}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        cart: state.cart.cart,\r\n        cartBurgers: state.cart.Burgers,\r\n        menuBurgers: state.menu.Burgers,\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Card);","import React from 'react';\r\n\r\nconst review = props => {\r\n    return (\r\n        <div className=\"review\">\r\n            <div className=\"review__user-details\">\r\n                <img className=\"review__user-image\" src={props.img} alt=\"User\" />\r\n                <h4 className=\"review__user-name\">{props.name}</h4>\r\n                <p className=\"review__ratings\">{props.rating.toFixed(1)} / 5.0</p>\r\n            </div>\r\n            <p className=\"review__text\">{props.comment}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default review;\r\n","import React from 'react';\r\n\r\nconst Loader = () => {\r\n    return <div className=\"loader\"\r\n    >Loading...</div>\r\n}\r\n\r\nexport default Loader\r\n","import * as actionTypes from './actions';\r\nimport axios from 'axios';\r\n\r\n\r\nlet URL = `http://localhost:4000`\r\nURL = ``;\r\n\r\nexport const getAllUserOrdersInit = () => {\r\n    return {\r\n        type: actionTypes.GET_ALL_USER_ORDERS_INIT\r\n    }\r\n}\r\n\r\nexport const getAllUserOrdersSuccess = (orders) => {\r\n    return {\r\n        type: actionTypes.GET_ALL_USER_ORDERS_SUCCESS,\r\n        orders\r\n    }\r\n}\r\n\r\nexport const getAllUserOrdersFailed = error => {\r\n    return {\r\n        type: actionTypes.GET_ALL_USER_ORDERS_FAILED,\r\n        error\r\n    }\r\n}\r\n\r\nexport const getAllUserOrders = () => {\r\n    return async dispatch => {\r\n        dispatch(getAllUserOrdersInit());\r\n        try {\r\n            const res = await axios.get(`${URL}/api/v1/orders/me`)\r\n            let order = Object.keys(res.data.orders).map(el => {\r\n                return {\r\n                    ...res.data.orders[el],\r\n                    orders: [...res.data.orders[el].customOrders, ...res.data.orders[el].menuOrders],\r\n                    customOrders: null,\r\n                    menuOrders: null,\r\n                }\r\n            })\r\n            dispatch(getAllUserOrdersSuccess(order));\r\n        } catch (err) {\r\n            const error = { ...err }.response\r\n            dispatch(getAllUserOrdersFailed(error));\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport const createOrdersInit = () => {\r\n    return {\r\n        type: actionTypes.CREATE_ORDER_INIT\r\n    }\r\n}\r\n\r\nexport const createOrdersSuccess = (orders) => {\r\n    return {\r\n        type: actionTypes.CREATE_ORDER_SUCCESS,\r\n        orders\r\n    }\r\n}\r\n\r\nexport const createOrdersFailed = error => {\r\n    return {\r\n        type: actionTypes.CREATE_ORDER_FAILED,\r\n        error\r\n    }\r\n}\r\n\r\nexport const createOrders = (data) => {\r\n    return async dispatch => {\r\n        dispatch(createOrdersInit());\r\n        try {\r\n            const res = await axios({\r\n                method: 'POST',\r\n                url: `${URL}/api/v1/orders`,\r\n                data\r\n            })\r\n            dispatch(createOrdersSuccess(res.data.orders))\r\n        } catch (err) {\r\n            const error = { ...err }.response\r\n            dispatch(createOrdersFailed(error));\r\n        }\r\n    }\r\n}\r\n\r\nexport const clearCart = () => {\r\n    return {\r\n        type: actionTypes.CLEAR_CART\r\n    }\r\n}\r\n\r\nexport const getAllOrdersInit = () => {\r\n    return {\r\n        type: actionTypes.GET_ALL_USER_ORDERS_INIT\r\n    }\r\n}\r\n\r\nexport const getAllOrdersSuccess = ({ order, totalOrders, pendingOrders, completedOrders, totalPrice }) => {\r\n    return {\r\n        type: actionTypes.GET_ALL_ORDERS_SUCCESS,\r\n        orders: order,\r\n        totalOrders,\r\n        pendingOrders,\r\n        completedOrders,\r\n        totalPrice\r\n    }\r\n}\r\n\r\nexport const getAllOrdersFailed = error => {\r\n    return {\r\n        type: actionTypes.GET_ALL_ORDERS_FAILED,\r\n        error\r\n    }\r\n}\r\n\r\nexport const getAllOrders = (filter) => {\r\n    return async dispatch => {\r\n        dispatch(getAllOrdersInit());\r\n        try {\r\n            let order = [];\r\n            let query = '', res2;\r\n\r\n            const res = await axios.get(`${URL}/api/v1/orders`)\r\n\r\n            if (filter !== 'All Orders') {\r\n                query = `?status=${filter}`\r\n                res2 = await axios.get(`${URL}/api/v1/orders${query}`)\r\n\r\n                Object.keys(res2.data.orders).map(el => {\r\n                    order.push({\r\n                        ...res2.data.orders[el],\r\n                        orders: [...res.data.orders[el].customOrders, ...res.data.orders[el].menuOrders],\r\n                        customOrders: null,\r\n                        menuOrders: null,\r\n                    })\r\n                    return order;\r\n                })\r\n\r\n\r\n            }\r\n\r\n\r\n            let totalOrders = res.data.orders.length;\r\n            let totalPrice = 0;\r\n            let pendingOrders = 0;\r\n            let completedOrders = 0;\r\n\r\n            Object.keys(res.data.orders).map(el => {\r\n                if (res.data.orders[el].status === 'pending') {\r\n                    pendingOrders += 1;\r\n                } else if (res.data.orders[el].status === 'delivered') {\r\n                    completedOrders += 1;\r\n                }\r\n\r\n                if (res.data.orders[el].status !== 'cancelled') totalPrice += res.data.orders[el].price;\r\n\r\n\r\n                if (filter === 'All Orders') {\r\n                    order.push({\r\n                        ...res.data.orders[el],\r\n                        orders: [...res.data.orders[el].customOrders, ...res.data.orders[el].menuOrders],\r\n                        customOrders: null,\r\n                        menuOrders: null,\r\n                    })\r\n                    return order;\r\n                }\r\n                return '';\r\n            })\r\n\r\n\r\n            dispatch(getAllOrdersSuccess({ order, totalOrders, pendingOrders, completedOrders, totalPrice }));\r\n\r\n        } catch (err) {\r\n            const error = { ...err }.response\r\n            dispatch(getAllOrdersFailed(error));\r\n        }\r\n    }\r\n}\r\n///////////////////////////////////////////////////////////////\r\n\r\nexport const updateOrderStatusAdminInit = () => {\r\n    return {\r\n        type: actionTypes.UPDATE_ORDER_ADMIN_STATUS_INIT\r\n    }\r\n}\r\n\r\nexport const updateOrderStatusAdminSuccess = (res) => {\r\n    return {\r\n        type: actionTypes.UPDATE_ORDER_ADMIN_STATUS_SUCCESS,\r\n        response: res\r\n    }\r\n}\r\n\r\nexport const updateOrderStatusAdminFailed = (error) => {\r\n    return {\r\n        type: actionTypes.UPDATE_ORDER_ADMIN_STATUS_FAILED,\r\n        error\r\n    }\r\n}\r\n\r\n\r\nexport const updateOrderStatusAdmin = ({ status, _id }) => {\r\n    return async dispatch => {\r\n        try {\r\n            const res = await axios({\r\n                url: `${URL}/api/v1/orders/${_id}`,\r\n                method: 'PATCH',\r\n                data: { status }\r\n            })\r\n            dispatch(updateOrderStatusAdminSuccess(res.data))\r\n        } catch (err) {\r\n            dispatch(updateOrderStatusAdminSuccess(err.response.data))\r\n        }\r\n    }\r\n}\r\n////////////////////////////////////////////////////////////////////////\r\n\r\nexport const getOrderInit = () => {\r\n    return {\r\n        type: actionTypes.GET_ORDER_INIT\r\n    }\r\n}\r\n\r\nexport const getOrderSuccess = (order) => {\r\n    return {\r\n        type: actionTypes.GET_ORDER_SUCCESS,\r\n        order\r\n    }\r\n}\r\n\r\nexport const getOrderFailed = error => {\r\n    return {\r\n        type: actionTypes.GET_ORDER_SUCCESS,\r\n        error\r\n    }\r\n}\r\n\r\n\r\nexport const getOrder = (id) => {\r\n    return async dispatch => {\r\n        dispatch(getOrderInit())\r\n        try {\r\n            const res = await axios({\r\n                url: `${URL}/api/v1/orders/${id}`,\r\n                method: 'get',\r\n            })\r\n\r\n            dispatch(getOrderSuccess(res.data.order))\r\n\r\n        } catch (err) {\r\n            dispatch(getOrderFailed(err.response.data))\r\n        }\r\n    }\r\n}","// Fetch ingredients \r\n\r\nexport const FETCH_INGREDIENTS_SUCCESS = 'FETCH_INGREDIENTS_SUCCESS';\r\nexport const FETCH_INGREDIENTS_FAILED = 'FETCH_INGREDIENTS_FAILED';\r\n\r\n// fetch burgers\r\n\r\nexport const FETCH_BURGERS_INIT = 'FETCH_BURGERS_INIT';\r\n\r\nexport const FETCH_BURGERS_SUCCESS = 'FETCH_BURGERS_SUCCESS';\r\nexport const FETCH_BURGERS_FAILED = 'FETCH_BURGERS_FAILED';\r\n\r\n// Add Ingredient\r\n\r\nexport const ADD_INGREDIENT = 'ADD_INGREDIENT';\r\nexport const REMOVE_INGREDIENT = 'REMOVE_INGREDIENT';\r\n\r\n// Clear ingredient values after adding burger to cart\r\n\r\nexport const CLEAR_INGREDIENT_VALUES = 'CLEAR_INGREDIENT_VALUES';\r\n\r\n// Clear total price after adding burger to cart\r\nexport const CLEAR_TOTAL_PRICE = 'CLEAR_TOTAL_PRICE';\r\n\r\n// Increment item in cart\r\nexport const INCREMENT_ITEM = 'INCREMENT_ITEM';\r\n\r\n// decrement item in cart\r\nexport const DECREMENT_ITEM = 'DECREMENT_ITEM';\r\n\r\n\r\n// delete all burgers in cart\r\nexport const REMOVE_ALL_ITEMS = 'REMOVE_ALL_ITEMS';\r\n\r\n// Push a burger to cart\r\nexport const ADD_BURGERS_TO_CART = 'ADD_BURGERS_TO_CART';\r\n\r\n// get user reviews\r\nexport const DISPLAY_USER_REVIEW = 'DISPLAY_USER_REVIEW';\r\n\r\n\r\n// Registering Users\r\nexport const REGISTER_USER_INIT = 'REGISTER_USER_INIT';\r\nexport const REGISTER_USER_SUCCESS = 'REGISTER_USER_SUCCESS';\r\nexport const REGISTER_USER_FAILED = 'REGISTER_USER_FAILED';\r\n\r\n// Logging in Users\r\nexport const LOGIN_USER_INIT = 'LOGIN_USER_INIT';\r\nexport const LOGIN_USER_SUCCESS = 'LOGIN_USER_SUCCESS';\r\nexport const LOGIN_USER_FAILED = 'LOGIN_USER_FAILED';\r\n\r\n// Check for logged in user\r\nexport const CHECK_AUTH_STATE_INIT = 'CHECK_AUTH_STATE_INIT';\r\nexport const CHECK_AUTH_STATE_SUCCESS = 'CHECK_AUTH_STATE_SUCCESS';\r\nexport const CHECK_AUTH_STATE_FAILED = 'CHECK_AUTH_STATE_FAILED';\r\n\r\n// Logout a user\r\nexport const LOGOUT_USER_INIT = 'LOGOUT_USER_INIT';\r\nexport const LOGOUT_USER_SUCCESS = 'LOGOUT_USER_SUCCESS';\r\nexport const LOGOUT_USER_FAILED = 'LOGOUT_USER_FAILED';\r\n\r\n// update current user data\r\nexport const UPDATE_CURRENT_USER_INIT = 'UPDATE_CURRENT_USER_INIT';\r\nexport const UPDATE_CURRENT_USER_SUCCESS = 'UPDATE_CURRENT_USER_SUCCESS';\r\nexport const UPDATE_CURRENT_USER_FAILED = 'UPDATE_CURRENT_USER_FAILED';\r\n\r\n// update current user password\r\nexport const UPDATE_CURRENT_USER_PASSWORD_INIT = 'UPDATE_CURRENT_USER_PASSWORD_INIT';\r\nexport const UPDATE_CURRENT_USER_PASSWORD_SUCCESS = 'UPDATE_CURRENT_USER_PASSWORD_SUCCESS';\r\nexport const UPDATE_CURRENT_USER_PASSWORD_FAILED = 'UPDATE_CURRENT_USER_PASSWORD_FAILED';\r\n\r\n//delete current user\r\nexport const DELETE_CURRENT_USER_INIT = 'DELETE_CURRENT_USER_INIT';\r\nexport const DELETE_CURRENT_USER_SUCCESS = 'DELETE_CURRENT_USER_SUCCESS';\r\nexport const DELETE_CURRENT_USER_FAILED = 'DELETE_CURRENT_USER_FAILED';\r\n\r\n// get all users\r\nexport const GET_ALL_USERS_INIT = 'GET_ALL_USERS_INIT';\r\nexport const GET_ALL_USERS_SUCCESS = 'GET_ALL_USERS_SUCCESS';\r\nexport const GET_ALL_USERS_FAILED = 'GET_ALL_USERS_FAILED';\r\n\r\n// get all orders of a user\r\nexport const GET_ALL_USER_ORDERS_INIT = 'GET_ALL_USER_ORDERS_INIT';\r\nexport const GET_ALL_USER_ORDERS_SUCCESS = 'GET_ALL_USER_ORDERS_SUCCESS';\r\nexport const GET_ALL_USER_ORDERS_FAILED = 'GET_ALL_USER_ORDERS_FAILED';\r\n\r\n// place a new order\r\nexport const CREATE_ORDER_INIT = 'CREATE_ORDER_INIT';\r\nexport const CREATE_ORDER_SUCCESS = 'CREATE_ORDER_SUCCESS';\r\nexport const CREATE_ORDER_FAILED = 'CREATE_ORDER_FAILED';\r\n\r\n// clear cart \r\nexport const CLEAR_CART = 'CLEAR_CART';\r\n\r\n// get all orders of all users\r\nexport const GET_ALL_ORDERS_INIT = 'GET_ALL_ORDERS_INIT';\r\nexport const GET_ALL_ORDERS_SUCCESS = 'GET_ALL_ORDERS_SUCCESS';\r\nexport const GET_ALL_ORDERS_FAILED = 'GET_ALL_ORDERS_FAILED';\r\n\r\n// update role of a user\r\nexport const UPDATE_ONE_USER_INIT = 'UPDATE_ONE_USER_INIT';\r\nexport const UPDATE_ONE_USER_FAILED = 'UPDATE_ONE_USER_FAILED'\r\n\r\n// delete a user\r\nexport const DELETE_ONE_USER_INIT = 'DELETE_ONE_USER_INIT';\r\nexport const DELETE_ONE_USER_FAILED = 'DELETE_ONE_USER_FAILED';\r\n\r\n// ingredients while updating or creating a burger\r\nexport const UPDATE_MENU_REMOVE_INGREDIENT = 'UPDATE_MENU_REMOVE_INGREDIENT';\r\nexport const UPDATE_MENU_ADD_INGREDIENT = 'UPDATE_MENU_ADD_INGREDIENT';\r\n\r\n// set ingredients while updating or creating a burger\r\nexport const SET_MENU_INGREDIENTS = 'SET_MENU_INGREDIENTS';\r\n\r\n// update a burger\r\nexport const UPDATE_BURGER_INIT = 'UPDATE_BURGER_INIT';\r\nexport const UPDATE_BURGER_SUCCESS = 'UPDATE_BURGER_SUCCESS';\r\nexport const UPDATE_BURGER_FAILED = 'UPDATE_BURGER_FAILED';\r\n\r\n// create a new burger\r\nexport const CREATE_BURGER_INIT = 'CREATE_BURGER_INIT';\r\nexport const CREATE_BURGER_SUCCESS = 'CREATE_BURGER_SUCCESS';\r\nexport const CREATE_BURGER_FAILED = 'CREATE_BURGER_FAILED';\r\n\r\n\r\n// delete a burger\r\nexport const DELETE_BURGER_INIT = 'DELETE_BURGER_INIT';\r\nexport const DELETE_BURGER_SUCCESS = 'DELETE_BURGER_SUCCESS';\r\nexport const DELETE_BURGER_FAILED = 'DELTE_BURGER_FAILED';\r\n\r\n\r\n// Update Order Status ADMIN\r\n\r\nexport const UPDATE_ORDER_ADMIN_STATUS_INIT = 'UPDATE_ORDER_ADMIN_STATUS_INIT'\r\nexport const UPDATE_ORDER_ADMIN_STATUS_SUCCESS = 'UPDATE_ORDER_ADMIN_STATUS_SUCCESS'\r\nexport const UPDATE_ORDER_ADMIN_STATUS_FAILED = 'UPDATE_ORDER_ADMIN_STATUS_FAILED'\r\n\r\n// Get Single Order\r\n\r\nexport const GET_ORDER_INIT = 'GET_ORDER_INIT'\r\nexport const GET_ORDER_SUCCESS = 'GET_ORDER_SUCCESS'\r\nexport const GET_ORDER_FAILED = 'GET_ORDER_FAILED'\r\n\r\n\r\n// get ingredients\r\n\r\nexport const GET_INGREDIENTS_INIT = 'GET_INGREDIENTS_INIT';\r\nexport const GET_INGREDIENTS_SUCCESS = 'GET_INGREDIENTS_SUCCESS';\r\nexport const GET_INGREDIENTS_FAILED = 'GET_INGREDIENTS_FAILED';\r\n\r\n\r\n// create ingredients\r\n\r\nexport const CREATE_INGREDIENTS_INIT = 'CREATE_INGREDIENTS_INIT'\r\nexport const CREATE_INGREDIENTS_SUCCESS = 'CREATE_INGREDIENTS_SUCCESS'\r\nexport const CREATE_INGREDIENTS_FAILED = 'CREATE_INGREDIENTS_FAILED'\r\n\r\n// update ingredients\r\n\r\nexport const UPDATE_INGREDIENT_INIT = 'UPDATE_INGREDIENT_INIT'\r\nexport const UPDATE_INGREDIENT_SUCCESS = 'UPDATE_INGREDIENT_SUCCESS'\r\nexport const UPDATE_INGREDIENT_FAILED = 'UPDATE_INGREDIENT_FAILED'\r\n\r\n\r\n// get ingredient\r\n\r\n\r\nexport const GET_INGREDIENT_INIT = 'GET_INGREDIENT_INIT';\r\nexport const GET_INGREDIENT_SUCCESS = 'GET_INGREDIENT_SUCCESS';\r\nexport const GET_INGREDIENT_FAILED = 'GET_INGREDIENT_FAILED';\r\n\r\n// delete Ingredient\r\n\r\nexport const DELETE_INGREDIENT_INIT = 'DELETE_INGREDIENT_INIT'\r\nexport const DELETE_INGREDIENT_FAILED = 'DELETE_INGREDIENT_FAILED'\r\nexport const DELETE_INGREDIENT_SUCCESS = 'DELETE_INGREDIENT_SUCCESS'","import * as actionTypes from './actions';\r\n\r\nimport * as orderActions from './orders'\r\n\r\n\r\nexport const addBurgerToCart = (burgerObj) => {\r\n    return {\r\n        type: actionTypes.ADD_BURGERS_TO_CART,\r\n        burgerObj,\r\n    }\r\n};\r\n\r\nexport const incrementItem = (burgerObj) => {\r\n\r\n    return {\r\n        type: actionTypes.INCREMENT_ITEM,\r\n        burgerObj,\r\n    }\r\n}\r\n\r\n\r\nexport const decrementItem = (burgerObj) => {\r\n\r\n    return {\r\n        type: actionTypes.DECREMENT_ITEM,\r\n        burgerObj,\r\n    }\r\n}\r\n\r\n\r\nexport const removeBurgerFromCart = (burgerObj) => {\r\n    return {\r\n        type: actionTypes.REMOVE_ALL_ITEMS,\r\n        burgerObj,\r\n    }\r\n}\r\n\r\nexport const clearCartInit = () => {\r\n    return dispatch => {\r\n        dispatch(clearCart());\r\n        dispatch(orderActions.clearCart());\r\n    }\r\n}\r\n\r\n\r\nexport const clearCart = () => {\r\n    return {\r\n        type: actionTypes.CLEAR_CART\r\n    }\r\n}\r\n","import * as actionTypes from './../actions/actions';\r\nimport axios from 'axios';\r\n\r\nlet URL = `http://localhost:4000`\r\nURL = ``;\r\n\r\nexport const addIngredient = (name) => {\r\n    return {\r\n        type: actionTypes.ADD_INGREDIENT,\r\n        name: name\r\n    };\r\n};\r\n\r\nexport const removeIngredient = (name) => {\r\n    return {\r\n        type: actionTypes.REMOVE_INGREDIENT,\r\n        name: name\r\n    };\r\n};\r\n\r\nexport const clearIngredientValues = ingredients => {\r\n    return {\r\n        type: actionTypes.CLEAR_INGREDIENT_VALUES,\r\n        ingredients: ingredients\r\n    }\r\n}\r\n\r\nexport const clearPriceValue = () => {\r\n    return {\r\n        type: actionTypes.CLEAR_TOTAL_PRICE,\r\n    };\r\n};\r\n\r\nexport const fetchIngredientsSuccess = ingredients => {\r\n    return {\r\n        type: actionTypes.FETCH_INGREDIENTS_SUCCESS,\r\n        ingredients\r\n    };\r\n};\r\n\r\nexport const fetchIngredientsFailed = (err) => {\r\n    return {\r\n        type: actionTypes.FETCH_INGREDIENTS_FAILED,\r\n        error: err\r\n    }\r\n}\r\n\r\nexport const initIngredients = () => {\r\n    return async dispatch => {\r\n        try {\r\n            const response = await axios.get(`${URL}/api/v1/ingredients`);\r\n            dispatch(fetchIngredientsSuccess(response.data.ingredients));\r\n        } catch (err) {\r\n            dispatch(fetchIngredientsFailed({ ...err }.response.data));\r\n        }\r\n    }\r\n};\r\n","import * as actionTypes from './actions';\r\nimport axios from 'axios';\r\nimport { initIngredients } from './burgerBuilder';\r\n\r\nlet URL = `http://localhost:4000`;\r\nURL = ``;\r\n\r\nexport const fetchBurgersSuccess = burgers => {\r\n    return {\r\n        type: actionTypes.FETCH_BURGERS_SUCCESS,\r\n        burgers\r\n    };\r\n};\r\n\r\nexport const fetchBurgersFailed = (err) => {\r\n    return {\r\n        type: actionTypes.FETCH_BURGERS_FAILED,\r\n        error: err\r\n    }\r\n}\r\n\r\nexport const fetchBurgersInit = () => {\r\n    return {\r\n        type: actionTypes.FETCH_BURGERS_INIT\r\n    }\r\n}\r\n////////////////////////////////////////////////////////////////\r\n\r\nexport const fetchIngredientsSuccess = (ingredients) => {\r\n    return {\r\n        type: actionTypes.FETCH_INGREDIENTS_SUCCESS,\r\n        ingredients,\r\n    }\r\n}\r\n\r\nexport const fetchIngredientsFailed = (error) => {\r\n    return {\r\n        type: actionTypes.FETCH_INGREDIENTS_FAILED,\r\n        error\r\n    }\r\n}\r\n\r\nexport const fetchIngredients = () => {\r\n    return async dispatch => {\r\n        try {\r\n            const response = await axios.get(`${URL}/api/v1/ingredients`);\r\n            dispatch(fetchIngredientsSuccess(response.data.ingredients));\r\n        } catch (err) {\r\n            dispatch(fetchIngredientsFailed({ ...err }.response.data));\r\n        }\r\n    }\r\n};\r\n///////////////////////////////////////////////////////////////\r\nexport const initBurgers = () => {\r\n    return async dispatch => {\r\n        dispatch(fetchBurgersInit());\r\n        try {\r\n            const response = await axios.get(`${URL}/api/v1/burgers`);\r\n            const burgers = response.data.burgers\r\n            dispatch(fetchBurgersSuccess(burgers));\r\n        } catch (err) {\r\n            const error = { ...err }.response ? { ...err }.response : err;\r\n            dispatch(fetchBurgersFailed(error));\r\n        }\r\n    }\r\n};\r\n\r\n\r\n/////////////////////////////////////////////////////////////\r\n\r\nexport const addIngredient = (name) => {\r\n    return {\r\n        type: actionTypes.UPDATE_MENU_ADD_INGREDIENT,\r\n        name\r\n    };\r\n};\r\n\r\nexport const removeIngredient = (name) => {\r\n    return {\r\n        type: actionTypes.UPDATE_MENU_REMOVE_INGREDIENT,\r\n        name\r\n    };\r\n};\r\n\r\n///////////////////////////////////////////////////////////////\r\n\r\nexport const setMenuIngs = (ings) => {\r\n    return {\r\n        type: actionTypes.SET_MENU_INGREDIENTS,\r\n        ings\r\n    }\r\n}\r\n///////////////////////////////////////////////////////////////\r\n\r\nexport const updateBurgerFailed = (error) => {\r\n    return {\r\n        type: actionTypes.UPDATE_BURGER_FAILED,\r\n        error,\r\n    }\r\n}\r\n\r\nexport const updateBurgerSuccess = response => {\r\n    return {\r\n        type: actionTypes.UPDATE_BURGER_SUCCESS,\r\n        status: response\r\n    }\r\n}\r\n\r\nexport const updateBurger = (burger) => {\r\n    return async dispatch => {\r\n        let id = burger._id ? burger._id : burger.get('_id');\r\n        try {\r\n            const res = await axios({\r\n                url: `${URL}/api/v1/burgers/${id}`,\r\n                data: burger,\r\n                method: 'PATCH'\r\n            })\r\n\r\n            dispatch(updateBurgerSuccess(res.data))\r\n            dispatch(initBurgers());\r\n            dispatch(initIngredients());\r\n        } catch (err) {\r\n            dispatch(updateBurgerFailed({ ...err.response.data }))\r\n        }\r\n    }\r\n}\r\n\r\n////////////////////////////////////////////////////////////////////\r\n\r\n\r\nexport const createBurgerFailed = (error) => {\r\n    return {\r\n        type: actionTypes.CREATE_BURGER_FAILED,\r\n        error,\r\n    }\r\n}\r\n\r\nexport const createBurgerSuccess = response => {\r\n    return {\r\n        type: actionTypes.CREATE_BURGER_SUCCESS,\r\n        status: response\r\n    }\r\n}\r\n\r\nexport const createBurger = (burger) => {\r\n    return async dispatch => {\r\n        try {\r\n            const res = await axios({\r\n                url: `${URL}/api/v1/burgers`,\r\n                data: burger,\r\n                method: 'POST'\r\n            })\r\n            dispatch(createBurgerSuccess(res.data))\r\n        } catch (err) {\r\n            dispatch(createBurgerFailed({ ...err.response.data }))\r\n        }\r\n    }\r\n}\r\n////////////////////////////////////////////////////////////////////\r\n\r\nexport const deleteBurgerInit = () => {\r\n    return {\r\n        type: actionTypes.DELETE_BURGER_INIT\r\n    }\r\n}\r\n\r\n\r\nexport const deleteBurgerFailed = (error) => {\r\n    return {\r\n        type: actionTypes.DELETE_BURGER_FAILED,\r\n        error,\r\n    }\r\n}\r\n\r\nexport const deleteBurgerSuccess = response => {\r\n    return {\r\n        type: actionTypes.DELETE_BURGER_SUCCESS,\r\n        response\r\n    }\r\n}\r\n\r\nexport const deleteBurger = (id) => {\r\n    return async dispatch => {\r\n        try {\r\n            dispatch(deleteBurgerInit());\r\n\r\n            const res = await axios({\r\n                url: `${URL}/api/v1/burgers/${id}`,\r\n                method: 'delete'\r\n            })\r\n            dispatch(deleteBurgerSuccess(res.data))\r\n        } catch (err) {\r\n            dispatch(deleteBurgerFailed({ ...err.response.data }))\r\n        }\r\n    }\r\n}\r\n\r\n/////////////////////////////////////////////////////////////////","import React from 'react';\r\n\r\nconst Alert = props => {\r\n    return (\r\n        <div className={`alert alert__${props.show} alert--${props.status} ${props.className}`}>\r\n            {props.message}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Alert;\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport HeroPromises from './Components/HeroPromises/HeroPromises';\r\nimport Card from '../../Shared/Components/Card/CardMenu';\r\nimport Review from './Components/Review/Review';\r\nimport Loader from './../../Shared/Components/Loader/Loader';\r\n\r\nimport * as cartActions from './../../Store/actions/cart';\r\nimport * as menuActions from './../../Store/actions/menu';\r\nimport { Redirect } from 'react-router';\r\n\r\nimport Alert from './../../Shared/Components/Alert/Alert';\r\n\r\n\r\nclass Home extends Component {\r\n    state = {\r\n        isLoading: false,\r\n        alert: {\r\n            show: false,\r\n            status: '',\r\n            message: '',\r\n        }\r\n    }\r\n\r\n    takeToMenu = () => this.props.history.push('/menu');\r\n    tocustomBurger = () => this.props.history.push('/build-your-burger');\r\n\r\n    componentDidMount() {\r\n        this.setState({ isLoading: true })\r\n        this.props.loadBurgers();\r\n        this.timer = setTimeout(() => {\r\n            this.setState({ isLoading: false })\r\n        }, 1000)\r\n    }\r\n\r\n    showAlertHandler = (message, status) => {\r\n        this.setState({\r\n            ...this.state,\r\n            alert: {\r\n                show: true,\r\n                status,\r\n                message,\r\n            }\r\n        })\r\n    }\r\n\r\n    onCloseHandler = () => {\r\n        this.closeAlertTimer = setTimeout(() => {\r\n            this.setState({\r\n                ...this.state,\r\n                alert: {\r\n                    show: false, status: '', message: ''\r\n                }\r\n            });\r\n        }, 2000)\r\n    }\r\n\r\n    decrementItemFromCartHandler = (Burger) => {\r\n        if (Burger.items > 0) {\r\n            this.props.onDecrementItemCart(Burger)\r\n        } else {\r\n            this.props.onItemRemovedFromCart(Burger)\r\n        }\r\n        this.showAlertHandler('Removed Burger from cart successfully', 'fail');\r\n    };\r\n\r\n\r\n    addItemToCart = (Burger) => {\r\n        this.props.onItemPushedToCart(Burger);\r\n        const message = 'Added Burger to Cart successfully'\r\n        this.showAlertHandler(message, 'success')\r\n    }\r\n\r\n    incrementBurgerInCart = (Burger) => {\r\n        this.props.onIncrementItemInCart(Burger)\r\n        const message = 'Added Burger to Cart successfully';\r\n        this.showAlertHandler(message, 'success');\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        clearTimeout(this.closeAlertTimer);\r\n        clearTimeout(this.timer);\r\n    }\r\n\r\n\r\n    render() {\r\n        const burgers = this.props.menu;\r\n        let cards, reviews;\r\n\r\n        const reviewArr = Object.keys(this.props.reviews);\r\n        reviews = reviewArr.filter(el => this.props.reviews[el].rating >= 4).map(el => {\r\n            return <Review key={el} img={this.props.reviews[el].img} name={el} rating={this.props.reviews[el].rating} comment={this.props.reviews[el].comment} />\r\n        }).slice(reviewArr.length - 2, reviewArr.length);\r\n\r\n        // Burgers from Menu - Top rated\r\n        if (burgers && !this.props.loading) {\r\n            cards = Object.keys(burgers).map(el => {\r\n                return <Card\r\n                    _id={burgers[el]._id}\r\n                    initialprice={burgers[el].price} price={burgers[el].totalprice}\r\n                    key={burgers[el]._id}\r\n                    title={burgers[el].title} foodType={burgers[el].foodType}\r\n                    ingredients={burgers[el].ingredients} burgerImage={burgers[el].photo}\r\n                    items={burgers[el].items}\r\n                    page=\"menu\"\r\n\r\n                    addItem={this.incrementBurgerInCart}\r\n                    removeItem={this.decrementItemFromCartHandler}\r\n                    addItemToCart={this.addItemToCart} />\r\n            }).reverse().slice(0, 3);\r\n        }\r\n\r\n        if (this.props.loading || this.state.isLoading) {\r\n            return <div className=\"u-flex-center u-vh-100\"><Loader /></div>\r\n        }\r\n\r\n        if (this.props.error) {\r\n            return <Redirect to=\"/something-went-wrong\" />\r\n        }\r\n\r\n        return (\r\n            <React.Fragment>\r\n                {this.state.alert.status && <Alert\r\n                    close={this.onCloseHandler()}\r\n                    show={this.state.alert.show}\r\n                    status={this.state.alert.status}\r\n                    message={this.state.alert.message}\r\n                />}\r\n                <div className=\"home\">\r\n                    <section className=\"section-hero\">\r\n                        <div className=\"hero__header\">\r\n                            <h2 className=\"heading-2 u-text-white\">\r\n                                We make <br /><span className=\"heading-1\">BURGERS</span>\r\n                            </h2>\r\n                            <button onClick={this.takeToMenu} className=\"btn btn__tertiary u-justify-self-start\">Order Now</button>\r\n                        </div>\r\n                        <div className=\"hero__promises\">\r\n                            <HeroPromises para=\"Fresh Ingredients only\" pk=\"1\" />\r\n                            <HeroPromises para=\"Delivery within 30 mins\" pk=\"2\" />\r\n                            <HeroPromises para=\"Quality Guaranteed!\" pk=\"3\" />\r\n                        </div>\r\n                    </section>\r\n                    <section className=\"section-burgerbuilder\" >\r\n                        <h2 className=\"heading-2 section-burgerbuilder__heading\">Don't like our menu? Then build you own burger</h2>\r\n                        <button onClick={this.tocustomBurger} className=\"section-burgerbuilder__btn btn btn__tertiary\">\r\n                            Make your own Burger\r\n                            </button>\r\n                    </section>\r\n                    <section className={`section-popular`}>\r\n                        <h2 className=\"heading-1 popular__heading\">Popular Burgers of all time</h2>\r\n                        <div className=\"popular__card\">\r\n                            {cards}\r\n                        </div>\r\n                    </section>\r\n                    <section className=\"section-reviews\">\r\n                        <h2 className=\"heading-1 reviews__heading\">We make people happy</h2>\r\n                        <div className=\"reviews\">\r\n                            {reviews}\r\n                        </div>\r\n                    </section>\r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        menu: state.menu.Burgers,\r\n        loading: state.menu.loading,\r\n        error: state.menu.error,\r\n        reviews: state.customer.reviews,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        onIncrementItemInCart: (Burger) => dispatch(cartActions.incrementItem(Burger)),\r\n        onDecrementItemCart: (Burger) => dispatch(cartActions.decrementItem(Burger)),\r\n        onItemPushedToCart: (Burger) => dispatch(cartActions.addBurgerToCart(Burger)),\r\n        onItemRemovedFromCart: (Burger) => dispatch(cartActions.removeBurgerFromCart(Burger)),\r\n        loadBurgers: () => dispatch(menuActions.initBurgers()),\r\n    }\r\n};\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);\r\n\r\n\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport Card from '../../Shared/Components/Card/CardMenu';\r\nimport Loader from './../../Shared/Components/Loader/Loader';\r\n\r\nimport * as cartActions from './../../Store/actions/cart';\r\nimport * as menuActions from './../../Store/actions/menu';\r\nimport Alert from '../../Shared/Components/Alert/Alert';\r\n\r\n\r\n\r\nclass Menu extends Component {\r\n    state = {\r\n        showAddorRemoveBtn: false,\r\n\r\n        alert: {\r\n            show: false,\r\n            status: '',\r\n            message: '',\r\n        }\r\n    };\r\n\r\n    takeToBurgerBuilder = () => this.props.history.push('/build-your-burger');\r\n\r\n    componentDidMount() {\r\n        this.setState({ isLoading: true })\r\n        this.props.loadBurgers();\r\n        this.timer = setTimeout(() => {\r\n            this.setState({ isLoading: false })\r\n        }, 1000)\r\n    }\r\n\r\n    showAlertHandler = (message, status) => {\r\n        this.setState({\r\n            ...this.state,\r\n            alert: {\r\n                show: true,\r\n                status,\r\n                message,\r\n            }\r\n        })\r\n    }\r\n\r\n    onCloseHandler = () => {\r\n        this.closeAlertTimer = setTimeout(() => {\r\n            this.setState({\r\n                ...this.state,\r\n                alert: {\r\n                    show: false, status: '', message: ''\r\n                }\r\n            });\r\n        }, 2000)\r\n    }\r\n\r\n    decrementItemFromCartHandler = (Burger) => {\r\n        if (Burger.items > 0) {\r\n            this.props.onDecrementItemCart(Burger)\r\n        } else {\r\n            this.props.onItemRemovedFromCart(Burger)\r\n        }\r\n        this.showAlertHandler('Removed Burger from cart successfully', 'fail');\r\n    };\r\n\r\n    addItemToCart = (Burger) => {\r\n        this.props.onItemPushedToCart(Burger);\r\n        const message = 'Added Burger to Cart successfully'\r\n        this.showAlertHandler(message, 'success')\r\n    }\r\n\r\n    incrementBurgerInCart = (Burger) => {\r\n        this.props.onIncrementItemInCart(Burger)\r\n        const message = 'Added Burger to Cart successfully';\r\n        this.showAlertHandler(message, 'success');\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        clearTimeout(this.timer);\r\n        clearTimeout(this.closeAlertTimer);\r\n    }\r\n\r\n    render() {\r\n        let cards;\r\n        let burgers = this.props.menu\r\n        if (burgers) {\r\n            cards = Object.keys(burgers).map(el => {\r\n                return <Card\r\n                    _id={burgers[el]._id}\r\n                    initialprice={burgers[el].price} price={burgers[el].totalprice} key={burgers[el]._id}\r\n                    title={burgers[el].title} foodType={burgers[el].foodType}\r\n                    ingredients={burgers[el].ingredients} burgerImage={burgers[el].photo}\r\n                    items={burgers[el].items}\r\n                    page=\"menu\"\r\n                    addItem={this.incrementBurgerInCart}\r\n                    removeItem={this.decrementItemFromCartHandler}\r\n                    addItemToCart={this.addItemToCart} />\r\n            });\r\n        }\r\n\r\n        if (this.props.loading || this.state.isLoading) {\r\n            return <div className=\"u-flex-center u-vh-100\"><Loader /></div>\r\n        }\r\n\r\n        return (\r\n            <React.Fragment>\r\n                {this.state.alert.status && <Alert\r\n                    close={this.onCloseHandler()}\r\n                    show={this.state.alert.show}\r\n                    status={this.state.alert.status}\r\n                    message={this.state.alert.message}\r\n                />}\r\n                <section className=\"section-menu\">\r\n                    <h2 className=\"menu__heading heading-1\">Menu</h2>\r\n                    <div className=\"menu__list\">\r\n                        {cards}\r\n                    </div>\r\n                    <button onClick={this.takeToBurgerBuilder} className=\"menu__btn btn btn__tertiary-goTo\">Screw it! Make your own burger</button>\r\n                </section>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        menu: state.menu.Burgers,\r\n        loading: state.menu.loading\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        onIncrementItemInCart: (Burger) => dispatch(cartActions.incrementItem(Burger)),\r\n        onDecrementItemCart: (Burger) => dispatch(cartActions.decrementItem(Burger)),\r\n        onItemPushedToCart: (Burger) => dispatch(cartActions.addBurgerToCart(Burger)),\r\n        onItemRemovedFromCart: (Burger) => dispatch(cartActions.removeBurgerFromCart(Burger)),\r\n        loadBurgers: () => dispatch(menuActions.initBurgers())\r\n    }\r\n};\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Menu);","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"title\", null, \"trash\");\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M3.389 7.113l1.101 10.908c0.061 0.461 2.287 1.977 5.51 1.979 3.225-0.002 5.451-1.518 5.511-1.979l1.102-10.908c-1.684 0.942-4.201 1.387-6.613 1.387-2.41 0-4.928-0.445-6.611-1.387zM13.168 1.51l-0.859-0.951c-0.332-0.473-0.692-0.559-1.393-0.559h-1.831c-0.7 0-1.061 0.086-1.392 0.559l-0.859 0.951c-2.57 0.449-4.434 1.64-4.434 2.519v0.17c0 1.547 3.403 2.801 7.6 2.801 4.198 0 7.601-1.254 7.601-2.801v-0.17c0-0.879-1.863-2.070-4.433-2.519zM12.070 4.34l-1.070-1.34h-2l-1.068 1.34h-1.7c0 0 1.862-2.221 2.111-2.522 0.19-0.23 0.384-0.318 0.636-0.318h2.043c0.253 0 0.447 0.088 0.637 0.318 0.248 0.301 2.111 2.522 2.111 2.522h-1.7z\"\n});\n\nvar SvgTrash = function SvgTrash(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 20,\n    height: 20,\n    viewBox: \"0 0 20 20\",\n    ref: svgRef\n  }, props), title === undefined ? _ref2 : title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _ref3);\n};\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgTrash, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/trash.86282d7d.svg\";\nexport { ForwardRef as ReactComponent };","import React from 'react';\r\nimport { ReactComponent as Trash } from './../../../assets/icons/trash.svg';\r\n\r\nconst trash = props => {\r\n    return (\r\n        <Trash className={`${props.className}`} />\r\n    )\r\n}\r\n\r\nexport default trash;\r\n","import React, { Component } from 'react';\r\nimport uniqid from 'uniqid';\r\nimport Trash from '../../Icons/Trash';\r\nimport AddorRemoveBtn from '../Buttons/AddorRemoveButton';\r\n\r\n\r\nclass CardCart extends Component {\r\n    render() {\r\n        let burgers = this.props.cartBurgers;\r\n\r\n        let ingredients = Object.keys(burgers[this.props.name].ingredients).map(el => {\r\n            return <p key={uniqid()} className=\"card__cart-ingredient\">\r\n                {burgers[this.props.name].ingredients[el].name}\r\n            &nbsp;x&nbsp;{burgers[this.props.name].ingredients[el].amount}</p>\r\n        })\r\n\r\n        let Burger = {\r\n            ...burgers[this.props.name]\r\n        };\r\n\r\n        let btns = (\r\n            <React.Fragment>\r\n                <AddorRemoveBtn value={burgers[this.props.name].cart}\r\n                    className=\"card__cart-btn\"\r\n                    classes=\"btn  btn__primary btn__primary-round \"\r\n                    valueClass=\"u-fontSize-2rem\"\r\n                    removeItem={() => this.props.decrementItem(Burger)}\r\n                    addItem={() => this.props.addItem(Burger)} items={burgers[this.props.name].items}\r\n                />\r\n                <button\r\n                    onClick={() => this.props.deleteItem(Burger)}\r\n                    className=\"card__cart-btn--delete btn btn__delete\"><Trash />\r\n                </button>\r\n            </React.Fragment>\r\n        )\r\n\r\n        let burgerName = burgers[this.props.name].title;\r\n        if (burgerName.startsWith('customBurger')) {\r\n            burgerName = 'Your Burger';\r\n        }\r\n\r\n        return (\r\n            <div className=\"card__cart\">\r\n                <img src={burgers[this.props.name].BurgerImage} alt=\"burger\" className=\"card__cart-img \" />\r\n                <h3 className=\"card__cart-title \">\r\n                    {burgerName}\r\n                </h3>\r\n                <p className={`u-text-${burgers[this.props.name].foodType} card__cart-foodType`}>\r\n                    {burgers[this.props.name].foodType}</p>\r\n                <div className=\"card__cart-ingredients\">\r\n                    {ingredients}\r\n                </div>\r\n\r\n                <p className=\"card__cart-price\">Rs {burgers[this.props.name].price}</p>\r\n                {btns}\r\n            </div>\r\n        )\r\n    };\r\n}\r\n\r\n\r\nexport default CardCart;","import React, { Component } from 'react';\r\nimport uniqid from 'uniqid';\r\nimport { connect } from 'react-redux';\r\nimport CardCart from './../../Shared/Components/Card/CardCart';\r\nimport Loader from '../../Shared/Components/Loader/Loader';\r\n\r\nimport Alert from './../../Shared/Components/Alert/Alert';\r\n\r\nimport * as cartActions from './../../Store/actions/cart';\r\nimport * as orderActions from './../../Store/actions/orders';\r\n\r\n\r\nclass Cart extends Component {\r\n    state = {\r\n        isLoading: false,\r\n        alert: {\r\n            show: false,\r\n            status: '',\r\n            message: '',\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({ isLoading: true })\r\n        this.timer = setTimeout(() => {\r\n            this.setState({ isLoading: false })\r\n        }, 2000)\r\n    }\r\n\r\n    showAlertHandler = (message, status) => {\r\n        this.setState({\r\n            ...this.state,\r\n            alert: {\r\n                show: true,\r\n                status,\r\n                message,\r\n            }\r\n        })\r\n    }\r\n\r\n    onCloseHandler = () => {\r\n        this.closeAlertTimer = setTimeout(() => {\r\n            this.setState({\r\n                ...this.state,\r\n                alert: {\r\n                    show: false, status: '', message: ''\r\n                }\r\n            });\r\n        }, 2000)\r\n    }\r\n\r\n    takeToMenu = () => this.props.history.push({ pathname: '/menu' })\r\n    goBack = () => this.props.history.goBack();\r\n\r\n\r\n    decrementItemFromCartHandler = (Burger) => {\r\n        if (Burger.items > 0) {\r\n            this.props.onDecrementItemCart(Burger)\r\n        } else {\r\n            this.props.onItemRemovedFromCart(Burger)\r\n        }\r\n        this.showAlertHandler('Removed Burger from Cart', 'fail')\r\n    }\r\n\r\n\r\n    deleteItemFromCart = (Burger) => {\r\n        this.props.onItemRemovedFromCart(Burger);\r\n        this.showAlertHandler('Removed Burger from Cart', 'fail')\r\n    }\r\n\r\n    addItemInCartHandler = (Burger) => {\r\n        this.props.onIncrementItemInCart(Burger);\r\n        this.showAlertHandler('Added a Burger', 'success')\r\n    }\r\n\r\n    onOrderHandler = async () => {\r\n        if (!this.props.user) {\r\n            return this.props.history.replace('/login');\r\n        }\r\n\r\n        let menuOrders = [];\r\n        let customOrders = [];\r\n        Object.keys(this.props.cartBurgers).map(el => {\r\n            if (!`${el}`.startsWith('customBurger')) {\r\n                let menuOrder = {\r\n                    _id: this.props.cartBurgers[el]._id,\r\n                    items: this.props.cartBurgers[el].items\r\n                };\r\n                return menuOrders.push(menuOrder)\r\n            } else {\r\n                let ings = [];\r\n                Object.keys(this.props.cartBurgers[el].ingredients).map(el2 => {\r\n                    let ing = {\r\n                        _id: this.props.cartBurgers[el].ingredients[el2]._id,\r\n                        amount: this.props.cartBurgers[el].ingredients[el2].amount\r\n                    }\r\n                    return ings.push(ing);\r\n                })\r\n                let customOrder = {\r\n                    ...this.props.cartBurgers[el],\r\n                    name: 'Custom Burger',\r\n                    items: this.props.cartBurgers[el].items,\r\n                    ingredients: ings\r\n                }\r\n                return customOrders.push(customOrder)\r\n            }\r\n        })\r\n\r\n        const data = {\r\n            price: this.props.totalPrice,\r\n            menuOrders,\r\n            customOrders\r\n        }\r\n\r\n        await this.props.placeOrder(data)\r\n        if (this.props.placeOrderStatus) {\r\n            this.placeOrderTimer = setTimeout(() => {\r\n                this.props.history.replace('/')\r\n                this.props.clearCart();\r\n            }, 1500)\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n        let cards, markup;\r\n        let burgers = this.props.cartBurgers;\r\n\r\n        // Push items to cart if cart val is not zero \r\n        if (this.props.cart > 0) {\r\n            cards = Object.keys(burgers).map(el => {\r\n                if (burgers[el]) {\r\n                    return <CardCart\r\n                        key={uniqid()}\r\n                        name={el}\r\n                        decrementItem={this.decrementItemFromCartHandler}\r\n                        deleteItem={this.deleteItemFromCart}\r\n                        addItem={this.addItemInCartHandler}\r\n                        cartBurgers={this.props.cartBurgers}\r\n                    />\r\n                } else return '';\r\n            });\r\n\r\n            markup = (\r\n                <React.Fragment>\r\n                    <button onClick={this.goBack} className=\"btn btn__tertiary-back cart__goback-btn\">\r\n                        <span>&larr;</span> Back\r\n                    </button>\r\n                    <h2 className=\"heading-1 cart__heading\">Your Cart</h2>\r\n                    <div className=\"cart__checkout\">\r\n                        <p className=\"cart__checkout-price\">Total:&nbsp;\r\n                        <span className=\"u-ftwt-700 u-fontSize-4 u-text-transform-none\">Rs&nbsp;{this.props.totalPrice} </span></p>\r\n                        <button\r\n                            onClick={this.onOrderHandler}\r\n                            className=\"btn btn__tertiary-goTo\">Place Your Order\r\n                        <span>&rarr;</span></button>\r\n                    </div>\r\n                    <div className=\"cart\">\r\n                        {cards}\r\n                    </div>\r\n                </React.Fragment>\r\n            );\r\n        } else {\r\n            markup = (\r\n                <div className=\"cart__empty\">\r\n                    <p className=\"cart__empty-heading\">Your Cart is empty!</p>\r\n                    <button onClick={this.takeToMenu} className=\"btn btn__tertiary cart__empty-btn\">Start Adding Items</button>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        if (this.state.isLoading || this.props.placeOrderLoading) return <div className=\"u-flex-center u-vh-100\"><Loader /></div>\r\n\r\n        if (this.props.placeOrderStatus) {\r\n            return (\r\n                <div className=\"u-flex-center u-vh-100\">\r\n                    <h2 className=\"u-fontSize-3rem u-text-success\">Order Placed Successfully</h2>\r\n                </div>\r\n            )\r\n        }\r\n\r\n        return (\r\n            <React.Fragment>\r\n                {this.state.alert.status && <Alert\r\n                    close={this.onCloseHandler()}\r\n                    show={this.state.alert.show}\r\n                    status={this.state.alert.status}\r\n                    message={this.state.alert.message}\r\n                />}\r\n                <div className=\"section-cart\">\r\n                    {markup}\r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.auth.user,\r\n        cart: state.cart.cart,\r\n        cartBurgers: state.cart.Burgers,\r\n        totalPrice: state.cart.totalPrice,\r\n        menuBurgers: state.menu.Burgers,\r\n        placeOrderLoading: state.orders.createUserOrderInit,\r\n        placeOrderStatus: state.orders.createUserOrderStatus\r\n    };\r\n};\r\n\r\nconst mapDispachToProps = dispatch => {\r\n    return {\r\n        onIncrementItemInCart: (Burger) => dispatch(cartActions.incrementItem(Burger)),\r\n        onDecrementItemCart: (Burger) => dispatch(cartActions.decrementItem(Burger)),\r\n        onItemRemovedFromCart: (Burger) => dispatch(cartActions.removeBurgerFromCart(Burger)),\r\n        placeOrder: (data) => dispatch(orderActions.createOrders(data)),\r\n        clearCart: () => dispatch(cartActions.clearCartInit())\r\n    };\r\n};\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispachToProps)(Cart);","import React, { Component } from 'react';\r\nimport NonVeg from './../../../../assets/images/non-veg.jpg';\r\nimport Veg from './../../../../assets/images/veg.jpg';\r\nimport { Link } from 'react-router-dom';\r\nimport Loader from '../../../Shared/Components/Loader/Loader';\r\n\r\n\r\nclass CustomBurgerHome extends Component {\r\n    state = {\r\n        isLoading: false\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({ isLoading: true })\r\n        this.timer = setTimeout(() => {\r\n            this.setState({ isLoading: false })\r\n        }, 1000)\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        clearTimeout(this.timer);\r\n    }\r\n\r\n    render() {\r\n\r\n        if (this.state.isLoading) return <div className=\"u-flex-center u-vh-100\"><Loader /></div>\r\n\r\n        return (\r\n            <section className=\"custom-burger__home\">\r\n                <div className=\"custom-burger__home-veg\">\r\n                    <span>\r\n                        <Link to={this.props.match.url + '/veg'}>\r\n                            <img className=\"custom-burger__home-img\" src={Veg} alt=\"Veg\" />\r\n                        </Link>\r\n                        <h3 className=\"u-text-success custom-burger__home-text custom-burger__home-text-veg\">Vegetarian</h3>\r\n                    </span>\r\n                </div>\r\n\r\n                <h2 className=\"custom-burger__home-heading\">CHOOSE YOUR DIET</h2>\r\n\r\n                <div className=\"custom-burger__home-non-veg\">\r\n                    <Link to={this.props.match.url + '/non-veg'}>\r\n                        <img className=\"custom-burger__home-img\" src={NonVeg} alt=\"Non Veg\" />\r\n                    </Link>\r\n                    <h3 className=\"u-text-danger custom-burger__home-text\">Non Vegetarian</h3>\r\n                </div>\r\n            </section>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CustomBurgerHome;\r\n","import React, { Component } from 'react';\r\n\r\nclass Ingredients extends Component {\r\n    render() {\r\n        let markup;\r\n\r\n        switch (this.props.ingredient) {\r\n            case 'breadTop':\r\n                markup = <div className=\"bread-top\"></div>\r\n                break;\r\n            case 'breadBottom':\r\n                markup = <div className=\"bread-bottom\"></div>\r\n                break;\r\n            case 'chicken':\r\n                markup = <div className=\"chicken\"></div>\r\n                break;\r\n            case 'aloo':\r\n                markup = <div className=\"aloo\"></div>\r\n                break;\r\n            case 'lettuce':\r\n                markup = <div className=\"lettuce\"></div>\r\n                break;\r\n            case 'paneer':\r\n                markup = <div className=\"paneer\"></div>\r\n                break;\r\n            case 'cheese':\r\n                markup = <div className=\"cheese\"></div>\r\n                break;\r\n            case 'tomatoes':\r\n                markup = <div className=\"tomatoes\"></div>\r\n                break;\r\n            default:\r\n                markup = null;\r\n                break;\r\n        }\r\n        return markup;\r\n    }\r\n}\r\n\r\nexport default Ingredients;\r\n","import React, { Component } from \"react\";\r\nimport Ingredient from \"./Ingredients/Ingredients\";\r\nimport uniqid from \"uniqid\";\r\n\r\nclass Burger extends Component {\r\n  render() {\r\n    let ingredients = null;\r\n    if (this.props.ingredients) {\r\n      ingredients = Object.keys(this.props.ingredients).map((el) => {\r\n        return [...Array(this.props.ingredients[el].value)].map(() => {\r\n          return <Ingredient key={uniqid()} ingredient={el} />;\r\n        });\r\n      });\r\n    }\r\n\r\n    return (\r\n      <div className=\"burger\">\r\n        <Ingredient ingredient=\"breadTop\" />\r\n        {ingredients}\r\n        <Ingredient ingredient=\"breadBottom\" />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Burger;\r\n","import React from 'react';\r\nimport AddorRemoveBtn from './../../Buttons/AddorRemoveButton';\r\nconst buildControl = props => {\r\n\r\n    return (\r\n        <div className=\"controls__ingredient\">\r\n            <img src={props.photo} alt=\"ingredient\" className=\"controls__ingredient-img\" />\r\n            <p className=\"controls__ingredient-name\">{props.name}</p>\r\n            <AddorRemoveBtn\r\n                addItem={props.addIng}\r\n                removeItem={props.removeIng}\r\n                items={parseInt(props.items)}\r\n                classes=\"btn btn__primary btn__primary-round\"\r\n                valueClass=\"u-fontSize-2rem\" />\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default buildControl;\r\n","import React, { Component } from 'react';\r\nimport Controls from './../Burger/Controls/Controls';\r\n// import uniqid from 'uniqid';\r\n\r\nexport default class IngredientControls extends Component {\r\n    render() {\r\n        let markupIngs;\r\n        let ings = {};\r\n        let disabled = true;\r\n\r\n        let style = this.props.hidePrice ? { display: 'none' } : null\r\n\r\n        this.props.ingredients ?\r\n            markupIngs = Object.keys(this.props.ingredients)\r\n                .filter((el) => {\r\n                    return this.props.ingredients[el].foodType !== this.props.NotfoodType;\r\n                })\r\n                .map((el2) => {\r\n                    if (this.props.ingredients[el2].value > 0) {\r\n                        disabled = false;\r\n                        ings[el2] = {\r\n                            name: el2,\r\n                            _id: this.props.ingredients[el2]._id,\r\n                            amount: this.props.ingredients[el2].value,\r\n                        }\r\n                    }\r\n                    return (\r\n                        <Controls name={el2} key={el2} items={this.props.ingredients[el2].value} photo={this.props.ingredients[el2].photo}\r\n                            addIng={() => this.props.addIngredient(el2)}\r\n                            removeIng={() => this.props.removeIngredient(el2)}\r\n                        />\r\n                    );\r\n                }) : markupIngs = '';\r\n\r\n        return (\r\n            <div className={`controls__ingredients ${this.props.className}`}>\r\n                <p className=\"controls__price\" style={style}>\r\n                    Total Price:&nbsp;\r\n                <span className=\"controls__price-value\" >\r\n                        Rs&nbsp;{this.props.totalBurgerPrice}\r\n                    </span>\r\n                </p>\r\n                {markupIngs}\r\n                <button\r\n                    type=\"button\"\r\n                    onClick={this.props.danger} className=\"btn btn__danger--outline\"> {this.props.dangerField} </button>\r\n                <button\r\n                    type={this.props.successBtnType ? this.props.successBtnType : \"button\"}\r\n                    onClick={() => this.props.success(ings, this.props.foodType)} disabled={disabled}\r\n                    className={`btn btn__success${disabled === true ? \"--outline-disabled\" : \"--outline\"}`}>{this.props.successField}</button>\r\n            </div >\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport Burger from './../../../Shared/Components/Burger/Burger';\r\n\r\nimport * as burgerBuilderActions from \"../../../Store/actions/burgerBuilder\";\r\nimport * as cartActions from \"../../../Store/actions/cart\";\r\n\r\n\r\nimport customBurgerImg from \"./../../../../assets/images/logo.svg\";\r\nimport Alert from '../../../Shared/Components/Alert/Alert';\r\nimport Loader from '../../../Shared/Components/Loader/Loader';\r\nimport IngredientControls from '../../../Shared/Components/IngredientControls/IngredientControls';\r\n\r\n\r\n\r\nclass customBurgerBuilder extends Component {\r\n    state = {\r\n        alert: {\r\n            show: false,\r\n            status: '',\r\n            message: '',\r\n        },\r\n        isLoading: false,\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        this.setState({ isLoading: true })\r\n        this.props.getIngredients();\r\n        this.timer = setTimeout(() => {\r\n            this.setState({ isLoading: false })\r\n        }, 1000)\r\n    }\r\n\r\n    showAlertHandler = (message, status) => {\r\n        this.setState({\r\n            ...this.state,\r\n            alert: {\r\n                show: true,\r\n                status,\r\n                message,\r\n            }\r\n        })\r\n    }\r\n\r\n    onCloseHandler = () => {\r\n        this.closeAlertTimer = setTimeout(() => {\r\n            this.setState({\r\n                ...this.state,\r\n                alert: {\r\n                    show: false, status: '', message: ''\r\n                }\r\n            });\r\n        }, 2000)\r\n    }\r\n\r\n\r\n    AddBurgerToCartHandler = async (ings, foodType) => {\r\n        let idArr = Object.keys(ings).map(el => (el + ings[el].amount));\r\n        let id = idArr.toString().split(',').join('');\r\n        let BurgerNew = {\r\n            id: id,\r\n            initialprice: this.props.totalBurgerPrice,\r\n            price: this.props.totalBurgerPrice,\r\n            ingredients: ings,\r\n            items: 0,\r\n            title: \"customBurger\",\r\n            foodType: foodType,\r\n            BurgerImage: customBurgerImg,\r\n        };\r\n\r\n        this.showAlertHandler('Added burger to cart successfully', 'success');\r\n        this.props.addBurgerToCart(BurgerNew);\r\n        this.clearIngsTimer = setTimeout(() => {\r\n            this.props.clearPriceValue();\r\n            this.props.clearIngValues(this.props.ingredients);\r\n            this.props.history.push('/cart')\r\n        }, 2000)\r\n    };\r\n\r\n    goBackButtonHandler = () => {\r\n        this.props.clearPriceValue();\r\n        this.props.clearIngValues(this.props.ingredients);\r\n        this.props.history.push('/build-your-burger')\r\n    };\r\n\r\n    componentWillUnmount() {\r\n        clearTimeout(this.timer);\r\n        clearTimeout(this.clearIngsTimer);\r\n    }\r\n\r\n    render() {\r\n        let burger = this.props.error ? <p>Ingredients Cannot be Loaded</p> : <Burger ingredients={this.props.ingredients} />\r\n        let markup, NotfoodType, foodType;\r\n\r\n        if (this.props.match.url === `/build-your-burger/non-veg`) {\r\n            NotfoodType = \"vegetarian\";\r\n            foodType = \"non-vegetarian\";\r\n        } else if (this.props.match.url === `/build-your-burger/veg`) {\r\n            NotfoodType = \"non-vegetarian\";\r\n            foodType = \"vegetarian\";\r\n        }\r\n\r\n        markup = (\r\n            <IngredientControls\r\n                ingredients={this.props.ingredients}\r\n                NotfoodType={NotfoodType}\r\n                foodType={foodType}\r\n                totalBurgerPrice={this.props.totalBurgerPrice}\r\n                success={this.AddBurgerToCartHandler}\r\n                danger={this.goBackButtonHandler}\r\n                successField=\"Add to Cart\"\r\n                dangerField=\"Go Back\"\r\n                disabled={this.props.disabled}\r\n                addIngredient={this.props.addIngredient}\r\n                removeIngredient={this.props.removeIngredient}\r\n            />\r\n        )\r\n\r\n        if (this.state.isLoading) return <div className=\"u-flex-center u-vh-100\"><Loader /></div>\r\n\r\n        return (\r\n            <React.Fragment>\r\n                {this.state.alert.status && <Alert\r\n                    close={this.onCloseHandler()}\r\n                    show={this.state.alert.show}\r\n                    status={this.state.alert.status}\r\n                    message={this.state.alert.message}\r\n                />}\r\n                <section className=\"custom-burger\">\r\n                    {burger}\r\n                    <div className=\"controls\">{markup}</div>\r\n                </section>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        ingredients: state.burgerBuilder.ingredients,\r\n        totalBurgerPrice: state.burgerBuilder.totalPrice,\r\n        error: state.burgerBuilder.error\r\n    }\r\n}\r\n\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addIngredient: (name) => dispatch(burgerBuilderActions.addIngredient(name)),\r\n        removeIngredient: (name) => dispatch(burgerBuilderActions.removeIngredient(name)),\r\n        addBurgerToCart: (burger) => dispatch(cartActions.addBurgerToCart(burger)),\r\n        clearIngValues: (ings) => dispatch(burgerBuilderActions.clearIngredientValues(ings)),\r\n        clearPriceValue: () => dispatch(burgerBuilderActions.clearPriceValue()),\r\n        getIngredients: () => dispatch(burgerBuilderActions.initIngredients())\r\n    };\r\n};\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(customBurgerBuilder);\r\n\r\n\r\n\r\n","import React, { Component } from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport CustomBurgerHome from './pages/CustomBurgerHome';\r\nimport customBurgerBuilder from './pages/customBurgerBuilder';\r\n\r\nclass CustomBurgerNew extends Component {\r\n    render() {\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <Switch>\r\n                    <Route path={`${this.props.match.url}`} exact component={CustomBurgerHome} />\r\n                    <Route path={`${this.props.match.url}/veg`} component={customBurgerBuilder} />\r\n                    <Route path={`${this.props.match.url}/non-veg`} component={customBurgerBuilder} />\r\n                </Switch>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CustomBurgerNew;","import React from 'react';\r\nimport Logo from './../../Shared/Icons/Logo';\r\n\r\nimport aboutImg from './../../../assets/images/about-1.jpg';\r\nimport BurgerImage1 from './../../../assets/images/gallery-1.jpg';\r\nimport BurgerImage2 from './../../../assets/images/gallery-2.jpg';\r\nimport BurgerImage3 from './../../../assets/images/gallery-3.jpg';\r\n\r\nconst about = props => {\r\n    return (\r\n        <div className=\"about\">\r\n            <div className=\"about__container\">\r\n                <img src={aboutImg} alt=\"about-img\" className=\"about__bg\" />\r\n                <h2 className=\"about__heading\">About burger house</h2>\r\n                <div className=\"about__card card__static\">\r\n                    <div className=\"card__static-brand\">\r\n                        <Logo />\r\n                        <h3 className=\"card__static-brand-name\">Burger house</h3>\r\n                    </div>\r\n                    <p className=\"card__static-para\">\r\n                        Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer id hendrerit odio. Suspendisse lectus nisi, luctus ac varius vitae, lacinia ac felis. Nam pellentesque quam vel molestie viverra. Pellentesque fringilla arcu sapien. Aenean in pharetra urna, quis imperdiet dui. Sed feugiat odio eget velit lobortis congue. Ut et nulla diam. Sed mi felis, vestibulum id quam venenatis, iaculis accumsan ligula. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia curae; Pellentesque rhoncus magna a dignissim gravida. Aliquam scelerisque quam ex, vitae dignissim quam egestas et. Maecenas at felis aliquam, dignissim massa id, vestibulum tellus. Cras lacinia dui leo, ut luctus sem porttitor vel. Sed sollicitudin sed mauris a commodo. Aliquam a enim dignissim, posuere enim ac, facilisis mauris.\r\n                    </p>\r\n                </div>\r\n                <div className=\"about__gallery gallery\">\r\n                    <img className=\"gallery__img gallery__img-1\" src={BurgerImage1} alt=\"burger-1\" />\r\n                    <img className=\"gallery__img gallery__img-2\" src={BurgerImage2} alt=\"burger-2\" />\r\n                    <img className=\"gallery__img gallery__img-3\" src={BurgerImage3} alt=\"burger-3\" />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default about;\r\n","import React from 'react'\r\n\r\nconst Input = props => {\r\n    if (props.inputtype === 'input') {\r\n        let required = props.required === false ? false : true;\r\n        return (\r\n            <div className={`form__group `}>\r\n                <label className=\"form__label\">{props.label}</label>\r\n                <input\r\n                    type={props.type}\r\n                    name={props.name}\r\n                    id={props.name}\r\n                    placeholder={props.placeholder}\r\n                    className={`form__${props.inputtype} ${props.className}`}\r\n                    onChange={props.onChange}\r\n                    minLength={props.minLength}\r\n                    value={props.value}\r\n                    required={required}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n\r\n    if (props.inputtype === 'submit') {\r\n        let markup = <input type=\"submit\"\r\n            value={props.value}\r\n            className={`btn btn__${props.variant} ${props.className}`}\r\n            {...props}\r\n        />\r\n\r\n        return (\r\n            <div className={`form__group ${props.formGroupClass}`}>\r\n                {markup}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Input\r\n","import * as actionTypes from './actions';\r\nimport axios from 'axios';\r\n\r\nlet URL = `http://localhost:4000`;\r\nURL = ``;\r\n\r\n/////////////////////////////////////////////////////////////////////////////////////\r\n\r\nexport const checkAuthInit = () => {\r\n    return {\r\n        type: actionTypes.CHECK_AUTH_STATE_INIT,\r\n    }\r\n}\r\n\r\n\r\nexport const checkAuthSuccess = user => {\r\n    return {\r\n        type: actionTypes.CHECK_AUTH_STATE_SUCCESS,\r\n        user\r\n    }\r\n}\r\n\r\nexport const checkAuthFailed = error => {\r\n    return {\r\n        type: actionTypes.CHECK_AUTH_STATE_FAILED,\r\n        error\r\n    }\r\n}\r\n\r\nexport const checkAuth = () => {\r\n    return async dispatch => {\r\n        try {\r\n            let res = await axios.get(`${URL}/api/v1/users/checkAuth`)\r\n            dispatch(checkAuthSuccess(res.data.user))\r\n        } catch (err) {\r\n            dispatch(checkAuthFailed(err));\r\n        }\r\n    }\r\n}\r\n\r\n\r\n////////////////////////////////////////////////////////////////////////////////////////\r\n// REGISTER USER\r\n\r\nexport const registerInit = () => {\r\n    return {\r\n        type: actionTypes.REGISTER_USER_INIT\r\n    }\r\n}\r\n\r\nexport const registerSuccess = res => {\r\n    return {\r\n        type: actionTypes.REGISTER_USER_SUCCESS,\r\n        response: res\r\n    }\r\n}\r\n\r\n\r\nexport const registerFailed = error => {\r\n    return {\r\n        type: actionTypes.REGISTER_USER_FAILED,\r\n        error\r\n    }\r\n}\r\n\r\nexport const register = (data) => {\r\n    return async dispatch => {\r\n        dispatch(registerInit());\r\n        try {\r\n            const res = await axios({\r\n                method: 'POST',\r\n                url: `${URL}/api/v1/users/register`,\r\n                data\r\n            })\r\n            dispatch(registerSuccess(res))\r\n        } catch (err) {\r\n            let error = { ...err }.response ? { ...err }.response : err;\r\n            dispatch(registerFailed(error))\r\n        }\r\n    }\r\n}\r\n\r\n//////////////////////////////////////////////////////////////////////\r\n// LOGIN USER\r\n\r\n\r\nexport const loginInit = () => {\r\n    return {\r\n        type: actionTypes.LOGIN_USER_INIT\r\n    }\r\n}\r\n\r\nexport const loginSuccess = res => {\r\n    return {\r\n        type: actionTypes.LOGIN_USER_SUCCESS,\r\n        response: res\r\n    }\r\n}\r\n\r\n\r\nexport const loginFailed = error => {\r\n    return {\r\n        type: actionTypes.LOGIN_USER_FAILED,\r\n        error\r\n    }\r\n}\r\n\r\nexport const login = (data) => {\r\n    return async dispatch => {\r\n        dispatch(loginInit());\r\n        try {\r\n            const res = await axios({\r\n                method: 'POST',\r\n                url: `${URL}/api/v1/users/login`,\r\n                data\r\n            })\r\n            dispatch(loginSuccess(res))\r\n        } catch (err) {\r\n            let error = { ...err }.response ? { ...err }.response : err;\r\n            dispatch(loginFailed(error))\r\n        }\r\n    }\r\n}\r\n/////////////////////////////////////////////////////////////////////////\r\n// LOGOUT USER\r\n\r\nexport const logoutInit = () => {\r\n    return {\r\n        type: actionTypes.LOGOUT_USER_INIT\r\n    }\r\n}\r\n\r\nexport const logoutSuccess = () => {\r\n    return {\r\n        type: actionTypes.LOGOUT_USER_SUCCESS,\r\n        user: null\r\n    }\r\n}\r\n\r\n\r\nexport const logoutFailed = err => {\r\n    return {\r\n        type: actionTypes.LOGOUT_USER_FAILED,\r\n        error: err\r\n    }\r\n}\r\n\r\nexport const logout = () => {\r\n    return async dispatch => {\r\n        dispatch(logoutInit());\r\n        try {\r\n            await axios.get(`${URL}/api/v1/users/logout`)\r\n            dispatch(logoutSuccess());\r\n        } catch (err) {\r\n            let error = { ...err }.response ? { ...err }.response.data : err\r\n            dispatch(logoutFailed(error))\r\n        }\r\n    }\r\n}\r\n\r\n//////////////////////////////////////////////////////////////////////////////\r\n// UPDATE CURRENT USER DATA\r\n\r\n\r\nexport const updateCurrentUserInit = () => {\r\n    return {\r\n        type: actionTypes.UPDATE_CURRENT_USER_INIT\r\n    }\r\n}\r\n\r\nexport const updateCurrentUserSuccess = user => {\r\n    return {\r\n        type: actionTypes.UPDATE_CURRENT_USER_SUCCESS,\r\n        user\r\n    }\r\n}\r\n\r\n\r\nexport const updateCurrentUserFailed = err => {\r\n    return {\r\n        type: actionTypes.UPDATE_CURRENT_USER_FAILED,\r\n        error: err\r\n    }\r\n}\r\n\r\n\r\nexport const updateCurrentUser = (data) => {\r\n    return async dispatch => {\r\n        dispatch(updateCurrentUserInit());\r\n        try {\r\n            const res = await axios({\r\n                method: 'PATCH',\r\n                url: `${URL}/api/v1/users/me`,\r\n                data,\r\n            })\r\n            dispatch(updateCurrentUserSuccess(res.data.user))\r\n        } catch (err) {\r\n            let error = { ...err }.response ? { ...err }.response.data : err\r\n            dispatch(updateCurrentUserFailed(error))\r\n        }\r\n    }\r\n}\r\n\r\n/////////////////////////////////////////////////////////////////////////////////////\r\n// Update current user password\r\n\r\n\r\nexport const updateCurrentUserPasswordInit = () => {\r\n    return {\r\n        type: actionTypes.UPDATE_CURRENT_USER_PASSWORD_INIT\r\n    }\r\n}\r\n\r\nexport const updateCurrentUserPasswordSuccess = user => {\r\n    return {\r\n        type: actionTypes.UPDATE_CURRENT_USER_PASSWORD_SUCCESS,\r\n        user\r\n    }\r\n}\r\n\r\n\r\nexport const updateCurrentUserPasswordFailed = err => {\r\n    return {\r\n        type: actionTypes.UPDATE_CURRENT_USER_PASSWORD_FAILED,\r\n        error: err\r\n    }\r\n}\r\n\r\nexport const updateCurrentUserPassword = (data) => {\r\n    return async dispatch => {\r\n        dispatch(updateCurrentUserPasswordInit());\r\n        try {\r\n            await axios({\r\n                method: 'PATCH',\r\n                url: `${URL}/api/v1/users/updateCurrentUserPassword`,\r\n                data,\r\n            })\r\n            dispatch(updateCurrentUserPasswordSuccess())\r\n            dispatch(logout());\r\n        } catch (err) {\r\n            let error = { ...err }.response ? { ...err }.response.data : err\r\n            dispatch(updateCurrentUserPasswordFailed(error))\r\n        }\r\n    }\r\n}\r\n\r\n///////////////////////////////////////////////////////////////////////\r\n// delete current user\r\n\r\n\r\nexport const deleteCurrentUserInit = () => {\r\n    return {\r\n        type: actionTypes.DELETE_CURRENT_USER_INIT\r\n    }\r\n}\r\n\r\n\r\nexport const deleteCurrentUserSuccess = () => {\r\n    return {\r\n        type: actionTypes.DELETE_CURRENT_USER_SUCCESS\r\n    }\r\n}\r\n\r\n\r\nexport const deleteCurrentUserFailed = err => {\r\n    return {\r\n        type: actionTypes.DELETE_CURRENT_USER_FAILED,\r\n        error: err\r\n    }\r\n}\r\n\r\nexport const deleteCurrentUser = () => {\r\n    return async dispatch => {\r\n        try {\r\n            await axios({\r\n                method: 'DELETE',\r\n                url: `${URL}/api/v1/users/me`,\r\n            })\r\n            dispatch(deleteCurrentUserSuccess());\r\n            dispatch(logout());\r\n        } catch (err) {\r\n            dispatch(deleteCurrentUserFailed(err.response.data))\r\n        }\r\n    }\r\n}","export const onChangeFormInput = (e, state) => {\r\n    return {\r\n        ...state,\r\n        formInput: {\r\n            ...state.formInput,\r\n            [e.target.name]: e.target.value\r\n        }\r\n    }\r\n}\r\n\r\nexport const clearFields = (state) => {\r\n    let stateCopy = { ...state.formInput };\r\n    let formInput = {};\r\n    Object.keys(stateCopy).map(el => {\r\n        return formInput[el] = ''\r\n    })\r\n    return formInput;\r\n}","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport Input from '../../Shared/Components/Form/Input';\r\n\r\nimport * as authActions from './../../Store/actions/auth';\r\n\r\nimport { onChangeFormInput, clearFields } from '../../Shared/Utils/formInput';\r\nimport Loader from '../../Shared/Components/Loader/Loader';\r\n\r\nimport Alert from '../../Shared/Components/Alert/Alert';\r\n\r\n\r\nclass Register extends Component {\r\n    state = {\r\n        formInput: {\r\n            name: '',\r\n            email: '',\r\n            password: '',\r\n            passwordConfirm: ''\r\n        },\r\n        isLoading: false,\r\n        showAlert: false\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({ isLoading: true })\r\n        setTimeout(() => {\r\n            this.setState({ isLoading: false })\r\n        }, 300)\r\n    }\r\n\r\n    onChangeHandler = e => {\r\n        let formInput = onChangeFormInput(e, { ...this.state })\r\n        this.setState({ ...formInput })\r\n    }\r\n\r\n    onSubmitHandler = async e => {\r\n        e.preventDefault();\r\n        await this.props.registerUser(this.state.formInput)\r\n        let formInput = clearFields(this.state);\r\n\r\n        this.setState({ formInput, showAlert: true })\r\n    }\r\n\r\n    onCloseHandler = () => {\r\n        this.closeAlertTimer = setTimeout(() => {\r\n            this.setState({ showAlert: false });\r\n            if (this.props.registerStatus.data.status === 'success') {\r\n                this.props.history.replace('/login')\r\n            }\r\n        }, 2000)\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        clearTimeout(this.closeAlertTimer);\r\n    }\r\n\r\n    render() {\r\n        if (this.state.isLoading) {\r\n            return <div className=\"u-flex-center u-vh-100\" ><Loader /></div>\r\n        }\r\n\r\n\r\n        let authRedirect = null;\r\n        if (this.props.user) {\r\n            authRedirect = <Redirect to=\"/dashboard\" />\r\n        }\r\n\r\n        return (\r\n            <React.Fragment>\r\n                {authRedirect}\r\n                {this.state.showAlert && this.props.registerStatus &&\r\n                    <Alert\r\n                        show={this.state.showAlert}\r\n                        status={this.props.registerStatus === 'success' ? this.props.registerStatus : this.props.registerStatus.data.status}\r\n                        message={this.props.registerStatus.data.status === 'success'\r\n                            ? \"User Created Successfully\"\r\n                            : this.props.registerStatus.data.message}\r\n                        close={this.onCloseHandler()}\r\n                    />}\r\n                <section className=\"register\">\r\n\r\n                    <form className=\"register__form\" onSubmit={this.onSubmitHandler} autoComplete=\"off\">\r\n                        <div className=\"form__group\">\r\n                            <h2 className=\"heading-1 u-text-primary u-ftwt-400\">Create an Account</h2>\r\n                        </div>\r\n                        <Input\r\n                            name=\"name\"\r\n                            inputtype=\"input\"\r\n                            type=\"text\"\r\n                            label=\"Name\"\r\n                            onChange={this.onChangeHandler}\r\n                            value={this.state.formInput.name}\r\n                        />\r\n\r\n                        <Input\r\n                            name=\"email\"\r\n                            inputtype=\"input\"\r\n                            type=\"email\"\r\n                            label=\"Email\"\r\n                            onChange={this.onChangeHandler}\r\n                            value={this.state.formInput.email}\r\n                        />\r\n\r\n                        <Input\r\n                            name=\"password\"\r\n                            inputtype=\"input\"\r\n                            type=\"password\"\r\n                            label=\"Password\"\r\n                            onChange={this.onChangeHandler}\r\n                            value={this.state.formInput.password}\r\n                            minLength={6}\r\n                        />\r\n\r\n                        <Input\r\n                            name=\"passwordConfirm\"\r\n                            inputtype=\"input\"\r\n                            type=\"password\"\r\n                            label=\"Password Confirm\"\r\n                            onChange={this.onChangeHandler}\r\n                            value={this.state.formInput.passwordConfirm}\r\n                            minLength={6}\r\n                        />\r\n\r\n                        <Input\r\n                            inputtype='submit'\r\n                            value={!this.props.registerInit ? 'Register' : 'Loading....'}\r\n                            variant=\"tertiary\" />\r\n                    </form>\r\n                </section>\r\n            </React.Fragment>\r\n        );\r\n    };\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        registerInit: state.auth.registerInit,\r\n        registerStatus: state.auth.registerStatus,\r\n        user: state.auth.user,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        registerUser: (data) => dispatch(authActions.register(data)),\r\n\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Register);\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport Input from '../../Shared/Components/Form/Input';\r\n\r\n\r\nimport * as authActions from './../../Store/actions/auth';\r\n\r\nimport { onChangeFormInput, clearFields } from '../../Shared/Utils/formInput';\r\nimport Loader from '../../Shared/Components/Loader/Loader';\r\n\r\nimport Alert from '../../Shared/Components/Alert/Alert';\r\n\r\nclass Login extends Component {\r\n    state = {\r\n        formInput: {\r\n            email: '',\r\n            password: ''\r\n        },\r\n        isLoading: false,\r\n        showAlert: false\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({ isLoading: true })\r\n        setTimeout(() => {\r\n            this.setState({ isLoading: false })\r\n            if (this.props.user) {\r\n                return this.props.history.goBack();\r\n            }\r\n        }, 2000)\r\n    }\r\n\r\n    onChangeHandler = e => {\r\n        let formInput = onChangeFormInput(e, { ...this.state })\r\n        this.setState({ ...formInput })\r\n    }\r\n\r\n    onCloseHandler = () => {\r\n        this.closeAlertTimer = setTimeout(() => {\r\n            this.setState({ showAlert: false });\r\n            if (this.props.loginStatus === 'success' && this.props.cart) {\r\n                this.props.history.replace('/cart')\r\n            } else if (this.props.loginStatus === 'success' && this.props.user.role === 'admin') {\r\n                this.props.history.replace('/dashboard/manage-orders');\r\n            } else if (this.props.loginStatus === 'success') {\r\n                this.props.history.replace('/menu');\r\n            }\r\n        }, 300)\r\n    }\r\n\r\n    onSubmitHandler = async e => {\r\n        e.preventDefault();\r\n        await this.props.loginUser(this.state.formInput)\r\n        let formInput = clearFields(this.state);\r\n        this.setState({ formInput, showAlert: true });\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        clearTimeout(this.closeAlertTimer);\r\n    }\r\n\r\n    render() {\r\n        if (this.state.isLoading) {\r\n            return <div className=\"u-flex-center u-vh-100\"><Loader /></div>\r\n        }\r\n\r\n        return (\r\n            <React.Fragment>\r\n                {this.state.showAlert && this.props.loginStatus &&\r\n                    <Alert\r\n                        show={this.state.showAlert}\r\n                        status={this.props.loginStatus === 'success' ? this.props.loginStatus : this.props.loginStatus.status}\r\n                        message={this.props.loginStatus === 'success'\r\n                            ? \"User Logged In Successfully\"\r\n                            : this.props.loginStatus.message}\r\n                        close={this.onCloseHandler()}\r\n                    />}\r\n                <section className=\"login\">\r\n                    <form className=\"login__form\" onSubmit={this.onSubmitHandler} autoComplete=\"off\">\r\n                        <div className=\"form__group\">\r\n                            <h2 className=\"heading-1 u-text-primary u-ftwt-400\">Login</h2>\r\n                        </div>\r\n                        <Input\r\n                            name=\"email\"\r\n                            inputtype='input'\r\n                            type='email'\r\n                            label='Email'\r\n                            onChange={this.onChangeHandler}\r\n                            value={this.state.formInput.email} />\r\n\r\n                        <Input\r\n                            name=\"password\"\r\n                            inputtype='input'\r\n                            type='password'\r\n                            label='Password'\r\n                            onChange={this.onChangeHandler}\r\n                            value={this.state.formInput.password}\r\n                            minLength={6} />\r\n                        <Input inputtype='submit' value=\"Login Now\" variant=\"tertiary\" />\r\n                    </form>\r\n                </section>\r\n\r\n            </React.Fragment>\r\n        );\r\n    };\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        loginInit: state.auth.loginInit,\r\n        loginStatus: state.auth.loginStatus,\r\n        user: state.auth.user,\r\n        cart: state.cart.cart\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        loginUser: (data) => dispatch(authActions.login(data)),\r\n\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\r\n","import React, { Component } from 'react';\r\nimport Navbar from '../../../Shared/Components/Navigation/Navbar';\r\nimport NavItem from '../../../Shared/Components/Navigation/NavItem';\r\n\r\nimport Logo from '../../../Shared/Icons/Logo';\r\n\r\nclass Sidebar extends Component {\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <Navbar classNav=\"sidebar__nav\">\r\n                    <div className=\"sidebar__brand\">\r\n                        <Logo />\r\n                        <h2 className=\"sidebar__brand-name\">Burger House</h2>\r\n                    </div>\r\n                    <NavItem\r\n                        closeSidebar={this.props.closeSidebar}\r\n                        active=\"sidebar__nav-link--active\"\r\n                        classNavItemActive=\"sidebar__nav-item--active\"\r\n                        classNavItem={`sidebar__nav-item`} classNavLink=\"sidebar__nav-link\"\r\n                        path={`${this.props.match.url}/my-orders`}>My Orders</NavItem>\r\n\r\n                    <NavItem active=\"sidebar__nav-link--active\"\r\n                        closeSidebar={this.props.closeSidebar}\r\n                        classNavItemActive=\"sidebar__nav-item--active\"\r\n                        classNavItem=\"sidebar__nav-item\" classNavLink=\"sidebar__nav-link\"\r\n                        path={`${this.props.match.url}/manage-profile`}>Settings</NavItem>\r\n\r\n                    {this.props.user.role === 'admin' && <NavItem active=\"sidebar__nav-link--active\"\r\n                        closeSidebar={this.props.closeSidebar}\r\n                        classNavItemActive=\"sidebar__nav-item--active\"\r\n                        classNavItem=\"sidebar__nav-item\" classNavLink=\"sidebar__nav-link\"\r\n                        path={`${this.props.match.url}/manage-users`}>Manage Users</NavItem>}\r\n\r\n                    {this.props.user.role === 'admin' && <NavItem active=\"sidebar__nav-link--active\"\r\n                        closeSidebar={this.props.closeSidebar}\r\n                        classNavItemActive=\"sidebar__nav-item--active\"\r\n                        classNavItem=\"sidebar__nav-item\" classNavLink=\"sidebar__nav-link\"\r\n                        path={`${this.props.match.url}/manage-menu`}>Manage Menu</NavItem>}\r\n\r\n                    {this.props.user.role === 'admin' && <NavItem\r\n                        isActive\r\n                        active=\"sidebar__nav-link--active\"\r\n                        closeSidebar={this.props.closeSidebar}\r\n                        classNavItemActive=\"sidebar__nav-item--active\"\r\n                        classNavItem=\"sidebar__nav-item\" classNavLink=\"sidebar__nav-link\"\r\n                        path={`${this.props.match.url}/manage-orders`}>Manage Orders</NavItem>}\r\n\r\n                    {this.props.user.role === 'admin' && <NavItem\r\n                        isActive\r\n                        active=\"sidebar__nav-link--active\"\r\n                        closeSidebar={this.props.closeSidebar}\r\n                        classNavItemActive=\"sidebar__nav-item--active\"\r\n                        classNavItem=\"sidebar__nav-item\" classNavLink=\"sidebar__nav-link\"\r\n                        path={`${this.props.match.url}/manage-ingredients`}>Manage Ingredients</NavItem>}\r\n\r\n                </Navbar>\r\n            </React.Fragment >\r\n        )\r\n    }\r\n}\r\n\r\nexport default Sidebar;","import React from 'react'\r\nimport Input from '../../../../Shared/Components/Form/Input'\r\nimport { connect } from 'react-redux';\r\nimport { Component } from 'react'\r\n\r\nimport { onChangeFormInput } from '../../../../Shared/Utils/formInput';\r\n\r\nimport * as authActions from '../../../../Store/actions/auth';\r\nimport Alert from '../../../../Shared/Components/Alert/Alert';\r\n\r\n\r\nclass UpdateUserData extends Component {\r\n    state = {\r\n        formInput: {\r\n            name: this.props.user.name,\r\n            email: this.props.user.email,\r\n            photo: this.props.user.photo\r\n        },\r\n        alert: {\r\n            show: false,\r\n            status: '',\r\n            message: '',\r\n        },\r\n        previewPhoto: this.props.user.photo,\r\n        fileUploaded: false,\r\n    }\r\n\r\n    showAlertHandler = (message, status) => {\r\n        this.setState({\r\n            ...this.state,\r\n            alert: {\r\n                show: true,\r\n                status,\r\n                message,\r\n            }\r\n        })\r\n    }\r\n\r\n    onCloseHandler = () => {\r\n        this.closeAlertTimer = setTimeout(() => {\r\n            this.setState({\r\n                ...this.state,\r\n                alert: {\r\n                    show: false, status: '', message: ''\r\n                }\r\n            });\r\n        }, 2000)\r\n    }\r\n\r\n    onChangeHandler = e => {\r\n        let formInput = onChangeFormInput(e, { ...this.state })\r\n        this.setState({ ...formInput })\r\n    }\r\n\r\n    onFileChangeHandler = e => {\r\n        this.setState({\r\n            ...this.state,\r\n            formInput: {\r\n                ...this.state.formInput,\r\n                photo: e.target.files[0]\r\n            },\r\n            fileUploaded: true,\r\n            previewPhoto: URL.createObjectURL(e.target.files[0])\r\n        })\r\n    }\r\n\r\n    onSubmitHandler = async e => {\r\n        e.preventDefault();\r\n        let formData = new FormData();\r\n        formData.append('name', this.state.formInput.name);\r\n        formData.append('email', this.state.formInput.email);\r\n        if (this.state.fileUploaded) {\r\n            formData.append('photo', this.state.formInput.photo);\r\n        }\r\n        await this.props.updateUserData(formData)\r\n        let message, status;\r\n        if (this.props.userDataStatus === 'success') {\r\n            status = this.props.userDataStatus\r\n            message = 'User details updated Successfully'\r\n            this.setState({\r\n                formInput: {\r\n                    ...this.props.photo,\r\n                    name: this.props.user.name,\r\n                    email: this.props.user.email,\r\n                    photo: this.props.user.photo\r\n                },\r\n                previewPhoto: this.props.user.photo,\r\n                fileUploaded: false,\r\n            })\r\n        } else {\r\n            status = this.props.userDataStatus.status;\r\n            message = this.props.userDataStatus.message;\r\n            this.setState({\r\n                fileUploaded: false,\r\n            })\r\n        }\r\n        this.showAlertHandler(message, status)\r\n    }\r\n\r\n    render() {\r\n        console.log(this.state);\r\n        return (\r\n            <React.Fragment>\r\n                {this.state.alert.status && <Alert\r\n                    close={this.onCloseHandler()}\r\n                    show={this.state.alert.show}\r\n                    status={this.state.alert.status}\r\n                    message={this.state.alert.message}\r\n                />}\r\n                <form onSubmit={this.onSubmitHandler} autoComplete=\"off\">\r\n                    <div className=\"form__group\">\r\n                        <h2 className=\"heading-1 u-text-primary u-ftwt-400\">\r\n                            Update User Details\r\n                    </h2>\r\n                    </div>\r\n                    <Input\r\n                        inputtype=\"input\"\r\n                        name=\"name\"\r\n                        type=\"text\"\r\n                        label=\"name\"\r\n                        onChange={this.onChangeHandler}\r\n                        value={this.state.formInput.name}\r\n                    />\r\n\r\n                    <Input\r\n                        inputtype=\"input\"\r\n                        name=\"email\"\r\n                        type=\"email\"\r\n                        label=\"Email\"\r\n                        onChange={this.onChangeHandler}\r\n                        value={this.state.formInput.email}\r\n                    />\r\n\r\n                    <div className=\"form__group u-flex-between\">\r\n                        <div>\r\n                            <input type=\"file\" id=\"photo\" onChange={this.onFileChangeHandler} style={{ display: 'none' }} />\r\n                            <label htmlFor=\"photo\" className=\"btn btn__tertiary-goTo btn__sm\">Choose Image</label>\r\n                        </div>\r\n                        <div className=\"update__user-data-preview-img-bg \">\r\n                            <img src={this.state.previewPhoto} className=\"update__user-data-preview-img-image\" alt={this.state.formInput.name} />\r\n                        </div>\r\n                    </div>\r\n\r\n                    <Input\r\n                        inputtype=\"submit\"\r\n                        value={this.props.loading ? 'Loading....' : \"update details\"}\r\n                        variant=\"tertiary\"\r\n                    />\r\n\r\n                </form >\r\n            </React.Fragment>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.auth.user,\r\n        loading: state.auth.updateUserDataInit,\r\n        userDataStatus: state.auth.updateUserDataStatus,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        updateUserData: (data) => dispatch(authActions.updateCurrentUser(data)),\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UpdateUserData);\r\n","import React, { Component } from 'react'\r\nimport Input from '../../../../Shared/Components/Form/Input'\r\nimport { connect } from 'react-redux';\r\n\r\nimport Alert from '../../../../Shared/Components/Alert/Alert';\r\n\r\nimport { onChangeFormInput } from '../../../../Shared/Utils/formInput';\r\n\r\nimport * as authActions from '../../../../Store/actions/auth';\r\n\r\n\r\nclass UpdateUserPassword extends Component {\r\n    state = {\r\n        formInput: {\r\n            passwordCurrent: '',\r\n            password: '',\r\n            passwordConfirm: '',\r\n        },\r\n        alert: {\r\n            show: false,\r\n            status: '',\r\n            message: '',\r\n        },\r\n    }\r\n\r\n    showAlertHandler = (message, status) => {\r\n        this.setState({\r\n            ...this.state,\r\n            alert: {\r\n                show: true,\r\n                status,\r\n                message,\r\n            }\r\n        })\r\n    }\r\n\r\n    onCloseHandler = () => {\r\n        this.closeAlertTimer = setTimeout(() => {\r\n            this.setState({\r\n                ...this.state,\r\n                alert: {\r\n                    show: false, status: '', message: ''\r\n                }\r\n            });\r\n        }, 2000)\r\n    }\r\n\r\n    onChangeHandler = e => {\r\n        let formInput = onChangeFormInput(e, { ...this.state })\r\n        this.setState({ ...formInput })\r\n    }\r\n\r\n    onSubmitHandler = async e => {\r\n        e.preventDefault();\r\n        await this.props.updateUserPassword(this.state.formInput)\r\n        let message, status;\r\n        if (this.props.userPasswordStatus === 'success') {\r\n            status = this.props.userPasswordStatus\r\n            message = 'User details updated Successfully'\r\n        } else {\r\n            status = this.props.userPasswordStatus.status;\r\n            message = this.props.userPasswordStatus.message;\r\n        }\r\n        this.showAlertHandler(message, status)\r\n        if (status === 'success') {\r\n            this.LogoutTimer = setTimeout(() => {\r\n                this.props.history.replace('/logout');\r\n            }, 2500)\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        clearTimeout(this.LogoutTimer)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                {this.state.alert.status && <Alert\r\n                    close={this.onCloseHandler()}\r\n                    show={this.state.alert.show}\r\n                    status={this.state.alert.status}\r\n                    message={this.state.alert.message}\r\n                />}\r\n                <form onSubmit={this.onSubmitHandler}>\r\n                    <div className=\"form__group\">\r\n                        <h2 className=\"heading-1 u-text-primary u-ftwt-400\">\r\n                            Update User Password\r\n                    </h2>\r\n                    </div>\r\n                    <Input\r\n                        inputtype=\"input\"\r\n                        name=\"passwordCurrent\"\r\n                        type=\"password\"\r\n                        label=\"Current Password\"\r\n                        onChange={this.onChangeHandler}\r\n                        value={this.state.formInput.passwordCurrent}\r\n                        minLength={6}\r\n                    />\r\n\r\n                    <Input\r\n                        inputtype=\"input\"\r\n                        name=\"password\"\r\n                        type=\"password\"\r\n                        label=\"Password\"\r\n                        onChange={this.onChangeHandler}\r\n                        value={this.state.formInput.password}\r\n                        minLength={6}\r\n                    />\r\n\r\n                    <Input\r\n                        inputtype=\"input\"\r\n                        name=\"passwordConfirm\"\r\n                        type=\"password\"\r\n                        label=\"Password Confirm\"\r\n                        onChange={this.onChangeHandler}\r\n                        value={this.state.formInput.passwordConfirm}\r\n                        minLength={6}\r\n                    />\r\n\r\n                    <Input\r\n                        inputtype=\"submit\"\r\n                        value=\"update password\"\r\n                        variant=\"tertiary\"\r\n                    />\r\n                </form >\r\n\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.auth.user,\r\n        loading: state.auth.updateUserPasswordInit,\r\n        userPasswordStatus: state.auth.updateUserPasswordStatus,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        updateUserPassword: (data) => dispatch(authActions.updateCurrentUserPassword(data))\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UpdateUserPassword);\r\n","import React, { Component } from 'react'\r\n\r\nexport default class Modal extends Component {\r\n    render() {\r\n        return (\r\n            <div className={`modal modal__${this.props.show} ${this.props.className}`}>\r\n                {this.props.children}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport Modal from './Modal';\r\n\r\n\r\nclass ConfirmModal extends Component {\r\n\r\n    onSubmitHandler = () => {\r\n        this.props.submit(this.props.type)\r\n        this.props.close();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Modal className=\"confirm__modal\" show={this.props.show}>\r\n                <h4 className=\"confirm__modal-message\">{this.props.message}</h4>\r\n                <button onClick={this.onSubmitHandler}\r\n                    className=\"btn btn__success confirm__modal-btn-success\">Yes</button>\r\n                <button\r\n                    onClick={this.props.close}\r\n                    className=\"btn btn__danger confirm__modal-btn-danger\">No</button>\r\n            </Modal>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ConfirmModal;","import React from 'react'\r\n\r\nconst backDrop = (props) => {\r\n    if (props.show) return <div onClick={props.close} className=\"backdrop\"></div>\r\n    else return null;\r\n};\r\n\r\nexport default backDrop;\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport UpdateUserData from './components/updateUserData'\r\nimport UpdateUserPassword from './components/updateUserPassword';\r\nimport Loader from '../../../Shared/Components/Loader/Loader';\r\nimport ConfirmModal from './../../../Shared/Components/Modal/ConfirmModal';\r\n\r\nimport * as authActions from './../../../Store/actions/auth';\r\nimport Backdrop from '../../../Shared/Components/BackDrop/BackDrop';\r\n\r\nclass Profile extends Component {\r\n    state = {\r\n        isLoading: false,\r\n        showModal: false,\r\n        message: '',\r\n        type: ''\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({ isLoading: true })\r\n        this.timer = setTimeout(() => {\r\n            this.setState({ isLoading: false })\r\n        }, 2000)\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        clearTimeout(this.timer)\r\n    }\r\n\r\n    showModal = (message, type) => {\r\n        this.setState({ showModal: true, message, type })\r\n    }\r\n\r\n    closeModal = () => {\r\n        this.setState({ showModal: false, message: '', type: '' })\r\n    }\r\n\r\n    onDeleteHandler = () => {\r\n        const message = 'Are you sure you want to delete your account ? ';\r\n        this.showModal(message, 'delete')\r\n    }\r\n\r\n    onSubmitHandler = async (type) => {\r\n        if (type === 'delete') {\r\n            await this.props.deleteCurrentUser();\r\n            if (this.props.deleteUserStatus === 'success') {\r\n                this.props.history.push('/logout');\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (this.state.isLoading || this.props.deleteUserInit) {\r\n            return <div className=\"u-flex-center u-vh-100 u-bg-white dashboard__dashboard\"><Loader /></div>\r\n        }\r\n\r\n        if (this.props.user) {\r\n            return (\r\n                <React.Fragment  >\r\n                    {\r\n                        <ConfirmModal\r\n                            show={this.state.showModal}\r\n                            close={this.closeModal}\r\n                            message={this.state.message}\r\n                            edit={this.props.message}\r\n                            type={this.state.type}\r\n                            submit={this.onSubmitHandler}\r\n                        />\r\n                    }\r\n                    <Backdrop show={this.state.showModal} close={this.closeModal} />\r\n                    <div className=\"dashboard__dashboard update__user\">\r\n                        <div className=\"u-mx-auto update__user-data\">\r\n                            <UpdateUserData\r\n                                {...this.props}\r\n                                showAlert={this.showAlertHandler} />\r\n                        </div>\r\n                        <div className=\"u-mx-auto update__user-password\">\r\n                            <UpdateUserPassword {...this.props} />\r\n                        </div>\r\n                        <div className=\"delete__user\">\r\n                            <h4 className=\"heading-1 delete__user-heading\">Delete My Account</h4>\r\n                            <button\r\n                                onClick={this.onDeleteHandler}\r\n                                className=\"btn btn__danger--outline\">Delete</button>\r\n                        </div>\r\n                    </div>\r\n                </React.Fragment >\r\n            )\r\n        } else {\r\n            return '';\r\n        }\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.auth.user,\r\n        updateUserDataInit: state.auth.updateUserDataInit,\r\n        deleteUserInit: state.auth.deleteUserInit,\r\n        deleteUserStatus: state.auth.deleteUserStatus\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        deleteCurrentUser: () => dispatch(authActions.deleteCurrentUser())\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Profile);","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"g\", {\n  id: \"Burger_1_\"\n}, /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"path\", {\n  d: \"m407 512h-302c-57.891 0-105-47.109-105-105 0-8.291 6.709-15 15-15h482c8.291 0 15 6.709 15 15 0 57.891-47.109 105-105 105z\"\n})), /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"path\", {\n  d: \"m256 0c-140.61 0-256 87.48-256 195 0 8.291 6.709 15 15 15h482c8.291 0 15-6.709 15-15 0-107.52-115.39-195-256-195zm-110.395 115.605-30 30c-5.859 5.859-15.351 5.86-21.211 0-5.859-5.859-5.859-15.352 0-21.211l30-30c5.859-5.859 15.352-5.859 21.211 0s5.86 15.352 0 21.211zm91 0-30 30c-5.859 5.859-15.351 5.86-21.211 0-5.859-5.859-5.859-15.352 0-21.211l30-30c5.859-5.859 15.352-5.859 21.211 0s5.86 15.352 0 21.211zm90 0-30 30c-5.859 5.859-15.351 5.86-21.211 0-5.859-5.859-5.859-15.352 0-21.211l30-30c5.859-5.859 15.352-5.859 21.211 0s5.86 15.352 0 21.211zm82.666 0-30 30c-5.859 5.859-15.351 5.86-21.211 0-5.859-5.859-5.859-15.352 0-21.211l30-30c5.859-5.859 15.352-5.859 21.211 0s5.859 15.352 0 21.211z\"\n}))), /*#__PURE__*/React.createElement(\"g\", {\n  id: \"Burger_4_\"\n}, /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"path\", {\n  d: \"m15 271c7.2 0 13.5.899 18.9 2.399-2.117 6.82-2.71 8.859-3.9 30-3.9-1.5-8.699-2.399-15-2.399-8.401 0-15-6.601-15-15 0-8.401 6.599-15 15-15z\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"m512 286c0 8.399-6.599 15-15 15-6.301 0-11.1.899-15 2.399-.324-5.758.288-16.508-3.9-30 5.4-1.5 11.7-2.399 18.9-2.399 8.401 0 15 6.599 15 15z\"\n}))), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"m33.9 273.399c13.5 3.301 22.5 9.901 30 15.601 9.3 6.899 16.199 12 31.199 12s21.601-5.101 30.901-12.001c10.8-8.101 25-17.999 49.9-17.999 25.199 0 38.399 9.899 49.199 17.999 9.302 6.9 15.901 12.001 30.901 12.001s21.599-5.101 30.901-12.001c10.8-8.101 24-17.999 49.199-17.999 24.901 0 39.101 9.899 49.9 17.999 9.3 6.899 15.901 12.001 30.901 12.001s21.899-5.101 31.199-12.001c7.5-5.7 16.5-12.299 30-15.601-3.164-11.788-8.436-22.659-15.216-32.399h-413.768c-6.78 9.74-12.052 20.611-15.216 32.4z\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"m463.093 361c11.506-16.421 18.455-36.237 18.907-57.601-6 2.1-10.499 5.7-15.901 9.6-10.8 8.101-24 18.001-49.199 18.001-24.9 0-38.1-9.901-48.9-18.001-9.3-6.9-16.901-11.999-31.901-11.999s-21.899 5.099-31.199 11.999c-10.499 8.101-24 18.001-48.9 18.001s-38.401-9.901-48.9-18.001c-9.3-6.9-16.199-11.999-31.199-11.999s-22.601 5.099-31.901 11.999c-10.8 8.1-24 18.001-48.901 18.001-25.199 0-38.399-9.901-49.199-18.001-5.402-3.9-9.901-7.5-15.901-9.6.452 21.365 7.401 41.18 18.907 57.601z\"\n}));\n\nvar SvgBurger = function SvgBurger(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    id: \"Capa_1\",\n    enableBackground: \"new 0 0 512 512\",\n    height: 512,\n    viewBox: \"0 0 512 512\",\n    width: 512,\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _ref2);\n};\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgBurger, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/burger.0f48b978.svg\";\nexport { ForwardRef as ReactComponent };","import React from 'react';\r\nimport { ReactComponent as Menu } from './../../../assets/icons/burger.svg';\r\n\r\nconst HamburgerMenu = props => {\r\n    return (\r\n        <Menu className={props.className} />\r\n    )\r\n}\r\n\r\nexport default HamburgerMenu;\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst ListItem = props => {\r\n    return (\r\n        <Link to={props.to ? props.to : '#'} className={`list__item ${props.className}`} style={{ listStyle: 'none' }} >\r\n            {props.children}\r\n        </Link>\r\n    )\r\n}\r\n\r\nexport default ListItem\r\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"title\", null, \"edit\");\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M17.561 2.439c-1.442-1.443-2.525-1.227-2.525-1.227l-12.826 12.825-1.010 4.762 4.763-1.010 12.826-12.823c-0.001 0 0.216-1.083-1.228-2.527zM5.68 17.217l-1.624 0.35c-0.156-0.293-0.345-0.586-0.69-0.932s-0.639-0.533-0.932-0.691l0.35-1.623 0.47-0.469c0 0 0.883 0.018 1.881 1.016 0.997 0.996 1.016 1.881 1.016 1.881l-0.471 0.468z\"\n});\n\nvar SvgEdit = function SvgEdit(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 20,\n    height: 20,\n    viewBox: \"0 0 20 20\",\n    ref: svgRef\n  }, props), title === undefined ? _ref2 : title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _ref3);\n};\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgEdit, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/edit.f5b1b613.svg\";\nexport { ForwardRef as ReactComponent };","import React from 'react';\r\nimport { ReactComponent as Edit } from './../../../assets/icons/edit.svg';\r\n\r\nconst tick = props => {\r\n    return (\r\n        <Edit className={props.className} />\r\n    )\r\n}\r\n\r\nexport default tick;\r\n","import React, { Component } from 'react'\r\nimport ListItem from './../../../../Shared/Components/List/ListItem';\r\n\r\nimport Trash from './../../../../Shared/Icons/Trash';\r\nimport Edit from './../../../../Shared/Icons/Edit';\r\n\r\n\r\nexport default class UserItem extends Component {\r\n    render() {\r\n        return (\r\n            <ListItem className=\"users__list-item\" to=\"#\">\r\n                <h3 className=\"users__list-item-name\">\r\n                    {`${this.props.name.split(' ')[0]} ${this.props.user._id === this.props._id ? `(Me)` : ''}`}\r\n                </h3>\r\n                <h3 className=\"users__list-item-email\">{this.props.email}</h3>\r\n                <p className=\"users__list-item-role\">{this.props.role}</p>\r\n                {(this.props.role === 'customer' || this.props.user._id !== this.props._id) &&\r\n                    <button onClick={() => this.props.edit(this.props._id)} className=\"users__list-item-edit btn btn__edit\">\r\n                        <Edit />\r\n                    </button>}\r\n                {this.props.user._id !== this.props._id && <button\r\n                    onClick={() => this.props.delete(this.props._id)}\r\n                    className=\"users__list-item-delete btn btn__delete\"><Trash />\r\n                </button>}\r\n            </ListItem>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport Input from '../../../../Shared/Components/Form/Input';\r\n\r\nimport { onChangeFormInput } from './../../../../Shared/Utils/formInput';\r\n\r\n\r\nexport default class UserForm extends Component {\r\n    state = {\r\n        formInput: {\r\n            name: '',\r\n            role: '',\r\n        }\r\n    }\r\n\r\n    onChangeHandler = e => {\r\n        let formInput = onChangeFormInput(e, { ...this.state })\r\n        this.setState({ ...formInput })\r\n    }\r\n\r\n    onSubmitHandler = e => {\r\n        e.preventDefault();\r\n        let data = {};\r\n        Object.keys({ ...this.state.formInput }).map(el => {\r\n            if (this.state.formInput[el] !== '') {\r\n                data[el] = this.state.formInput[el]\r\n            }\r\n            return data\r\n        })\r\n        this.props.getUsers(data);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <form className=\"users__filter-form\" autoComplete=\"off\" onSubmit={this.onSubmitHandler}>\r\n                <Input\r\n                    inputtype=\"input\"\r\n                    type=\"text\"\r\n                    name=\"name\"\r\n                    placeholder=\"Enter name of user\"\r\n                    value={this.state.formInput.name}\r\n                    onChange={this.onChangeHandler}\r\n                    required={false}\r\n                />\r\n\r\n\r\n                <div className=\"form__group\">\r\n                    <select name=\"role\" id=\"role\" className=\"form__input\" value={this.state.role} onChange={this.onChangeHandler}>\r\n                        <option value=\"\" >All Users</option>\r\n                        <option value=\"customer\" >Customer</option>\r\n                        <option value=\"admin\">Admin</option>\r\n                    </select>\r\n                </div>\r\n\r\n                <Input\r\n                    inputtype=\"submit\"\r\n                    value=\"search\"\r\n                    variant=\"tertiary\"\r\n                />\r\n            </form>\r\n        )\r\n    }\r\n}\r\n","import * as actionTypes from './actions';\r\nimport axios from 'axios';\r\n\r\nlet URL = 'http://localhost:4000';\r\nURL = '';\r\n\r\nexport const getAllUsersInit = () => {\r\n    return {\r\n        type: actionTypes.GET_ALL_USERS_INIT\r\n    }\r\n}\r\n\r\nexport const getAllUsersSuccess = users => {\r\n    return {\r\n        type: actionTypes.GET_ALL_USERS_SUCCESS,\r\n        users\r\n    }\r\n}\r\n\r\nexport const getAllUsersFailed = error => {\r\n    return {\r\n        type: actionTypes.GET_ALL_USERS_FAILED,\r\n        error\r\n    }\r\n}\r\n\r\nexport const getAllUsers = (data) => {\r\n    return async dispatch => {\r\n        dispatch(getAllUsersInit())\r\n        try {\r\n            let query;\r\n            if (!data) {\r\n                query = '';\r\n            } else {\r\n                query = Object.keys(data).map((el, i) => {\r\n                    return `${i === 0 ? '?' : '&'}${el}=${data[el]}`\r\n                })\r\n            }\r\n            const res = await axios({\r\n                url: `${URL}/api/v1/users${query}`,\r\n                method: 'get'\r\n            });\r\n            dispatch(getAllUsersSuccess(res.data.users))\r\n        } catch (err) {\r\n            dispatch(getAllUsersFailed(err))\r\n        }\r\n    }\r\n}\r\n///////////////////////////////////////////////////////\r\n\r\nexport const updateUserRoleInit = () => {\r\n    return {\r\n        type: actionTypes.UPDATE_ONE_USER_INIT\r\n    }\r\n}\r\n\r\nexport const updateUserRoleFailed = error => {\r\n    return {\r\n        type: actionTypes.UPDATE_ONE_USER_FAILED,\r\n        error\r\n    }\r\n}\r\n\r\nexport const updateUserRole = (id, data) => {\r\n    return async dispatch => {\r\n        dispatch(updateUserRoleInit());\r\n        try {\r\n            await axios({\r\n                method: 'PATCH',\r\n                url: `${URL}/api/v1/users/${id}`,\r\n                data\r\n            });\r\n            dispatch(getAllUsers())\r\n        } catch (err) {\r\n            updateUserRoleFailed({ ...err.response.data })\r\n        }\r\n    }\r\n}\r\n\r\n/////////////////////////////////////////////////////////////////////\r\n\r\nexport const deleteUserInit = () => {\r\n    return {\r\n        type: actionTypes.DELETE_ONE_USER_INIT\r\n    }\r\n}\r\n\r\nexport const deleteUserFailed = (error) => {\r\n    return {\r\n        type: actionTypes.DELETE_ONE_USER_FAILED,\r\n        error\r\n    }\r\n}\r\n\r\nexport const deleteUser = (id) => {\r\n    return async dispatch => {\r\n        try {\r\n            await axios({\r\n                method: 'DELETE',\r\n                url: `${URL}/api/v1/users/${id}`,\r\n            });\r\n            dispatch(getAllUsers())\r\n        } catch (err) {\r\n            deleteUserFailed({ ...err.response.data })\r\n        }\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport ListItem from './../components/UserItem';\r\nimport UserForm from './../components/UserForm';\r\nimport Loader from '../../../../Shared/Components/Loader/Loader';\r\n\r\nimport * as userActions from './../../../../Store/actions/users';\r\nimport ConfirmModal from './../../../../Shared/Components/Modal/ConfirmModal';\r\nimport Backdrop from '../../../../Shared/Components/BackDrop/BackDrop';\r\n\r\n\r\nclass Users extends Component {\r\n    state = {\r\n        isLoading: false,\r\n        showModal: false,\r\n        message: '',\r\n        type: '',\r\n        userId: ''\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({ isLoading: true })\r\n        this.timer = setTimeout(() => {\r\n            this.props.getAllUsers();\r\n            this.setState({ isLoading: false })\r\n        }, 2000)\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        clearTimeout(this.timer)\r\n    }\r\n\r\n    showModal = (message, type, userId) => {\r\n        this.setState({ showModal: true, message, type, userId })\r\n    }\r\n\r\n    closeModal = () => {\r\n        this.setState({ showModal: false, message: '', type: '', userId: '' })\r\n    }\r\n\r\n    onEditHandler = (userId) => {\r\n        const message = 'Are you sure you want to make this customer an admin ? ';\r\n        this.showModal(message, 'edit', userId)\r\n    }\r\n\r\n    onDeleteHandler = (userId) => {\r\n        const message = 'Are you sure you want to delete this user ? ';\r\n        this.showModal(message, 'delete', userId)\r\n    }\r\n\r\n    onSubmitHandler = (type) => {\r\n        if (type === 'edit') {\r\n            let data = { role: 'admin' }\r\n            this.props.updateUser(this.state.userId, data)\r\n        } else if (type === 'delete') {\r\n            this.props.deleteUser(this.state.userId)\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (this.state.isLoading || this.props.getUsersInit) {\r\n            return <div className=\"u-flex-center u-vh-100 u-bg-white dashboard__dashboard\"><Loader /></div>\r\n        }\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <ConfirmModal\r\n                    show={this.state.showModal}\r\n                    close={this.closeModal}\r\n                    message={this.state.message}\r\n                    edit={this.props.message}\r\n                    type={this.state.type}\r\n                    submit={this.onSubmitHandler}\r\n                />\r\n                <Backdrop show={this.state.showModal} close={this.closeModal} />\r\n                <div className=\"users dashboard__dashboard\">\r\n                    <h2 className=\"users__heading heading-1 u-text-primary\">\r\n                        Users\r\n                    </h2>\r\n                    <UserForm\r\n                        getUsers={this.props.getAllUsers}\r\n                    />\r\n                    <div className=\"users__list\">\r\n                        {this.props.users &&\r\n                            this.props.users.map(el => {\r\n                                return (\r\n                                    <ListItem\r\n                                        key={el._id}\r\n                                        _id={el._id}\r\n                                        role={el.role}\r\n                                        name={el.name}\r\n                                        user={this.props.user}\r\n                                        email={el.email}\r\n                                        edit={this.onEditHandler}\r\n                                        delete={this.onDeleteHandler}\r\n                                    />\r\n                                )\r\n                            })}\r\n                    </div>\r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        users: state.users.users,\r\n        user: state.auth.user,\r\n        getUsersInit: state.users.getUsersInit\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        getAllUsers: (params) => dispatch(userActions.getAllUsers(params)),\r\n        updateUser: (id, data) => dispatch(userActions.updateUserRole(id, data)),\r\n        deleteUser: (id) => dispatch(userActions.deleteUser(id))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Users);","import React from 'react';\r\n\r\nimport ListItem from '../../../../Shared/Components/List/ListItem';\r\n\r\nconst ListItemOrders = props => {\r\n    let date = `${props.date}`.split('T');\r\n    let hours = new Date(props.date).getHours()\r\n    let minutes = new Date(props.date).getMinutes()\r\n    let seconds = new Date(props.date).getSeconds()\r\n    let time = `${hours}:${minutes}:${seconds}`\r\n\r\n    date = `${date[0]}\\n${time}`\r\n\r\n    return (\r\n        <ListItem\r\n            className={`orders__list-item orders__list-item-${props.status}`} to={props.to} >\r\n            <p className=\"orders__list-item-date\">{date}</p>\r\n            <h3 className=\"orders__list-item-name\">#{props.id} ({props.results})</h3>\r\n            <h2 className=\"orders__list-item-price\">Rs {props.price}</h2>\r\n        </ListItem>\r\n    )\r\n}\r\n\r\nexport default ListItemOrders;\r\n\r\n\r\n\r\n\r\n","import React from 'react'\r\n\r\nconst StatusCard = props => {\r\n    return (\r\n        <div className={`card__status ${props.className}`}>\r\n            <h2>{props.heading}</h2>\r\n            <p>{props.value}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default StatusCard\r\n","import React, { Component } from 'react';\r\n\r\nimport ListItem from './../User/components/ListItemOrders';\r\nimport Loader from '../../../Shared/Components/Loader/Loader';\r\nimport StatusCard from './StatusCard';\r\n\r\nimport { onChangeFormInput } from './../../../Shared/Utils/formInput';\r\n\r\nclass Orders extends Component {\r\n    state = {\r\n        isLoading: false,\r\n        formInput: {\r\n            orders: 'pending'\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({ isLoading: true })\r\n        this.timer = setTimeout(() => {\r\n            this.props.getAllOrders(this.state.formInput.orders);\r\n            this.setState({ isLoading: false })\r\n        }, 2000)\r\n    }\r\n\r\n    onChangeHandler = e => {\r\n        let formInput = onChangeFormInput(e, { ...this.state })\r\n        this.setState({ ...formInput })\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        clearTimeout(this.timer)\r\n    }\r\n\r\n    onFilterHandler = () => {\r\n        this.props.getAllOrders(this.state.formInput.orders)\r\n    }\r\n\r\n    render() {\r\n        let orders = this.props.orders;\r\n\r\n        if (this.state.isLoading) {\r\n            return <div className=\"u-flex-center dashboard__dashboard u-bg-white u-vh-100\"><Loader /></div>\r\n        }\r\n\r\n        if (!this.props.orders) {\r\n            return <h4 className=\"u-text-success\">You have no orders</h4>\r\n        }\r\n\r\n        return (\r\n            <div className={`orders orders-status-${this.props.showOrdersStatus} dashboard__dashboard`}>\r\n                <h2 className=\"orders__heading heading-1 u-text-primary\">\r\n                    {this.props.heading}\r\n                </h2>\r\n                {this.props.showOrdersStatus && <h2 className=\"orders__price heading-2\">\r\n                    <span className=\"u-text-success u-ftwt-400\">Total Amount:&nbsp;</span>\r\n                    <span className=\"u-text-tertiary\">Rs {this.props.totalOrdersPrice.toFixed(2)}</span>\r\n                </h2>}\r\n                {this.props.showOrdersStatus && <div\r\n                    className={`orders__status`}>\r\n                    <StatusCard className=\"u-text-danger\" heading=\"total Orders\" value={this.props.totalOrders} />\r\n                    <StatusCard className=\"u-text-grey-dark\" heading=\"Cancelled Orders\" value={this.props.totalCancelledOrders} />\r\n                    <StatusCard className=\"u-text-success\" heading=\"Delivered orders\" value={this.props.totalCompletedOrders} />\r\n                    <StatusCard className=\"u-text-danger\" heading=\"pending orders\" value={this.props.totalPendingOrders} />\r\n                </div>}\r\n                {this.props.showOrdersStatus &&\r\n                    <div className=\"form__group u-text-center orders__filter\">\r\n                        <select name=\"orders\" id=\"orders\" className=\"form__input u-mr-2\"\r\n                            onChange={this.onChangeHandler}\r\n                            value={this.state.formInput.orders}\r\n                        >\r\n                            <option value=\"pending\">Pending Orders</option>\r\n                            <option value=\"All Orders\">All Orders</option>\r\n                            <option value=\"delivered\">Delivered Orders</option>\r\n                            <option value=\"cancelled\">Cancelled Orders</option>\r\n                        </select>\r\n                        <button\r\n                            onClick={this.onFilterHandler}\r\n                            type=\"submit\" className=\"btn__primary btn\">\r\n                            Filter\r\n                        </button>\r\n                    </div>\r\n                }\r\n                <div className=\"orders__list\">\r\n                    {orders.length > 0\r\n                        ? orders.map(el => {\r\n                            return <ListItem\r\n                                id={el._id}\r\n                                results={el.orders.length}\r\n                                price={el.price}\r\n                                date={el.createdAt}\r\n                                status={el.status}\r\n                                to={`${this.props.match.url}/${el._id}`}\r\n                            />\r\n                        })\r\n                        : <h4 className=\"orders__list--empty\">There are no Orders Left</h4>\r\n                    }\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Orders; \r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Orders from '../../components/Orders';\r\nimport * as orderActions from '../../../../Store/actions/orders';\r\n\r\n\r\nclass UserOrders extends Component {\r\n    render() {\r\n        return <Orders\r\n            orders={this.props.orders}\r\n            getAllOrders={this.props.getAllOrders}\r\n            heading=\"Manage Orders\"\r\n            showOrdersStatus={true}\r\n            totalOrders={this.props.totalOrders}\r\n            totalOrdersPrice={this.props.totalOrdersPrice}\r\n            totalCompletedOrders={this.props.totalCompletedOrders}\r\n            totalPendingOrders={this.props.totalPendingOrders}\r\n            totalCancelledOrders={this.props.totalCancelledOrders}\r\n            {...this.props}\r\n        />\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        orders: state.orders.orders,\r\n        user: state.auth.user,\r\n        totalOrders: state.orders.totalOrders,\r\n        totalOrdersPrice: state.orders.totalOrdersPrice,\r\n        totalCompletedOrders: state.orders.totalCompletedOrders,\r\n        totalPendingOrders: state.orders.totalPendingOrders,\r\n        totalCancelledOrders: state.orders.totalCancelledOrders\r\n    }\r\n}\r\n\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        getAllOrders: (filter) => dispatch(orderActions.getAllOrders(filter)),\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserOrders);","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport Orders from '../components/Orders';\r\n\r\nimport * as orderActions from '../../../Store/actions/orders';\r\n\r\nclass CurrentUserOrders extends Component {\r\n    render() {\r\n        // console.log(this.props.)\r\n        return <Orders\r\n            orders={this.props.userOrders}\r\n            getAllOrders={this.props.getAllUserOrders}\r\n            heading=\"My Orders\"\r\n            showOrdersStatus={false}\r\n            {...this.props}\r\n        />\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        userOrdersInit: state.orders.getUserOrdersInit,\r\n        userOrders: state.orders.userOrders,\r\n        user: state.auth.user\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        getAllUserOrders: () => dispatch(orderActions.getAllUserOrders()),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CurrentUserOrders);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport IngredientControls from '../../../../Shared/Components/IngredientControls/IngredientControls';\r\nimport Burger from '../../../../Shared/Components/Burger/Burger';\r\n\r\nimport Input from '../../../../Shared/Components/Form/Input';\r\n\r\nimport * as menuActions from '../../../../Store/actions/menu';\r\nimport Loader from '../../../../Shared/Components/Loader/Loader';\r\nimport { onChangeFormInput } from '../../../../Shared/Utils/formInput';\r\n\r\nimport Backdrop from './../../../../Shared/Components/BackDrop/BackDrop';\r\nimport ConfirmModal from './../../../../Shared/Components/Modal/ConfirmModal';\r\nimport Alert from '../../../../Shared/Components/Alert/Alert';\r\n\r\n\r\n\r\nconst setMenuIngredients = (menu, id, ingredientsFetched) => {\r\n    let burger;\r\n    let ingredients = {};\r\n\r\n    Object.keys(menu).map(el => {\r\n        if (menu[el]._id === id) {\r\n            burger = menu[el]\r\n\r\n            let menuIngs = {}\r\n            menu[el].ingredients.map(ing => {\r\n                return menuIngs[ing.name] = {\r\n                    ...ing\r\n                }\r\n            })\r\n\r\n            Object.keys(ingredientsFetched).map(el2 => {\r\n                ingredients[el2] = {\r\n                    ...ingredientsFetched[el2],\r\n                    value: menuIngs[el2] ? menuIngs[el2].amount : 0\r\n                }\r\n                return ingredients;\r\n            })\r\n        }\r\n        return burger;\r\n    })\r\n    return { ingredients, burger };\r\n}\r\n\r\n\r\nclass UpdateBurgerDetail extends Component {\r\n    state = {\r\n        isLoading: false,\r\n        formInput: {\r\n            title: '',\r\n            price: ''\r\n        },\r\n        photo: '',\r\n        previewPhoto: '',\r\n        showModal: false,\r\n        message: '',\r\n        type: '',\r\n        alert: {\r\n            show: false,\r\n            status: '',\r\n            message: '',\r\n        },\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({ isLoading: true })\r\n        this.timer = setTimeout(async () => {\r\n            await this.props.fetchIngredients();\r\n            const { ingredients, burger } = setMenuIngredients(this.props.menu, this.props.match.params.id, this.props.ingredients)\r\n            let formInput = { title: burger.title, price: burger.price }\r\n            await this.props.setIngredients(ingredients)\r\n            this.setState({ formInput, isLoading: false, previewPhoto: burger.photo })\r\n        }, 2000)\r\n    }\r\n\r\n    showAlertHandler = (message, status) => {\r\n        this.setState({\r\n            ...this.state,\r\n            alert: {\r\n                show: true,\r\n                status,\r\n                message,\r\n            }\r\n        })\r\n    }\r\n\r\n    onCloseHandler = () => {\r\n        this.closeAlertTimer = setTimeout(() => {\r\n            this.setState({\r\n                ...this.state,\r\n                alert: {\r\n                    show: false, status: '', message: ''\r\n                }\r\n            });\r\n        }, 2000)\r\n    }\r\n\r\n\r\n    onChangeHandler = e => {\r\n        let formInput = onChangeFormInput(e, { ...this.state })\r\n        this.setState({ ...formInput })\r\n    }\r\n\r\n    changeFileHandler = e => {\r\n        this.setState({ previewPhoto: URL.createObjectURL(e.target.files[0]), photo: e.target.files[0] })\r\n    }\r\n\r\n    uploadFileHandler = async () => {\r\n        const formData = new FormData()\r\n        formData.append(\r\n            'photo',\r\n            this.state.photo,\r\n            this.state.photo.name\r\n        )\r\n        formData.append('_id', this.props.match.params.id);\r\n        await this.props.updateBurger(formData);\r\n    }\r\n\r\n    resetIngredients = async () => {\r\n        const { ingredients } = setMenuIngredients(this.props.menu, this.props.match.params.id, this.props.ingredients);\r\n        await this.props.setIngredients(ingredients);\r\n    }\r\n\r\n    updateBurgerIngredients = async (ings) => {\r\n        let burger = {};\r\n        burger['_id'] = this.props.match.params.id;\r\n        let ingsArr = [];\r\n        Object.keys(ings).map(el => {\r\n            return ingsArr.push({ ...ings[el] })\r\n        })\r\n        burger['ingredients'] = ingsArr;\r\n        await this.props.updateBurger(burger);\r\n    }\r\n\r\n    updateBurgerDetails = async e => {\r\n        e.preventDefault();\r\n        let burger = new FormData();\r\n        burger.append('_id', this.props.match.params.id)\r\n        burger.append('title', this.state.formInput.title)\r\n        burger.append('price', this.state.formInput.price)\r\n        await this.props.updateBurger(burger);\r\n\r\n        if (this.props.updateBurgersStatus.status === 'success') {\r\n            const message = 'Updated Burger Successfully';\r\n            this.showAlertHandler(message, 'success')\r\n            this.updateTimer = setTimeout(() => {\r\n                this.props.history.push('/dashboard/manage-menu');\r\n            }, 2000)\r\n        } else {\r\n            this.showAlertHandler(this.props.deleteBurgerStatus.message, 'fail')\r\n        }\r\n    }\r\n\r\n    showModal = (message, type) => {\r\n        this.setState({ showModal: true, message, type })\r\n    }\r\n\r\n    closeModal = () => {\r\n        this.setState({ showModal: false, message: '', type: '' })\r\n    }\r\n\r\n    onDeleteHandler = () => {\r\n        const message = 'Are you sure you want to delete this burger ? ';\r\n        this.showModal(message, 'delete')\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        clearTimeout(this.timer);\r\n        clearTimeout(this.updateTimer);\r\n    }\r\n\r\n    onDeleteConfirmHandler = async (type) => {\r\n        if (type === 'delete') {\r\n            await this.props.deleteBurger(this.props.match.params.id);\r\n            if (this.props.deleteBurgerStatus === 'success') {\r\n                this.props.history.push('/dashboard/manage-menu');\r\n            } else {\r\n                this.showAlertHandler(this.props.deleteBurgerStatus.message, 'fail')\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n        let { burger } = setMenuIngredients(this.props.menu, this.props.match.params.id, this.props.menuIngs);\r\n        let ingredients = this.props.menuIngs;\r\n\r\n        if (this.state.isLoading) {\r\n            return <div className=\"u-flex-center dashboard__dashboard u-bg-white u-vh-100\"><Loader /></div>\r\n        }\r\n\r\n        return (\r\n            <React.Fragment>\r\n                {this.state.alert.status && <Alert\r\n                    close={this.onCloseHandler()}\r\n                    show={this.state.alert.show}\r\n                    status={this.state.alert.status}\r\n                    message={this.state.alert.message}\r\n                />}\r\n                {<ConfirmModal\r\n                    show={this.state.showModal}\r\n                    close={this.closeModal}\r\n                    message={this.state.message}\r\n                    edit={this.props.message}\r\n                    type={this.state.type}\r\n                    submit={this.onDeleteConfirmHandler}\r\n                />}\r\n                <Backdrop show={this.state.showModal} close={this.closeModal} />\r\n                <div className=\"dashboard__dashboard update-menu__detail\">\r\n                    <h2 className=\"heading-1 update-menu__detail-heading\">\r\n                        Update {burger.title} Recipe\r\n                </h2>\r\n                    <div className=\"update-menu__detail-image-bg\">\r\n                        <img src={this.state.previewPhoto} className=\"update-menu__detail-image-bg-image\" alt={burger.title} />\r\n                        <input type=\"file\" onChange={this.changeFileHandler} style={{ display: 'none' }} id=\"photo\" name=\"photo\" />\r\n                        <label className=\"btn btn__tertiary-goTo btn-sm\" htmlFor=\"photo\" >Choose an Image</label>\r\n                        <button onClick={this.uploadFileHandler} className=\"btn btn__success\">Upload</button>\r\n                    </div>\r\n                    <form className=\"update-menu__detail-form\" autoComplete=\"off\" onSubmit={this.updateBurgerDetails}>\r\n                        <Input\r\n                            inputtype=\"input\"\r\n                            type=\"text\"\r\n                            name=\"title\"\r\n                            label=\"name of ingredient\"\r\n                            value={this.state.formInput.title}\r\n                            onChange={this.onChangeHandler}\r\n                        />\r\n\r\n                        <Input\r\n                            inputtype=\"input\"\r\n                            type=\"number\"\r\n                            name=\"price\"\r\n                            label=\"price\"\r\n                            onChange={this.onChangeHandler}\r\n                            value={this.state.formInput.price}\r\n                        />\r\n\r\n                        <Input\r\n                            inputtype=\"submit\"\r\n                            value=\"save details\"\r\n                            variant=\"tertiary\"\r\n                        />\r\n\r\n                    </form>\r\n                    <div className=\"custom-burger\">\r\n                        <Burger ingredients={ingredients} />\r\n                        <div className=\"controls\">\r\n                            <IngredientControls\r\n                                ingredients={ingredients}\r\n                                NotfoodType={`${burger.foodType}`.startsWith('v') ? 'non-vegetarian' : 'vegetarian'}\r\n                                foodType={burger.foodType}\r\n                                hidePrice\r\n                                totalBurgerPrice={burger.price}\r\n                                success={this.updateBurgerIngredients}\r\n                                danger={this.resetIngredients}\r\n                                successField=\"Save Ingredients\"\r\n                                dangerField=\"Reset Ingredients\"\r\n                                addIngredient={this.props.addIngredient}\r\n                                removeIngredient={this.props.removeIngredient}\r\n                                successBtnType=\"submit\"\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"delete__burger\">\r\n                        <h4 className=\"heading-2 delete__burger-heading\">\r\n                            Delete this Burger\r\n                        </h4>\r\n                        <button className=\"btn btn__danger--outline\"\r\n                            onClick={this.onDeleteHandler}\r\n                        >\r\n                            Delete\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        ingredients: state.menu.ingredients,\r\n        menu: state.menu.Burgers,\r\n        menuIngs: state.menu.menuIngs,\r\n        updateBurgersStatus: state.menu.updateBurgersStatus,\r\n        deleteBurgerStatus: state.menu.deleteBurgerStatus\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        fetchIngredients: () => dispatch(menuActions.fetchIngredients()),\r\n        addIngredient: (name) => dispatch(menuActions.addIngredient(name)),\r\n        removeIngredient: (name) => dispatch(menuActions.removeIngredient(name)),\r\n        setIngredients: (ings) => dispatch(menuActions.setMenuIngs(ings)),\r\n        updateBurger: (data) => dispatch(menuActions.updateBurger(data)),\r\n        deleteBurger: (burger) => dispatch(menuActions.deleteBurger(burger))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UpdateBurgerDetail);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport Card from '../../../../Shared/Components/Card/CardMenu';\r\nimport Loader from '../../../../Shared/Components/Loader/Loader';\r\n\r\nimport * as menuActions from '../../../../Store/actions/menu';\r\n\r\nclass UpdateBurgerList extends Component {\r\n    state = {\r\n        isLoading: false\r\n    }\r\n\r\n    async componentDidMount() {\r\n        this.setState({ isLoading: true })\r\n        await this.props.initMenu();\r\n        this.timer = setTimeout(() => {\r\n            this.setState({ isLoading: false })\r\n        }, 1000)\r\n    }\r\n\r\n    onChooseMenuHandler = (id) => {\r\n        this.props.history.push(`/dashboard/manage-menu/${id}`);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        clearTimeout(this.timer);\r\n    }\r\n\r\n    toCreateBurger = () => {\r\n        this.props.history.push(`${this.props.match.url}/new`);\r\n    }\r\n\r\n    render() {\r\n        let menuList;\r\n        let burgers = this.props.menu;\r\n\r\n        if (burgers.length > 0) {\r\n            menuList = <div className=\"update-menu__list\">\r\n                {Object.keys(burgers).map(el => {\r\n                    return <Card\r\n                        _id={burgers[el]._id}\r\n                        initialprice={burgers[el].price}\r\n                        price={burgers[el].totalprice}\r\n                        key={burgers[el]._id}\r\n                        title={burgers[el].title} foodType={burgers[el].foodType}\r\n                        ingredients={burgers[el].ingredients} burgerImage={burgers[el].photo}\r\n                        items={burgers[el].items}\r\n                        chooseBurger={this.onChooseMenuHandler}\r\n                    />\r\n                })}\r\n            </div>\r\n        } else {\r\n            menuList = <div className=\"update-menu__list update-menu__list--empty \">\r\n                <h4>You have no items in menu</h4>\r\n            </div>\r\n        }\r\n\r\n\r\n        if (this.props.loading || this.state.isLoading) {\r\n            return <div\r\n                className=\"update-menu dashboard__dashboard u-vh-100 u-flex-center u-bg-white\">\r\n                <Loader /></div>\r\n        }\r\n\r\n        return (\r\n            <div className=\"update-menu dashboard__dashboard\">\r\n                <h2 className=\"update-menu__heading heading-1\">Update Menu</h2>\r\n                <button\r\n                    onClick={this.toCreateBurger}\r\n                    className=\"update-menu__btn btn btn__tertiary-goTo\">Create a New Burger</button>\r\n                {menuList}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        menu: state.menu.Burgers,\r\n        loading: state.menu.loading,\r\n        user: state.auth.user\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        initMenu: () => dispatch(menuActions.initBurgers())\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UpdateBurgerList);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport IngredientControls from '../../../../Shared/Components/IngredientControls/IngredientControls';\r\nimport Burger from '../../../../Shared/Components/Burger/Burger';\r\n\r\nimport Input from '../../../../Shared/Components/Form/Input';\r\n\r\nimport * as menuActions from '../../../../Store/actions/menu';\r\nimport Loader from '../../../../Shared/Components/Loader/Loader';\r\nimport { onChangeFormInput } from '../../../../Shared/Utils/formInput';\r\nimport Alert from '../../../../Shared/Components/Alert/Alert';\r\n\r\n\r\nconst setMenuIngredients = (ingredientsFetched) => {\r\n    let ingredients = {};\r\n    Object.keys(ingredientsFetched).map(el2 => {\r\n        ingredients[el2] = {\r\n            ...ingredientsFetched[el2],\r\n            value: 0\r\n        }\r\n        return ingredients;\r\n    })\r\n    return ingredients;\r\n}\r\n\r\nclass CreateBurger extends Component {\r\n    state = {\r\n        isLoading: false,\r\n        formInput: {\r\n            title: '',\r\n            price: '',\r\n            amount: '',\r\n            foodType: 'vegetarian',\r\n            ingredients: null\r\n        },\r\n        previewPhoto: '',\r\n        photo: '',\r\n        alert: {\r\n            show: false,\r\n            status: '',\r\n            message: '',\r\n        },\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({ isLoading: true })\r\n        this.timer = setTimeout(async () => {\r\n            await this.props.fetchIngredients();\r\n            let ingredients = setMenuIngredients(this.props.ingredients);\r\n            await this.props.setIngredients(ingredients);\r\n            this.setState({ isLoading: false })\r\n        }, 2000)\r\n    }\r\n\r\n    showAlertHandler = (message, status) => {\r\n        this.setState({\r\n            ...this.state,\r\n            alert: {\r\n                show: true,\r\n                status,\r\n                message,\r\n            }\r\n        })\r\n    }\r\n\r\n    onCloseHandler = () => {\r\n        this.closeAlertTimer = setTimeout(() => {\r\n            this.setState({\r\n                ...this.state,\r\n                alert: {\r\n                    show: false, status: '', message: ''\r\n                }\r\n            });\r\n        }, 2000)\r\n    }\r\n\r\n    onChangeHandler = e => {\r\n        let formInput = onChangeFormInput(e, { ...this.state })\r\n        this.setState({ ...formInput })\r\n    }\r\n\r\n    changeFileHandler = e => {\r\n        this.setState({ previewPhoto: URL.createObjectURL(e.target.files[0]), photo: e.target.files[0] })\r\n    }\r\n\r\n    resetIngredients = async () => {\r\n        this.showAlertHandler('Ingredients were set to default', 'fail');\r\n        const ingredients = setMenuIngredients(this.props.ingredients);\r\n        await this.props.setIngredients(ingredients);\r\n    }\r\n\r\n    addIngredientsToBurger = async (ings) => {\r\n        this.showAlertHandler('Ingredients were added successfully', 'success');\r\n        let ingsArr = [];\r\n        Object.keys(ings).map(el => {\r\n            return ingsArr.push({ ...ings[el] })\r\n        })\r\n        this.setState({\r\n            formInput: {\r\n                ...this.state.formInput,\r\n                ingredients: ingsArr\r\n            }\r\n        })\r\n    }\r\n\r\n    submitBurgerHandler = async e => {\r\n        e.preventDefault();\r\n\r\n        if (!this.state.formInput.ingredients) {\r\n            return this.showAlertHandler('Oops You forgot to add or save Ingredients', 'fail')\r\n        }\r\n\r\n        const burger = new FormData();\r\n        burger.append('title', this.state.formInput.title);\r\n        burger.append('price', this.state.formInput.price);\r\n        burger.append('foodType', this.state.formInput.foodType);\r\n        burger.append('ingredients', JSON.stringify(this.state.formInput.ingredients));\r\n\r\n        if (this.state.photo !== '') {\r\n            burger.append('photo', this.state.photo, this.state.photo.name)\r\n        }\r\n\r\n        await this.props.createBurger(burger);\r\n\r\n        this.setState({\r\n            photo: '',\r\n            previewPhoto: '',\r\n            formInput: {\r\n                title: '',\r\n                price: '',\r\n                amount: '',\r\n                foodType: 'vegetarian',\r\n                ingredients: null\r\n            }\r\n        })\r\n\r\n        this.resetIngredients(this.props.ingredients);\r\n        if (this.props.createBurgerStatus.status === 'success') {\r\n            this.showAlertHandler('Added Burger to menu successfully', 'success');\r\n            this.successTimer = setTimeout(() => {\r\n                return this.props.history.replace('/dashboard/manage-menu')\r\n            }, 2000)\r\n        } else {\r\n            this.showAlertHandler(this.props.createBurgerStatus.message, 'fail')\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        clearTimeout(this.timer);\r\n    }\r\n\r\n    render() {\r\n        let ingredients = this.props.menuIngs;\r\n\r\n        if (this.state.isLoading || this.props.createBurgerInit) {\r\n            return <div className=\"dashboard__dashboard u-flex-center u-vh-100\">\r\n                <Loader />\r\n            </div>\r\n        }\r\n\r\n        return (\r\n            <React.Fragment>\r\n                {this.state.alert.status && <Alert\r\n                    close={this.onCloseHandler()}\r\n                    show={this.state.alert.show}\r\n                    status={this.state.alert.status}\r\n                    message={this.state.alert.message}\r\n                />}\r\n                <div className=\"burger__new dashboard__dashboard\">\r\n                    <h2 className=\"heading-1 burger__new-heading\">\r\n                        Create New Burger\r\n                    </h2>\r\n\r\n                    <form className=\"burger__new-create\" autoComplete=\"off\"\r\n                        onSubmit={this.submitBurgerHandler}\r\n                    >\r\n                        <div className=\"burger__new-create-form\">\r\n                            <Input\r\n                                inputtype=\"input\"\r\n                                type=\"text\"\r\n                                name=\"title\"\r\n                                label=\"Name\"\r\n                                value={this.state.formInput.title}\r\n                                onChange={this.onChangeHandler}\r\n                            />\r\n\r\n                            <Input\r\n                                inputtype=\"input\"\r\n                                type=\"number\"\r\n                                name=\"price\"\r\n                                label=\"price\"\r\n                                onChange={this.onChangeHandler}\r\n                                value={this.state.formInput.price}\r\n                            />\r\n\r\n                            <div className=\"form__group\">\r\n                                <label htmlFor=\"foodType\">Diet</label>\r\n                                <select name=\"foodType\" id=\"foodType\" onChange={this.onChangeHandler}\r\n                                    value={this.state.formInput.foodType} className=\"form__input\">\r\n                                    <option value=\"vegetarian\">Vegetarian</option>\r\n                                    <option value=\"non-vegetarian\">Non Vegetarian</option>\r\n                                </select>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"custom-burger\">\r\n                            <Burger ingredients={ingredients} />\r\n                            <div className=\"controls\">\r\n                                <IngredientControls\r\n                                    ingredients={ingredients}\r\n                                    NotfoodType={`${this.state.formInput.foodType}`.startsWith('v') ? 'non-vegetarian' : 'vegetarian'}\r\n                                    foodType={this.state.formInput.foodType}\r\n                                    hidePrice\r\n                                    success={this.addIngredientsToBurger}\r\n                                    danger={this.resetIngredients}\r\n                                    successField=\"Confirm Ingredients\"\r\n                                    dangerField=\"Reset Ingredients\"\r\n                                    addIngredient={this.props.addIngredient}\r\n                                    removeIngredient={this.props.removeIngredient}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"burger__new-create-image-bg\">\r\n                            <input type=\"file\" style={{ display: 'none' }}\r\n                                name=\"photo\" id=\"photo\" onChange={this.changeFileHandler} />\r\n                            <label htmlFor=\"photo\" className=\"btn btn__tertiary-goTo\">Upload Image</label>\r\n\r\n                            {this.state.previewPhoto !== ''\r\n                                ? <img src={this.state.previewPhoto} alt=\"burger\" className=\"burger__new-create-image-bg-image\" />\r\n                                : <div className=\"bg-image\"></div>\r\n                            }\r\n                        </div>\r\n\r\n                        <button type=\"submit\" className=\"burger__new-create-btn btn btn__tertiary\">\r\n                            Save Burger\r\n                        </button>\r\n                    </form>\r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        ingredients: state.menu.ingredients,\r\n        menuIngs: state.menu.menuIngs,\r\n        createBurgerStatus: state.menu.createBurgerStatus,\r\n        createBurgerInit: state.menu.createBurgerInit,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        fetchIngredients: () => dispatch(menuActions.fetchIngredients()),\r\n        addIngredient: (name) => dispatch(menuActions.addIngredient(name)),\r\n        removeIngredient: (name) => dispatch(menuActions.removeIngredient(name)),\r\n        setIngredients: (ings) => dispatch(menuActions.setMenuIngs(ings)),\r\n        createBurger: (burger) => dispatch(menuActions.createBurger(burger)),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateBurger);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport ListItem from './../../../Shared/Components/List/ListItem';\r\nimport CardStatus from './../components/StatusCard';\r\n\r\nimport * as orderActions from './../../../Store/actions/orders';\r\nimport Loader from '../../../Shared/Components/Loader/Loader';\r\n\r\nclass OrderDetail extends Component {\r\n    state = {\r\n        orders: null,\r\n        isLoading: false,\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({ isLoading: true })\r\n        this.timer = setTimeout(async () => {\r\n            await this.props.getOrder(this.props.match.params.id)\r\n            if (!this.props.orders && this.props.match.url.startsWith('/dashboard/manage-orders')) {\r\n                return this.props.history.push('/dashboard/manage-orders')\r\n            } else if (!this.props.orders && this.props.match.url.startsWith(`/dashboard/my-orders`)) {\r\n                return this.props.history.push('/dashboard/my-orders')\r\n            }\r\n            else {\r\n                let orders = this.props.orders.find(el => el._id === this.props.match.params.id)\r\n                this.setState({ isLoading: false, orders })\r\n            }\r\n        }, 2000)\r\n    }\r\n\r\n    onChangeStatusHandler = async () => {\r\n        let status = 'pending';\r\n        if (this.state.orders.status === 'pending') status = 'delivered'\r\n\r\n        await this.props.updateOrderStatusAdmin(\r\n            { status, _id: this.props.match.params.id }\r\n        )\r\n\r\n        if (this.props.orderStatus === 'success') {\r\n            this.setState({\r\n                orders: {\r\n                    ...this.state.orders,\r\n                    status: this.props.updatedOrder.status\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    onCancelOrder = async () => {\r\n        await this.props.updateOrderStatusAdmin(\r\n            { status: 'cancelled', _id: this.props.match.params.id }\r\n        )\r\n\r\n        if (this.props.orderStatus === 'success') {\r\n            this.setState({\r\n                orders: {\r\n                    ...this.state.orders,\r\n                    status: this.props.updatedOrder.status\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let items = 0;\r\n\r\n        if (this.state.orders) {\r\n            this.state.orders.orders.map(el => items += el.items)\r\n        }\r\n\r\n        if (this.state.isLoading || !this.state.orders) {\r\n            return <div className=\"dashboard__dashboard u-flex-center u-bg-white u-vh-100\">\r\n                <Loader />\r\n            </div>\r\n        }\r\n\r\n        return (\r\n            <div className=\"order__details dashboard__dashboard\">\r\n                <button\r\n                    onClick={() => this.props.history.push(\r\n                        this.props.match.url.startsWith(`/dashboard/my-orders`)\r\n                            ? '/dashboard/my-orders' : '/dashboard/manage-orders'\r\n                    )}\r\n                    className=\"btn  btn__tertiary-back order__details-back-btn\">\r\n                    <span>&larr;</span>Back\r\n                </button>\r\n\r\n                <h4 className=\"heading-1 order__details-heading\">\r\n                    Order Details\r\n                </h4>\r\n                <div className=\"order__details-info\">\r\n                    <div>\r\n                        <h2>Order Id: #{this.props.match.params.id}</h2>\r\n                        <h4>{this.state.orders.user.name}</h4>\r\n                        <p>{this.state.orders.user.email}</p>\r\n                    </div>\r\n                    <div className=\"order__details-info-status order__details-info-status--total-orders\">\r\n                        <CardStatus className=\"order__details-info-status-card\"\r\n                            heading=\"Order Status\"\r\n                            value={this.state.orders.status}\r\n                        />\r\n                        {this.props.loggedInUser.role === 'admin' && this.props.match.url.startsWith('/dashboard/manage-orders/') &&\r\n                            <button onClick={this.onChangeStatusHandler}\r\n                                className={`btn btn__success--outline${this.state.orders.status === 'cancelled' ? '-disabled' : ''} `}>\r\n                                Mark Order as {this.state.orders.status === 'pending' ? 'Delivered' : 'Pending'}\r\n                            </button>}\r\n                        {this.props.match.path === '/dashboard/my-orders/:id' &&\r\n                            <button onClick={this.onCancelOrder}\r\n                                className={`btn btn__success--outline${this.state.orders.status === 'delivered' || this.state.orders.status === 'cancelled' ? '-disabled' : ''} `} >\r\n                                Cancel Order\r\n                            </button>\r\n                        }\r\n                    </div>\r\n\r\n                    <CardStatus className=\"order__details-info-status-card\"\r\n                        heading=\"Total Orders\"\r\n                        value={items}\r\n                    />\r\n\r\n                </div>\r\n\r\n                <div className=\"order__details-list\">\r\n                    {this.state.orders.orders.map(el => {\r\n                        return (\r\n                            <ListItem className={`order__details-list-item u-bg-${el._id.foodType}--opacity-35`}>\r\n                                <React.Fragment>\r\n                                    <p className=\"order__details-list-item-name\">\r\n                                        {el._id.title} ({el.items})\r\n                                    </p>\r\n                                    <div className=\"order__details-list-item-ings\">\r\n                                        {el._id.ingredients.map(el2 => {\r\n                                            return <p>{el2.name} ({el2.amount})</p>\r\n                                        })}\r\n                                    </div>\r\n                                </React.Fragment>\r\n                            </ListItem>\r\n                        )\r\n                    })}\r\n                </div>\r\n\r\n            </div >\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        orders: state.orders.orders,\r\n        loggedInUser: state.auth.user,\r\n        orderStatus: state.orders.updateOrderStatusAdminStatus.status,\r\n        updatedOrder: state.orders.updateOrderStatusAdminStatus.order\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        // getAllOrders: () => dispatch(orderActions.getAllOrders()),\r\n        getOrder: (id) => dispatch(orderActions.getOrder(id)),\r\n        updateOrderStatusAdmin: (payload) => dispatch(orderActions.updateOrderStatusAdmin(payload))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(OrderDetail);","import * as actionTypes from './actions';\r\nimport axios from 'axios';\r\n\r\nlet URL = `http://localhost:4000`\r\nURL = ''\r\n\r\nexport const getIngredientsInit = () => {\r\n    return {\r\n        type: actionTypes.GET_INGREDIENTS_INIT\r\n    }\r\n}\r\n\r\nexport const getIngredientsSuccess = data => {\r\n    return {\r\n        type: actionTypes.GET_INGREDIENTS_SUCCESS,\r\n        res: data\r\n    }\r\n}\r\n\r\nexport const getIngredientsFailed = error => {\r\n    return {\r\n        type: actionTypes.GET_INGREDIENTS_FAILED,\r\n        error\r\n    }\r\n}\r\n\r\nexport const getIngredients = () => {\r\n    return async dispatch => {\r\n        try {\r\n            const res = await axios({\r\n                method: 'get',\r\n                url: `${URL}/api/v1/ingredients`\r\n            })\r\n\r\n\r\n            dispatch(getIngredientsSuccess(res.data))\r\n\r\n        } catch (err) {\r\n            dispatch(getIngredientsFailed(err.response.data))\r\n        }\r\n    }\r\n}\r\n\r\n///////////////////////////////////////////////////////////\r\n// CREATE INGREDIENTS\r\n\r\nexport const createIngredientInit = () => {\r\n    return {\r\n        type: actionTypes.CREATE_INGREDIENTS_INIT\r\n    }\r\n}\r\n\r\nexport const createIngredientSuccess = data => {\r\n    return {\r\n        type: actionTypes.CREATE_INGREDIENTS_SUCCESS,\r\n        res: data\r\n    }\r\n}\r\n\r\nexport const createIngredientFailed = error => {\r\n    return {\r\n        type: actionTypes.CREATE_INGREDIENTS_FAILED,\r\n        error\r\n    }\r\n}\r\n\r\nexport const createIngredient = (data) => {\r\n    return async dispatch => {\r\n        dispatch(createIngredientInit());\r\n        try {\r\n            const res = await axios({\r\n                method: 'POST',\r\n                url: `${URL}/api/v1/ingredients`,\r\n                data\r\n            })\r\n\r\n\r\n            dispatch(createIngredientSuccess(res.data))\r\n\r\n        } catch (err) {\r\n            dispatch(createIngredientFailed(err.response.data))\r\n        }\r\n    }\r\n}\r\n\r\n///////////////////////////////////////////////////////////////////////\r\n// get Ingredient\r\n\r\n\r\nexport const getIngredientInit = () => {\r\n    return {\r\n        type: actionTypes.GET_INGREDIENT_INIT\r\n    }\r\n}\r\n\r\nexport const getIngredientSuccess = data => {\r\n    return {\r\n        type: actionTypes.GET_INGREDIENT_SUCCESS,\r\n        res: data\r\n    }\r\n}\r\n\r\nexport const getIngredientFailed = error => {\r\n    return {\r\n        type: actionTypes.GET_INGREDIENT_FAILED,\r\n        error\r\n    }\r\n}\r\n\r\nexport const getIngredient = (id) => {\r\n    return async dispatch => {\r\n        try {\r\n            const res = await axios({\r\n                method: 'get',\r\n                url: `${URL}/api/v1/ingredients/${id}`\r\n            })\r\n\r\n            dispatch(getIngredientSuccess(res.data))\r\n\r\n        } catch (err) {\r\n            dispatch(getIngredientFailed(err.response.data))\r\n        }\r\n    }\r\n}\r\n\r\n\r\n//////////////////////////////////////////////////////////////////////\r\n// UPDATE INGREDIENTS\r\n\r\n\r\nexport const updateIngredientInit = () => {\r\n    return {\r\n        type: actionTypes.UPDATE_INGREDIENT_INIT\r\n    }\r\n}\r\n\r\nexport const updateIngredientSuccess = data => {\r\n    return {\r\n        type: actionTypes.UPDATE_INGREDIENT_SUCCESS,\r\n        res: data\r\n    }\r\n}\r\n\r\nexport const updateIngredientFailed = error => {\r\n    return {\r\n        type: actionTypes.UPDATE_INGREDIENT_FAILED,\r\n        error\r\n    }\r\n}\r\n\r\nexport const updateIngredient = (data, id) => {\r\n    return async dispatch => {\r\n        dispatch(updateIngredientInit());\r\n        try {\r\n            const res = await axios({\r\n                method: 'PATCH',\r\n                url: `${URL}/api/v1/ingredients/${id}`,\r\n                data\r\n            })\r\n\r\n            dispatch(updateIngredientSuccess(res.data))\r\n\r\n        } catch (err) {\r\n            dispatch(updateIngredientFailed(err.response.data))\r\n        }\r\n    }\r\n}\r\n\r\n/////////////////////////////////////////////////////////////////////////////\r\n// DELETE ingredient\r\n\r\nexport const deleteIngredientInit = () => {\r\n    return {\r\n        type: actionTypes.DELETE_INGREDIENT_INIT\r\n    }\r\n}\r\n\r\nexport const deleteIngredientSuccess = data => {\r\n    return {\r\n        type: actionTypes.DELETE_INGREDIENT_SUCCESS,\r\n        res: data\r\n    }\r\n}\r\n\r\nexport const deleteIngredientFailed = error => {\r\n    return {\r\n        type: actionTypes.DELETE_INGREDIENT_FAILED,\r\n        error\r\n    }\r\n}\r\n\r\nexport const deleteIngredient = (id) => {\r\n    return async dispatch => {\r\n        dispatch(deleteIngredientInit());\r\n        try {\r\n            const res = await axios({\r\n                method: 'DELETE',\r\n                url: `${URL}/api/v1/ingredients/${id}`,\r\n            })\r\n\r\n            dispatch(deleteIngredientSuccess(res.data))\r\n            dispatch(getIngredients());\r\n        } catch (err) {\r\n            dispatch(deleteIngredientFailed(err.response.data))\r\n        }\r\n    }\r\n}\r\n\r\n","import React from 'react'\r\nimport ListItem from '../../../../Shared/Components/List/ListItem'\r\nimport Edit from './../../../../Shared/Icons/Edit';\r\nimport Trash from './../../../../Shared/Icons/Trash';\r\n\r\n\r\nconst IngredientItem = props => {\r\n    return (\r\n        <ListItem className=\"ingredients__list-item\">\r\n            <img src={props.image} alt={props.name} className=\"icon\" />\r\n            <h3 className=\"ingredients__list-item-name\">\r\n                {props.name}\r\n            </h3>\r\n            <p className=\"ingredients__list-item-price\">Rs {props.price}</p>\r\n            <p className={`ingredients__list-item-diet u-text-${props.foodType}`}>\r\n                {props.foodType !== 'none' ? props.foodType : '---'}\r\n            </p>\r\n            <button onClick={() => props.edit(props._id)} className=\"ingredients__list-item-edit btn btn__edit\">\r\n                <Edit />\r\n            </button>\r\n\r\n            <button\r\n                onClick={() => props.delete(props._id)}\r\n                className=\"ingredients__list-item-delete btn btn__delete\"><Trash />\r\n            </button>\r\n\r\n        </ListItem>\r\n    )\r\n}\r\n\r\nexport default IngredientItem\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport * as ingredientActions from './../../../../Store/actions/ingredients';\r\n\r\nimport ListItem from './../components/IngredientItem';\r\nimport ConfirmModal from './../../../../Shared/Components/Modal/ConfirmModal';\r\nimport Loader from '../../../../Shared/Components/Loader/Loader';\r\nimport Backdrop from '../../../../Shared/Components/BackDrop/BackDrop';\r\n\r\nclass Ingredients extends Component {\r\n    state = {\r\n        isLoading: false,\r\n        showModal: false,\r\n        message: '',\r\n        type: '',\r\n        ingId: ''\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({ isLoading: true })\r\n        this.timer = setTimeout(() => {\r\n            this.props.getAllIngredients();\r\n            this.setState({ isLoading: false })\r\n        }, 2000)\r\n    }\r\n\r\n    showModal = (message, type, ingId) => {\r\n        this.setState({ showModal: true, message, type, ingId })\r\n    }\r\n\r\n    closeModal = () => {\r\n        this.setState({ showModal: false, message: '', type: '', ingId: '' })\r\n    }\r\n\r\n    onCreateHandler = () => this.props.history.push(`${this.props.match.url}/new`)\r\n\r\n    onEditHandler = (id) => this.props.history.push(`${this.props.match.url}/${id}`)\r\n\r\n    onDeleteHandler = (ingId) => {\r\n        const message = 'Are you sure you want to delete this ingredient ? ';\r\n        this.showModal(message, 'delete', ingId)\r\n    }\r\n\r\n    onSubmitHandler = (type) => {\r\n        if (type === 'delete') {\r\n            this.props.deleteIngredient(this.state.ingId)\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (this.props.deleteIngredientInit || this.state.isLoading) {\r\n            return <div className=\"dashboard__dashboard u-flex-center u-vh-100 u-bg-white\">\r\n                <Loader />\r\n            </div>\r\n        }\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <ConfirmModal\r\n                    show={this.state.showModal}\r\n                    close={this.closeModal}\r\n                    message={this.state.message}\r\n                    edit={this.props.message}\r\n                    type={this.state.type}\r\n                    submit={this.onSubmitHandler}\r\n                />\r\n                <Backdrop show={this.state.showModal} close={this.closeModal} />\r\n                <div className=\"u-vh-100 ingredients dashboard__dashboard\">\r\n                    <h2 className=\"ingredients__heading heading-1 u-text-primary\">\r\n                        Manage Ingredients\r\n                </h2>\r\n                    <button className=\"btn btn__tertiary-goTo ingredients__create-btn\"\r\n                        onClick={this.onCreateHandler}>\r\n                        Create Ingredient\r\n                </button>\r\n                    <div className=\"ingredients__list\">\r\n                        {this.props.ingredients && this.props.ingredients.map(el => {\r\n                            return <ListItem\r\n                                _id={el._id}\r\n                                name={el.name}\r\n                                image={el.photo}\r\n                                price={el.price}\r\n                                foodType={el.foodType}\r\n                                edit={this.onEditHandler}\r\n                                delete={this.onDeleteHandler}\r\n                            />\r\n                        })}\r\n                    </div>\r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        ingredients: state.ingredients.ingredients,\r\n\r\n        deleteIngredientStatus: state.ingredients.deleteIngredientStatus,\r\n        deleteIngredientInit: state.ingredients.deleteIngredientsInit,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        getAllIngredients: () => dispatch(ingredientActions.getIngredients()),\r\n        deleteIngredient: (id) => dispatch(ingredientActions.deleteIngredient(id))\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Ingredients);","import React, { Component } from 'react';\r\nimport Input from '../../../../Shared/Components/Form/Input';\r\n\r\nimport { onChangeFormInput } from '../../../../Shared/Utils/formInput';\r\nimport { connect } from 'react-redux';\r\n\r\nimport * as ingredientActions from '../../../../Store/actions/ingredients';\r\nimport Loader from '../../../../Shared/Components/Loader/Loader';\r\nimport Alert from '../../../../Shared/Components/Alert/Alert';\r\n\r\nclass IngredientsCreate extends Component {\r\n    state = {\r\n        formInput: {\r\n            name: '',\r\n            price: '',\r\n            foodType: 'none',\r\n            photo: ''\r\n        },\r\n        previewPhoto: '',\r\n        fileUploaded: false,\r\n        alert: {\r\n            show: false,\r\n            status: '',\r\n            message: '',\r\n        },\r\n    }\r\n\r\n    async componentDidMount() {\r\n        if (!this.props.location.pathname.startsWith('/dashboard/manage-ingredients/new')) {\r\n            await this.props.getIngredient(this.props.match.params.id);\r\n            if (this.props.getIngredientStatus === 'success') {\r\n                this.setState({\r\n                    formInput: {\r\n                        name: this.props.ingredient.name,\r\n                        price: this.props.ingredient.price,\r\n                        foodType: this.props.ingredient.foodType,\r\n                        photo: this.props.ingredient.photo\r\n                    },\r\n                    previewPhoto: this.props.ingredient.photo\r\n                })\r\n            }\r\n        }\r\n    }\r\n\r\n    onChangeHandler = e => {\r\n        let formInput = onChangeFormInput(e, { ...this.state })\r\n        this.setState({ ...formInput })\r\n    }\r\n\r\n    onFileChangeHandler = e => {\r\n        this.setState({\r\n            ...this.state,\r\n            formInput: {\r\n                ...this.state.formInput,\r\n                photo: e.target.files[0]\r\n            },\r\n            fileUploaded: true,\r\n            previewPhoto: URL.createObjectURL(e.target.files[0])\r\n        })\r\n    }\r\n\r\n    showAlertHandler = (message, status) => {\r\n        this.setState({\r\n            ...this.state,\r\n            alert: {\r\n                show: true,\r\n                status,\r\n                message,\r\n            }\r\n        })\r\n    }\r\n\r\n    onCloseHandler = () => {\r\n        this.closeAlertTimer = setTimeout(() => {\r\n            this.setState({\r\n                ...this.state,\r\n                alert: {\r\n                    show: false, status: '', message: ''\r\n                }\r\n            });\r\n        }, 2000)\r\n    }\r\n\r\n    onSubmitHandler = e => {\r\n        if (this.props.location.pathname.startsWith('/dashboard/manage-ingredients/new')) {\r\n            return this.onCreateHandler(e);\r\n        } else {\r\n            return this.onUpdateHandler(e);\r\n        }\r\n    }\r\n\r\n    onCreateHandler = async e => {\r\n        e.preventDefault();\r\n        let formData = new FormData();\r\n        formData.append('name', this.state.formInput.name);\r\n        formData.append('price', this.state.formInput.price);\r\n        formData.append('foodType', this.state.formInput.foodType);\r\n        formData.append('photo', this.state.formInput.photo);\r\n\r\n        await this.props.createIngredient(formData);\r\n\r\n        let message, status;\r\n        if (this.props.createIngredientsStatus.status === 'success') {\r\n            status = this.props.createIngredientsStatus.status\r\n            message = 'Ingredient created Successfully'\r\n        } else {\r\n            status = this.props.createIngredientsStatus.status;\r\n            message = this.props.createIngredientsStatus.message;\r\n        }\r\n        this.showAlertHandler(message, status)\r\n    }\r\n\r\n    onUpdateHandler = async e => {\r\n        e.preventDefault();\r\n        let formData = new FormData();\r\n        formData.append('name', this.state.formInput.name);\r\n        formData.append('price', this.state.formInput.price);\r\n        formData.append('foodType', this.state.formInput.foodType);\r\n\r\n        if (this.state.fileUploaded) {\r\n            formData.append('photo', this.state.formInput.photo);\r\n        }\r\n\r\n        await this.props.updateIngredient(formData, this.props.match.params.id);\r\n\r\n        let message, status;\r\n        if (this.props.updateIngredientsStatus.status === 'success') {\r\n            status = this.props.updateIngredientsStatus.status\r\n            message = 'Updated Ingredient Successfully'\r\n\r\n            this.setState({\r\n                formInput: {\r\n                    ...this.state.formInput,\r\n                    name: this.props.ingredient.name,\r\n                    foodType: this.props.ingredient.foodType,\r\n                    price: this.props.ingredient.price,\r\n                    photo: this.props.ingredient.photo\r\n                },\r\n                previewPhoto: this.props.ingredient.photo\r\n            })\r\n\r\n        } else {\r\n            status = this.props.updateIngredientsStatus.status;\r\n            message = this.props.updateIngredientsStatus.message;\r\n        }\r\n        this.showAlertHandler(message, status)\r\n    }\r\n\r\n    render() {\r\n\r\n        if (this.props.createIngredientsInit ||\r\n            this.props.updateIngredientsInit ||\r\n            this.props.getIngredientInit) {\r\n            return <div className=\"dashboard__dashboard u-vh-100 u-bg-white u-flex-center\">\r\n                <Loader />\r\n            </div>\r\n        }\r\n\r\n        return (\r\n            <React.Fragment>\r\n                {this.state.alert.status && <Alert\r\n                    close={this.onCloseHandler()}\r\n                    show={this.state.alert.show}\r\n                    status={this.state.alert.status}\r\n                    message={this.state.alert.message}\r\n                />}\r\n                <div className=\"ingredients__form dashboard__dashboard\">\r\n                    <h2 className=\"heading-1 u-text-primary ingredients__form-heading\">\r\n                        {this.props.location.pathname.startsWith('/dashboard/manage-ingredients/new')\r\n                            ? 'Create a New Ingredient' : `Update Ingredient ${this.state.formInput.name}`}\r\n                    </h2>\r\n                    <button\r\n                        onClick={() => this.props.history.goBack()}\r\n                        className=\"btn  btn__tertiary-back ingredients__form-back-btn\">\r\n                        <span>&larr;</span>Back\r\n                    </button>\r\n                    <form className=\"ingredients__form-form\" autoComplete=\"off\"\r\n                        onSubmit={this.onSubmitHandler}\r\n                    >\r\n                        <Input\r\n                            inputtype=\"input\"\r\n                            type=\"text\"\r\n                            name=\"name\"\r\n                            label=\"name\"\r\n                            value={this.state.formInput.name}\r\n                            onChange={this.onChangeHandler}\r\n                        />\r\n\r\n                        <Input\r\n                            inputtype=\"input\"\r\n                            type=\"number\"\r\n                            name=\"price\"\r\n                            label=\"price\"\r\n                            value={this.state.formInput.price}\r\n                            onChange={this.onChangeHandler}\r\n                        />\r\n\r\n                        <div className=\"form__group\">\r\n                            <label htmlFor=\"foodType\" className=\"form__label\">Diet</label>\r\n                            <select name=\"foodType\" id=\"foodType\" className=\"form__input\"\r\n                                value={this.state.formInput.foodType}\r\n                                onChange={this.onChangeHandler}\r\n                            >\r\n                                <option value=\"none\">None</option>\r\n                                <option value=\"vegetarian\">Vegetarian</option>\r\n                                <option value=\"non-vegetarian\">Non Vegetarian</option>\r\n                            </select>\r\n                            <small className=\"form__small\">Select none if you want that ingredient to appear in both veg and non-veg sections</small>\r\n                        </div>\r\n\r\n                        <div className=\"form__group u-flex-between\">\r\n                            <div>\r\n                                <input type=\"file\" id=\"photo\" onChange={this.onFileChangeHandler} style={{ display: 'none' }} />\r\n                                <label htmlFor=\"photo\" className=\"btn btn__tertiary-goTo btn__sm\">Choose Image</label>\r\n                            </div>\r\n                            <div className=\"ingredients-preview-img-bg \">\r\n                                <img src={this.state.previewPhoto} className=\"ingredients-preview-img-image\" alt={this.state.formInput.name} />\r\n                            </div>\r\n                        </div>\r\n\r\n                        <Input\r\n                            inputtype=\"submit\"\r\n                            variant=\"tertiary\"\r\n                            value=\"Save Ingredient\"\r\n                        />\r\n                    </form>\r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        ingredient: state.ingredients.ingredient,\r\n\r\n        getIngredientStatus: state.ingredients.getIngredientStatus,\r\n        getIngredientInit: state.ingredients.getIngredientInit,\r\n\r\n        createIngredientsStatus: state.ingredients.createIngredientsStatus,\r\n        createIngredientsInit: state.ingredients.createIngredientsInit,\r\n\r\n        updateIngredientsStatus: state.ingredients.updateIngredientsStatus,\r\n        updateIngredientsInit: state.ingredients.updateIngredientsInit,\r\n\r\n\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        getIngredient: (id) => dispatch(ingredientActions.getIngredient(id)),\r\n        createIngredient: (ing) => dispatch(ingredientActions.createIngredient(ing)),\r\n        updateIngredient: (ing, id) => dispatch(ingredientActions.updateIngredient(ing, id))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(IngredientsCreate);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport SideBar from './components/Sidebar';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport Profile from './User/Profile';\r\n\r\nimport Backdrop from './../../Shared/Components/BackDrop/BackDrop';\r\n\r\nimport HamburgerMenu from './../../Shared/Icons/HamburgerMenu';\r\n\r\nimport Users from './Admin/Users/Users';\r\n\r\nimport UserOrders from './Admin/Orders/UserOrders';\r\n\r\nimport CurrentUserOrders from './User/CurrentUserOrders';\r\n\r\nimport UpdateBurgerDetail from './Admin/Menu/UpdateBurgerDetail';\r\nimport UpdateBurgerList from './Admin/Menu/UpdateBurgerList';\r\nimport CreateBurger from './Admin/Menu/CreateBurger';\r\nimport OrderDetail from './components/OrderDetail';\r\n\r\nimport Ingredients from './Admin/Ingredients/Ingredients';\r\n\r\nimport IngredientsForm from './Admin/Ingredients/IngredientsForm';\r\n\r\n\r\n\r\nclass Layout extends Component {\r\n    state = {\r\n        showSideBar: false,\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (!this.props.user) {\r\n            return this.props.history.push('/login')\r\n        }\r\n\r\n        if (this.props.user && this.props.user.role === 'admin') {\r\n            return this.props.history.push('/dashboard/manage-orders')\r\n        }\r\n\r\n        if (this.props.user && this.props.user.role === 'customer') {\r\n            return this.props.history.push('/dashboard/my-orders')\r\n        }\r\n    }\r\n\r\n    sidebarShowHandler = () => {\r\n        this.setState({ showSideBar: true })\r\n    }\r\n\r\n    sidebarCloseHandler = () => {\r\n        this.setState({ showSideBar: false })\r\n    }\r\n\r\n    render() {\r\n        let showSideBar = null;\r\n        if (this.state.showSideBar) showSideBar = 'dashboard__sidebar-show'\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <div className=\"dashboard\">\r\n                    <button onClick={this.sidebarShowHandler} className=\"dashboard__sidebar-btn\">\r\n                        <HamburgerMenu className=\"icon-hamburger\" />\r\n                    </button>\r\n                    {this.props.user && <div className={`sidebar dashboard__sidebar ${showSideBar}`} >\r\n                        <SideBar {...this.props} closeSidebar={this.sidebarCloseHandler} />\r\n                    </div>}\r\n                    <Backdrop show={this.state.showSideBar} close={this.sidebarCloseHandler} user={this.props.user} />\r\n                    <Switch>\r\n                        <Route path={`${this.props.match.url}/manage-profile`} exact component={Profile} {...this.props} />\r\n\r\n                        <Route path={`${this.props.match.url}/manage-users`} exact component={Users} {...this.props} />\r\n\r\n                        <Route path={`${this.props.match.url}/manage-ingredients`} exact component={Ingredients} {...this.props} />\r\n                        <Route path={`${this.props.match.url}/manage-ingredients/new`} component={IngredientsForm} {...this.props} />\r\n                        <Route path={`${this.props.match.url}/manage-ingredients/:id`} component={IngredientsForm} {...this.props} />\r\n\r\n                        <Route path={`${this.props.match.url}/manage-orders`} exact component={UserOrders} {...this.props} />\r\n                        <Route path={`${this.props.match.url}/manage-orders/:id`} component={OrderDetail} {...this.props} />\r\n\r\n                        <Route path={`${this.props.match.url}/manage-menu`} exact component={UpdateBurgerList} {...this.props} />\r\n                        <Route path={`${this.props.match.url}/manage-menu/new`} exact component={CreateBurger} {...this.props} />\r\n                        <Route path={`${this.props.match.url}/manage-menu/:id`} component={UpdateBurgerDetail} {...this.props} />\r\n\r\n                        <Route path={`${this.props.match.url}/my-orders`} exact component={CurrentUserOrders} {...this.props} />\r\n                        <Route path={`${this.props.match.url}/my-orders/:id`} component={OrderDetail} {...this.props} />\r\n                    </Switch>\r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.auth.user,\r\n\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Layout);\r\n","import React from 'react'\r\n\r\nconst Error = props => {\r\n    return (\r\n        <div className=\"error\">\r\n            <h2 className=\"error__text\">\r\n                Something Went Wrong. Please Try again Later\r\n            </h2>\r\n            <button\r\n                onClick={props.history.goBack}\r\n                className=\"btn btn__tertiary\">Go Back</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Error\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Loader from '../../Shared/Components/Loader/Loader';\r\n\r\nimport * as authActions from './../../Store/actions/auth';\r\n\r\nclass Logout extends Component {\r\n    componentDidMount() {\r\n        if (!this.props.user) {\r\n            return this.props.history.replace('/login');\r\n        }\r\n        this.props.logout();\r\n        this.props.history.replace('/')\r\n    }\r\n\r\n    render() {\r\n        return (this.props.logoutInit) && <Loader className=\"u-flex-center u-vh-100\" />\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        logoutInit: state.auth.logoutInit,\r\n        user: state.auth.user\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        logout: () => dispatch(authActions.logout())\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Logout);","import React, { Component } from 'react';\r\nimport { Route, Redirect, Switch } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nimport Home from '../Pages/Home/Home';\r\nimport Menu from '../Pages/Menu/Menu';\r\nimport Cart from '../Pages/Cart/Cart';\r\nimport CustomBurger from './../Pages/CustomBurger/CustomBurger';\r\nimport About from './../Pages/About/About';\r\nimport Register from '../Pages/Register/Register';\r\n\r\nimport Login from '../Pages/Login/Login';\r\nimport Dashboard from '../Pages/DashBoard/Layout';\r\n\r\nimport Error from '../Pages/Error/Error';\r\nimport Logout from '../Pages/Logout/Logout';\r\n\r\n\r\nclass Body extends Component {\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <Switch>\r\n                    <Route path=\"/\" exact component={Home} {...this.props} />\r\n                    <Route path=\"/menu\" exact component={Menu} {...this.props} />\r\n                    <Route path=\"/build-your-burger\" component={CustomBurger} {...this.props} />\r\n                    <Route path=\"/about\" exact component={About} {...this.props} />\r\n                    <Route path=\"/cart\" component={Cart} {...this.props} />\r\n                    <Route path=\"/register\" exact component={Register} {...this.props} />\r\n                    <Route path=\"/login\" component={Login} {...this.props} />\r\n                    <Route path=\"/dashboard\" {...this.props} component={Dashboard} />\r\n                    <Route path=\"/logout\" component={Logout} {...this.props} />\r\n                    <Route path=\"/something-went-wrong\" component={Error} {...this.props} />\r\n                    <Redirect to=\"/something-went-wrong\" />\r\n                </Switch>\r\n            </React.Fragment >\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.auth.user\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Body);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport Header from './Layout/Header';\r\nimport Footer from './Layout/Footer';\r\nimport Body from './Layout/Body';\r\nimport { Component } from 'react';\r\n\r\nimport * as authActions from './Store/actions/auth';\r\nimport Loader from './Shared/Components/Loader/Loader';\r\n\r\nclass App extends Component {\r\n\r\n    componentDidMount() {\r\n        this.props.checkAuthState();\r\n    }\r\n\r\n    render() {\r\n        if (this.props.checkAuth) {\r\n            return (\r\n                <div className=\"u-flex-center u-bg-white\">\r\n                    <Loader />\r\n                </div>\r\n            )\r\n        }\r\n\r\n        return (\r\n            <BrowserRouter>\r\n                <Header />\r\n                <Body />\r\n                <Footer />\r\n            </BrowserRouter >\r\n        )\r\n    }\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        checkAuthInit: state.auth.checkAuthInit\r\n    }\r\n}\r\n\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        checkAuthState: () => dispatch(authActions.checkAuth()),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n","import * as actionTypes from './../actions/actions';\r\n\r\nconst initialState = {\r\n    user: null,\r\n    checkAuthInit: false,\r\n\r\n    registerInit: false,\r\n    registerStatus: null,\r\n\r\n    loginStatus: null,\r\n    loginInit: false,\r\n\r\n    logoutInit: false,\r\n\r\n    updateUserDataInit: false,\r\n    updateUserDataStatus: null,\r\n\r\n    updateUserPasswordInit: false,\r\n    updateUserPasswordStatus: null,\r\n\r\n    deleteUserInit: false,\r\n    deleteUserStatus: null\r\n}\r\n\r\n\r\nconst checkAuthSuccess = (state, action) => {\r\n    let userPhoto = `http://localhost:4000/uploads/users/${action.user.photo}`\r\n    return {\r\n        ...state,\r\n        user: { ...action.user, photo: userPhoto },\r\n        checkAuthInit: false,\r\n    }\r\n}\r\n\r\nconst checkAuthStateInit = (state, action) => {\r\n    return {\r\n        ...state,\r\n        checkAuthInit: true\r\n    }\r\n}\r\n\r\n\r\nconst registerInit = (state, action) => {\r\n    return {\r\n        ...state,\r\n        registerStatus: null,\r\n        registerInit: true\r\n    }\r\n}\r\n\r\nconst registerSuccess = (state, action) => {\r\n    return {\r\n        ...state,\r\n        registerInit: false,\r\n        registerStatus: action.response\r\n    }\r\n}\r\n\r\nconst registerFailed = (state, action) => {\r\n    return {\r\n        ...state,\r\n        registerInit: false,\r\n        registerStatus: action.error\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\nconst loginInit = (state, action) => {\r\n    return {\r\n        ...state,\r\n        loginStatus: null,\r\n        loginInit: true\r\n    }\r\n}\r\n\r\nconst loginSuccess = (state, action) => {\r\n    let userPhoto = `http://localhost:4000/uploads/users/${action.response.data.user.photo}`\r\n    return {\r\n        ...state,\r\n        loginInit: false,\r\n        loginStatus: action.response.data.status,\r\n        user: { ...action.response.data.user, photo: userPhoto }\r\n    }\r\n}\r\n\r\nconst loginFailed = (state, action) => {\r\n    return {\r\n        ...state,\r\n        loginInit: false,\r\n        loginStatus: action.error,\r\n        user: null\r\n    }\r\n}\r\n\r\n\r\nconst logoutInit = (state, action) => {\r\n    return {\r\n        ...state,\r\n        logoutInit: true\r\n    }\r\n}\r\n\r\nconst logoutSuccess = (state, action) => {\r\n    return {\r\n        ...state,\r\n        logoutInit: false,\r\n        user: null\r\n    }\r\n}\r\n\r\nconst logoutFailed = (state, action) => {\r\n    return {\r\n        ...state,\r\n        logoutInit: false,\r\n    }\r\n}\r\n\r\n\r\nconst updateUserDataInit = (state, action) => {\r\n    return {\r\n        ...state,\r\n        updateUserDataInit: true\r\n    }\r\n}\r\n\r\n\r\nconst updateUserDataSuccess = (state, action) => {\r\n    let userPhoto = `http://localhost:4000/uploads/users/${action.user.photo}`\r\n    return {\r\n        ...state,\r\n        user: { ...action.user, photo: userPhoto },\r\n        updateUserDataStatus: 'success',\r\n        updateUserDataInit: false\r\n    }\r\n}\r\n\r\nconst updateUserDataFailed = (state, action) => {\r\n    return {\r\n        ...state,\r\n        updateUserDataStatus: action.error,\r\n        updateUserDataInit: false\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nconst updateUserPasswordInit = (state, action) => {\r\n    return {\r\n        ...state,\r\n        updateUserPasswordInit: true\r\n    }\r\n}\r\n\r\n\r\nconst updateUserPasswordSuccess = (state, action) => {\r\n    return {\r\n        ...state,\r\n        user: action.user,\r\n        updateUserPasswordStatus: 'success',\r\n        updateUserPasswordInit: false\r\n    }\r\n}\r\n\r\nconst updateUserPasswordFailed = (state, action) => {\r\n    return {\r\n        ...state,\r\n        updateUserPasswordStatus: action.error,\r\n        updateUserPasswordInit: false\r\n    }\r\n}\r\n\r\n\r\n///////////////////////////////////////////////////////////////////////////\r\n\r\nconst deleteCurrentUserInit = (state, action) => {\r\n    return {\r\n        ...state,\r\n        deleteUserInit: true,\r\n        deleteUserStatus: null\r\n    }\r\n}\r\n\r\nconst deleteCurrentUserSuccess = (state, action) => {\r\n    return {\r\n        ...state,\r\n        deleteUserInit: false,\r\n        deleteUserStatus: 'success'\r\n    }\r\n}\r\n\r\n\r\nconst deleteCurrentUserFailed = (state, action) => {\r\n    return {\r\n        ...state,\r\n        deleteUserInit: false,\r\n        deleteUserStatus: action.error\r\n    }\r\n}\r\n\r\n////////////////////////////////////////////////////////////////////////////////////\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.CHECK_AUTH_STATE_SUCCESS: return checkAuthSuccess(state, action);\r\n        case actionTypes.CHECK_AUTH_STATE_INIT: return checkAuthStateInit(state, action)\r\n\r\n        case actionTypes.REGISTER_USER_INIT: return registerInit(state, action);\r\n        case actionTypes.REGISTER_USER_SUCCESS: return registerSuccess(state, action);\r\n        case actionTypes.REGISTER_USER_FAILED: return registerFailed(state, action);\r\n\r\n        case actionTypes.LOGIN_USER_INIT: return loginInit(state, action);\r\n        case actionTypes.LOGIN_USER_SUCCESS: return loginSuccess(state, action);\r\n        case actionTypes.LOGIN_USER_FAILED: return loginFailed(state, action);\r\n\r\n        case actionTypes.LOGOUT_USER_INIT: return logoutInit(state, action);\r\n        case actionTypes.LOGOUT_USER_SUCCESS: return logoutSuccess(state, action);\r\n        case actionTypes.LOGOUT_USER_FAILED: return logoutFailed(state, action);\r\n\r\n        case actionTypes.UPDATE_CURRENT_USER_INIT: return updateUserDataInit(state, action);\r\n        case actionTypes.UPDATE_CURRENT_USER_SUCCESS: return updateUserDataSuccess(state, action);\r\n        case actionTypes.UPDATE_CURRENT_USER_FAILED: return updateUserDataFailed(state, action);\r\n\r\n        case actionTypes.UPDATE_CURRENT_USER_PASSWORD_INIT: return updateUserPasswordInit(state, action);\r\n        case actionTypes.UPDATE_CURRENT_USER_PASSWORD_SUCCESS: return updateUserPasswordSuccess(state, action);\r\n        case actionTypes.UPDATE_CURRENT_USER_PASSWORD_FAILED: return updateUserPasswordFailed(state, action);\r\n\r\n        case actionTypes.DELETE_CURRENT_USER_INIT: return deleteCurrentUserInit(state, action)\r\n        case actionTypes.DELETE_CURRENT_USER_SUCCESS: return deleteCurrentUserSuccess(state, action);\r\n        case actionTypes.DELETE_CURRENT_USER_FAILED: return deleteCurrentUserFailed(state, action)\r\n\r\n        default: return state;\r\n    }\r\n}\r\n\r\n\r\nexport default reducer;","import * as actionTypes from '../actions/actions';\r\n\r\nlet URL = 'http://localhost:4000';\r\n// URL = ''\r\n\r\nconst initialState = {\r\n    Burgers: [],\r\n    updateBurgers: [],\r\n    ingredients: {},\r\n\r\n    error: null,\r\n    loading: false,\r\n\r\n    menuIngs: {},\r\n    totalBurgerPrice: 0,\r\n\r\n    updateBurgersStatus: null,\r\n\r\n    createBurgerInit: false,\r\n    createBurgerStatus: null,\r\n\r\n    deleteBurgerInit: false,\r\n    deleteBurgerStatus: null,\r\n}\r\n\r\n/////////////////////////////////////////////////////////////////////\r\nconst fetchBurgersSuccess = (state, action) => {\r\n    let burgers = [];\r\n\r\n    action.burgers.map((el, i) => {\r\n        let x = {\r\n            ...action.burgers[i],\r\n            totalPrice: 0,\r\n            items: 0,\r\n            photo: `${URL}/uploads/burgers/${action.burgers[i].photo}`\r\n        }\r\n        burgers.push(x);\r\n        return burgers;\r\n    })\r\n\r\n    return {\r\n        ...state,\r\n        Burgers: burgers,\r\n        loading: false,\r\n        error: null,\r\n    }\r\n};\r\n\r\nconst fetchBurgersFailed = (state, action) => {\r\n    let message, status;\r\n    if (action.error.status) {\r\n        message = action.error.data.message;\r\n        status = action.error.status\r\n    } else {\r\n        message = action.error.message;\r\n    }\r\n\r\n    return {\r\n        ...state,\r\n        error: {\r\n            message,\r\n            status\r\n        },\r\n        loading: false,\r\n    }\r\n}\r\n\r\nconst fetchBurgersInit = (state, action) => {\r\n    return {\r\n        ...state,\r\n        loading: true,\r\n        error: null,\r\n    }\r\n}\r\n////////////////////////////////////////////////////////////////////////////\r\n\r\nconst fetchIngredientsSuccess = (state, action) => {\r\n    let ings = {};\r\n\r\n    action.ingredients.map(el => {\r\n        return ings[el.name] = { ...el, value: 0, photo: `${URL}/uploads/ingredients/${el.photo}` }\r\n    });\r\n\r\n    return {\r\n        ...state,\r\n        ingredients: ings,\r\n        loading: false,\r\n    }\r\n}\r\n\r\nconst fetchIngredientsFailed = (state, action) => {\r\n    return {\r\n        ...state,\r\n        ingredients: action.error,\r\n        loading: false\r\n    }\r\n}\r\n\r\n////////////////////////////////////////////////////////////////////////////\r\n\r\nconst addIngredient = (state, action) => {\r\n    return {\r\n        ...state,\r\n        menuIngs: {\r\n            ...state.menuIngs,\r\n            [action.name]: {\r\n                ...state.menuIngs[action.name],\r\n                value: state.menuIngs[action.name].value + 1\r\n            }\r\n        },\r\n    };\r\n};\r\n\r\nconst removeIngredient = (state, action) => {\r\n    return {\r\n        ...state,\r\n        menuIngs: {\r\n            ...state.menuIngs,\r\n            [action.name]: {\r\n                ...state.menuIngs[action.name],\r\n                value: state.menuIngs[action.name].value - 1\r\n            }\r\n        },\r\n    };\r\n};\r\n\r\n///////////////////////////////////////////////////////////////////////////\r\n\r\nconst setMenuIngredients = (state, action) => {\r\n    return {\r\n        ...state,\r\n        menuIngs: action.ings,\r\n        loading: false\r\n    }\r\n}\r\n////////////////////////////////////////////////////////////////\r\n\r\nconst updateMenuBurgerSuccess = (state, action) => {\r\n    return {\r\n        ...state,\r\n        updateBurgersStatus: action.status,\r\n        loading: false,\r\n    }\r\n}\r\n\r\nconst updateMenuBurgerFailed = (state, action) => {\r\n    return {\r\n        ...state,\r\n        updateBurgersStatus: action.error,\r\n        loading: false,\r\n    }\r\n}\r\n///////////////////////////////////////////////////////////\r\n\r\nconst createBurgerInit = (state, action) => {\r\n    return {\r\n        ...state,\r\n        createBurgerInit: true,\r\n        createBurgerStatus: null,\r\n    }\r\n}\r\n\r\nconst createBurgerSuccess = (state, action) => {\r\n    return {\r\n        ...state,\r\n        createBurgerInit: false,\r\n        createBurgerStatus: action.status,\r\n    }\r\n}\r\n\r\n\r\nconst createBurgerFailed = (state, action) => {\r\n    return {\r\n        ...state,\r\n        createBurgerInit: false,\r\n        createBurgerStatus: action.error\r\n    }\r\n}\r\n/////////////////////////////////////////////////////////////////////////////\r\n// \r\n\r\nconst deleteBurgerInit = (state, action) => {\r\n    return {\r\n        ...state,\r\n        deleteBurgerInit: true,\r\n        deleteBurgerStatus: null\r\n    }\r\n}\r\n\r\n\r\nconst deleteBurgerFailed = (state, action) => {\r\n    return {\r\n        ...state,\r\n        deleteBurgerInit: false,\r\n        deleteBurgerStatus: action.error\r\n    }\r\n}\r\n\r\nconst deleteBurgerSuccess = (state, action) => {\r\n    return {\r\n        ...state,\r\n        deleteBurgerInit: false,\r\n        deleteBurgerStatus: 'success'\r\n    }\r\n}\r\n\r\n//////////////////////////////////////////////////////////////////////\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.FETCH_BURGERS_SUCCESS: return fetchBurgersSuccess(state, action);\r\n        case actionTypes.FETCH_BURGERS_FAILED: return fetchBurgersFailed(state, action);\r\n        case actionTypes.FETCH_BURGERS_INIT: return fetchBurgersInit(state, action);\r\n\r\n        case actionTypes.FETCH_INGREDIENTS_SUCCESS: return fetchIngredientsSuccess(state, action);\r\n        case actionTypes.FETCH_INGREDIENTS_FAILED: return fetchIngredientsFailed(state, action);\r\n\r\n        case actionTypes.UPDATE_MENU_ADD_INGREDIENT: return addIngredient(state, action);\r\n        case actionTypes.UPDATE_MENU_REMOVE_INGREDIENT: return removeIngredient(state, action);\r\n\r\n        case actionTypes.SET_MENU_INGREDIENTS: return setMenuIngredients(state, action);\r\n        case actionTypes.UPDATE_BURGER_SUCCESS: return updateMenuBurgerSuccess(state, action);\r\n        case actionTypes.UPDATE_BURGER_FAILED: return updateMenuBurgerFailed(state, action);\r\n\r\n        case actionTypes.CREATE_BURGER_INIT: return createBurgerInit(state, action);\r\n        case actionTypes.CREATE_BURGER_SUCCESS: return createBurgerSuccess(state, action);\r\n        case actionTypes.CREATE_BURGER_FAILED: return createBurgerFailed(state, action);\r\n\r\n\r\n        case actionTypes.DELETE_BURGER_INIT: return deleteBurgerInit(state, action);\r\n        case actionTypes.DELETE_BURGER_SUCCESS: return deleteBurgerSuccess(state, action);\r\n        case actionTypes.DELETE_BURGER_FAILED: return deleteBurgerFailed(state, action);\r\n        default: return state;\r\n    }\r\n}\r\n\r\nexport default reducer;","import * as actionTypes from '../actions/actions';\r\n\r\nconst TOTAL_PRICE = 280;\r\n\r\nlet URL = 'http://localhost:4000';\r\n// URL = ''\r\n\r\nconst initialState = {\r\n    ingredientsLoading: false,\r\n    ingredients: null,\r\n    totalPrice: TOTAL_PRICE,\r\n    error: false,\r\n};\r\n\r\nconst fetchIngredientsSuccess = (state, action) => {\r\n    let ings = {};\r\n\r\n    action.ingredients.map(el => {\r\n        return ings[el.name] = { ...el, value: 0, photo: `${URL}/uploads/ingredients/${el.photo}` }\r\n    });\r\n    return {\r\n        ...state,\r\n        ingredients: ings,\r\n        error: false,\r\n    }\r\n};\r\n\r\nconst fetchIngredientsFailed = (state, action) => {\r\n    return {\r\n        ...state,\r\n        error: action.error,\r\n    }\r\n};\r\n\r\n\r\nconst addIngredient = (state, action) => {\r\n    return {\r\n        ...state,\r\n        ingredients: {\r\n            ...state.ingredients,\r\n            [action.name]: {\r\n                ...state.ingredients[action.name],\r\n                value: state.ingredients[action.name].value + 1\r\n            }\r\n        },\r\n        totalPrice: state.totalPrice + state.ingredients[action.name].price,\r\n    };\r\n};\r\n\r\nconst removeIngredient = (state, action) => {\r\n    return {\r\n        ...state,\r\n        ingredients: {\r\n            ...state.ingredients,\r\n            [action.name]: {\r\n                ...state.ingredients[action.name],\r\n                value: state.ingredients[action.name].value - 1\r\n            }\r\n        },\r\n        totalPrice: state.totalPrice - state.ingredients[action.name].price,\r\n    };\r\n};\r\n\r\nconst clearIngredientValues = (state, action) => {\r\n    let ings = { ...state.ingredients };\r\n    Object.keys(ings).map(el => {\r\n        ings[el].value = 0\r\n        return ings[el].value;\r\n    });\r\n    return {\r\n        ...state,\r\n        ...state.ingredients,\r\n        ingredients: ings\r\n    };\r\n};\r\n\r\nconst cleartotalPrice = (state, action) => {\r\n    return {\r\n        ...state,\r\n        totalPrice: TOTAL_PRICE,\r\n    };\r\n};\r\n\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.FETCH_INGREDIENTS_SUCCESS: return fetchIngredientsSuccess(state, action);\r\n        case actionTypes.FETCH_INGREDIENTS_FAILED: return fetchIngredientsFailed(state, action);\r\n        case actionTypes.ADD_INGREDIENT: return addIngredient(state, action);\r\n        case actionTypes.REMOVE_INGREDIENT: return removeIngredient(state, action);\r\n        case actionTypes.CLEAR_INGREDIENT_VALUES: return clearIngredientValues(state, action);\r\n        case actionTypes.CLEAR_TOTAL_PRICE: return cleartotalPrice(state, action);\r\n        default: return state;\r\n    };\r\n\r\n};\r\n\r\n\r\nexport default reducer;\r\n\r\n\r\n","import userImage1 from './../../../assets/images/user-1.jpg';\r\nimport userImage2 from './../../../assets/images/user-2.jpg';\r\n\r\nconst initialState = {\r\n    reviews: {\r\n        Sarah: { img: userImage1, rating: 4.5, comment: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean pharetra nulla et rhoncus venenatis. Nam sollicitudin metus non urna feugiat, vel vehicula nunc semper. Proin nunc justo, tristique sit amet.' },\r\n        Paul: { img: userImage2, rating: 4, comment: 'Nulla ac libero nec elit porta aliquet mattis quis erat. Fusce congue mauris et quam finibus malesuada. Morbi pretium leo turpis, sed venenatis sapien vulputate eu. Duis volutpat lorem neque.' }\r\n    },\r\n}\r\n\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    return state;\r\n};\r\n\r\nexport default reducer;","import * as actionTypes from '../actions/actions';\r\n\r\n\r\n\r\nconst initialState = {\r\n    Burgers: null,\r\n    cart: 0,\r\n    totalPrice: 0,\r\n}\r\n\r\n\r\nconst removeItemFromCart = (state, action) => {\r\n    let items = state.Burgers[action.burgerObj.title].items;\r\n    let totalPrice = state.totalPrice - state.Burgers[action.burgerObj.title].price;\r\n    const cart = state.cart - items;\r\n    items = 0;\r\n\r\n    return {\r\n        ...state,\r\n        Burgers: {\r\n            ...state.Burgers,\r\n            [action.burgerObj.title]: undefined\r\n        },\r\n        cart,\r\n        totalPrice\r\n    }\r\n};\r\n\r\nconst incrementItem = (state, action) => {\r\n    let items = state.Burgers[action.burgerObj.title].items;\r\n    let price = state.Burgers[action.burgerObj.title].price + state.Burgers[action.burgerObj.title].initialprice;\r\n    let totalPrice = state.totalPrice + state.Burgers[action.burgerObj.title].initialprice;\r\n    const cart = state.cart + 1;\r\n    items += 1;\r\n\r\n    return {\r\n        ...state,\r\n        Burgers: {\r\n            ...state.Burgers,\r\n            [action.burgerObj.title]: {\r\n                ...state.Burgers[action.burgerObj.title],\r\n                items,\r\n                price,\r\n            }\r\n        },\r\n        cart,\r\n        totalPrice\r\n    }\r\n};\r\n\r\nconst decrementItem = (state, action) => {\r\n    let Burgers = { ...state.Burgers };\r\n    let items = state.Burgers[action.burgerObj.title].items;\r\n    let price = state.Burgers[action.burgerObj.title].price - state.Burgers[action.burgerObj.title].initialprice;\r\n    let totalPrice = state.totalPrice - state.Burgers[action.burgerObj.title].initialprice;\r\n    const cart = state.cart - 1;\r\n    items -= 1;\r\n\r\n    if (items > 0) {\r\n        Burgers = {\r\n            ...state.Burgers,\r\n            [action.burgerObj.title]: {\r\n                ...state.Burgers[action.burgerObj.title],\r\n                items,\r\n                price,\r\n            }\r\n        }\r\n    } else {\r\n        Burgers = {\r\n            ...state.Burgers,\r\n            [action.burgerObj.title]: undefined\r\n        }\r\n    }\r\n    return {\r\n        ...state,\r\n        Burgers,\r\n        cart,\r\n        totalPrice\r\n    }\r\n};\r\n\r\nconst addBurgersToCart = (state, action) => {\r\n    let totalPrice;\r\n    let Burger = { ...state.Burgers }\r\n\r\n    if (action.burgerObj.title === 'customBurger') {\r\n        action.burgerObj.title = `${action.burgerObj.title}-${action.burgerObj.id}`\r\n    }\r\n\r\n    if ((Object.keys(Burger).includes(action.burgerObj.title))) {\r\n        Burger[action.burgerObj.title].items += 1;\r\n        Burger[action.burgerObj.title].price += Burger[action.burgerObj.title].initialprice;\r\n        totalPrice = state.totalPrice + Burger[action.burgerObj.title].initialprice\r\n\r\n    } else {\r\n        Burger[action.burgerObj.title] = action.burgerObj;\r\n        Burger[action.burgerObj.title].items += 1;\r\n        Burger[action.burgerObj.title].price = Burger[action.burgerObj.title].initialprice;\r\n        totalPrice = state.totalPrice + Burger[action.burgerObj.title].initialprice\r\n    }\r\n\r\n    return {\r\n        ...state,\r\n        Burgers: Burger,\r\n        cart: state.cart + 1,\r\n        totalPrice\r\n    }\r\n};\r\n\r\nconst clearCart = (state, action) => {\r\n    return {\r\n        ...state,\r\n        cart: 0,\r\n        totalPrice: 0,\r\n        Burgers: null\r\n    }\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case (actionTypes.ADD_BURGERS_TO_CART): return addBurgersToCart(state, action)\r\n        case (actionTypes.INCREMENT_ITEM): return incrementItem(state, action)\r\n        case (actionTypes.DECREMENT_ITEM): return decrementItem(state, action)\r\n        case (actionTypes.REMOVE_ALL_ITEMS): return removeItemFromCart(state, action)\r\n\r\n        case (actionTypes.CLEAR_CART): return clearCart(state, action);\r\n        default: return state;\r\n    }\r\n};\r\n\r\nexport default reducer;","import * as actionTypes from './../actions/actions';\r\n\r\n\r\nconst initialState = {\r\n    getUsersInit: false,\r\n    getUsersStatus: null,\r\n\r\n    updateUserInit: false,\r\n    updateUserStatus: null,\r\n\r\n    deleteUserInit: false,\r\n    deleteUserStatus: null,\r\n\r\n    users: null\r\n}\r\n\r\nconst getAllUsersInit = (state, action) => {\r\n    return {\r\n        ...state,\r\n        getUsersInit: true,\r\n        getUsersStatus: null,\r\n    }\r\n}\r\n\r\n\r\nconst getAllUsersSuccess = (state, action) => {\r\n    return {\r\n        ...state,\r\n        getUsersInit: false,\r\n        getUsersStatus: 'success',\r\n        users: action.users\r\n    }\r\n}\r\n\r\nconst getAllUsersFailed = (state, action) => {\r\n    return {\r\n        ...state,\r\n        getUsersInit: false,\r\n        users: null,\r\n        getUsersStatus: action.error,\r\n    }\r\n}\r\n\r\nconst updateUserInit = (state, action) => {\r\n    return {\r\n        ...state,\r\n        updateUserInit: true,\r\n    }\r\n}\r\n\r\n\r\nconst updateUserFailed = (state, action) => {\r\n    return {\r\n        ...state,\r\n        updateUserInit: false,\r\n        updateUserStatus: action.error,\r\n    }\r\n}\r\n\r\nconst deleteUserInit = (state, action) => {\r\n    return {\r\n        ...state,\r\n        deleteUserInit: true,\r\n    }\r\n}\r\n\r\nconst deleteUserFailed = (state, action) => {\r\n    return {\r\n        ...state,\r\n        deleteUserInit: false,\r\n        deleteUserStatus: action.error,\r\n    }\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.GET_ALL_USERS_INIT: return getAllUsersInit(state, action);\r\n        case actionTypes.GET_ALL_USERS_SUCCESS: return getAllUsersSuccess(state, action);\r\n        case actionTypes.GET_ALL_USERS_FAILED: return getAllUsersFailed(state, action);\r\n\r\n        case actionTypes.UPDATE_ONE_USER_INIT: return updateUserInit(state, action);\r\n        case actionTypes.UPDATE_ONE_USER_FAILED: return updateUserFailed(state, action);\r\n\r\n        case actionTypes.DELETE_ONE_USER_INIT: return deleteUserInit(state, action);\r\n        case actionTypes.DELETE_ONE_USER_FAILED: return deleteUserFailed(state, action);\r\n\r\n        default: return state;\r\n    }\r\n}\r\n\r\nexport default reducer;","import * as actionTypes from './../actions/actions';\r\n\r\nconst initialState = {\r\n    userOrders: null,\r\n    orders: null,\r\n\r\n    order: null,\r\n\r\n    getOrderStatus: null,\r\n    getOrderInit: false,\r\n\r\n    totalOrdersPrice: null,\r\n    totalOrders: null,\r\n    totalCompletedOrders: null,\r\n    totalPendingOrders: null,\r\n    totalCancelledOrders: null,\r\n\r\n    getUserOrdersStatus: null,\r\n    getUserOrdersInit: false,\r\n\r\n    createUserOrderInit: false,\r\n    createUserOrderStatus: null,\r\n\r\n    getOrdersInit: false,\r\n    getOrdersStatus: null,\r\n\r\n    updateOrderStatusAdminInit: false,\r\n    updateOrderStatusAdminStatus: {},\r\n\r\n};\r\n\r\nconst createOrderInit = (state, action) => {\r\n    return {\r\n        ...state,\r\n        createUserOrderInit: true\r\n    }\r\n}\r\n\r\nconst createOrderSuccess = (state, action) => {\r\n    return {\r\n        ...state,\r\n        createUserOrderInit: false,\r\n        createUserOrderStatus: 'success'\r\n    }\r\n}\r\n\r\nconst createOrderFailed = (state, action) => {\r\n    return {\r\n        ...state,\r\n        createUserOrderInit: false,\r\n        createUserOrderStatus: action.error\r\n    }\r\n}\r\n\r\nconst getUserOrdersInit = (state, action) => {\r\n    return {\r\n        ...state,\r\n        getUserOrdersInit: true\r\n    }\r\n}\r\n\r\nconst getUserOrdersSuccess = (state, action) => {\r\n    return {\r\n        ...state,\r\n        getUserOrdersInit: false,\r\n        userOrders: action.orders,\r\n        getUserOrdersStatus: 'success'\r\n    }\r\n}\r\n\r\nconst getUserOrdersFailed = (state, action) => {\r\n    return {\r\n        ...state,\r\n        getUserOrdersInit: false,\r\n        getUserOrdersStatus: action.error\r\n    }\r\n}\r\n\r\nconst getAllOrdersInit = (state, action) => {\r\n    return {\r\n        ...state,\r\n        getOrdersInit: true\r\n    }\r\n}\r\n\r\nconst getAllOrdersSuccess = (state, action) => {\r\n    return {\r\n        ...state,\r\n        getOrdersInit: false,\r\n        orders: action.orders,\r\n        getOrdersStatus: 'success',\r\n        totalOrdersPrice: action.totalPrice,\r\n        totalOrders: action.totalOrders,\r\n        totalCompletedOrders: action.completedOrders,\r\n        totalPendingOrders: action.pendingOrders,\r\n        totalCancelledOrders: action.totalOrders - action.completedOrders - action.pendingOrders\r\n    }\r\n}\r\n\r\nconst getOrdersFailed = (state, action) => {\r\n    return {\r\n        ...state,\r\n        getOrderInit: false,\r\n        getOrderStatus: action.error\r\n    }\r\n}\r\n\r\nconst getOrderInit = (state, action) => {\r\n    return {\r\n        ...state,\r\n        getOrderInit: true,\r\n        getOrderStatus: null\r\n    }\r\n}\r\n\r\nconst getOrderSuccess = (state, action) => {\r\n    return {\r\n        ...state,\r\n        getOrderInit: false,\r\n        getOrderStatus: 'success',\r\n        order: action.order\r\n    }\r\n}\r\n\r\nconst getAllOrdersFailed = (state, action) => {\r\n    return {\r\n        ...state,\r\n        getOrdersInit: false,\r\n        getOrdersStatus: action.error\r\n    }\r\n}\r\n\r\n\r\nconst clearCart = (state, action) => {\r\n    return {\r\n        ...state,\r\n        getUserOrdersStatus: null,\r\n        getUserOrdersInit: false,\r\n\r\n        createUserOrderInit: false,\r\n        createUserOrderStatus: null\r\n    }\r\n}\r\n\r\n\r\nconst updateOrderStatusAdminInit = (state, action) => {\r\n    return {\r\n        ...state,\r\n        updateOrderStatusAdminInit: true,\r\n        updateOrderStatusAdminStatus: null,\r\n    }\r\n}\r\n\r\nconst updateOrderStatusAdminSuccess = (state, action) => {\r\n    return {\r\n        ...state,\r\n        updateOrderStatusAdminInit: false,\r\n        updateOrderStatusAdminStatus: action.response,\r\n    }\r\n}\r\n\r\nconst updateOrderStatusAdminFailed = (state, action) => {\r\n    return {\r\n        ...state,\r\n        updateOrderStatusAdminInit: false,\r\n        updateOrderStatusAdminStatus: action.error,\r\n    }\r\n}\r\n\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.GET_ALL_USER_ORDERS_INIT: return getUserOrdersInit(state, action)\r\n        case actionTypes.GET_ALL_USER_ORDERS_SUCCESS: return getUserOrdersSuccess(state, action)\r\n        case actionTypes.GET_ALL_USER_ORDERS_FAILED: return getUserOrdersFailed(state, action)\r\n\r\n        case actionTypes.CREATE_ORDER_INIT: return createOrderInit(state, action)\r\n        case actionTypes.CREATE_ORDER_SUCCESS: return createOrderSuccess(state, action)\r\n        case actionTypes.CREATE_ORDER_FAILED: return createOrderFailed(state, action)\r\n\r\n        case actionTypes.CLEAR_CART: return clearCart(state, action);\r\n\r\n        case actionTypes.GET_ALL_ORDERS_INIT: return getAllOrdersInit(state, action);\r\n        case actionTypes.GET_ALL_ORDERS_SUCCESS: return getAllOrdersSuccess(state, action);\r\n        case actionTypes.GET_ALL_ORDERS_FAILED: return getAllOrdersFailed(state, action);\r\n\r\n        case actionTypes.UPDATE_ORDER_ADMIN_STATUS_INIT: return updateOrderStatusAdminInit(state, action);\r\n        case actionTypes.UPDATE_ORDER_ADMIN_STATUS_SUCCESS: return updateOrderStatusAdminSuccess(state, action);\r\n        case actionTypes.UPDATE_ORDER_ADMIN_STATUS_FAILED: return updateOrderStatusAdminFailed(state, action);\r\n\r\n        case actionTypes.GET_ORDER_INIT: return getOrderInit(state, action);\r\n        case actionTypes.GET_ORDER_SUCCESS: return getOrderSuccess(state, action);\r\n        case actionTypes.GET_ORDER_FAILED: return getOrdersFailed(state, action);\r\n\r\n        default: return state\r\n    }\r\n}\r\n\r\nexport default reducer;","import * as actionTypes from './../actions/actions';\r\n\r\n\r\nconst initialState = {\r\n    ingredients: null,\r\n    ingredient: null,\r\n\r\n    getAllIngredientsStatus: null,\r\n    getAllIngredientsInit: false,\r\n\r\n    updateIngredientInit: false,\r\n    updateIngredientStatus: null,\r\n\r\n    getIngredientStatus: null,\r\n    getIngredientInit: false,\r\n\r\n    createIngredientsStatus: null,\r\n    createIngredientsInit: false,\r\n\r\n    deleteIngredientStatus: null,\r\n    deleteIngredientInit: false,\r\n}\r\n\r\n// Get all Ingredients\r\n//////////////////////////////////////////////////////////\r\n\r\nconst getAllIngredientsInit = (state, action) => {\r\n    return {\r\n        ...state,\r\n        getAllIngredientsStatus: null,\r\n        getAllIngredientsInit: true,\r\n    }\r\n}\r\n\r\nconst getAllIngredientsFailed = (state, action) => {\r\n    return {\r\n        ...state,\r\n        getAllIngredientsStatus: action.error,\r\n        getAllIngredientsInit: false,\r\n    }\r\n}\r\n\r\n\r\nconst getAllIngredientsSuccess = (state, action) => {\r\n    let ingredients = [];\r\n    (action.res.ingredients).map(el => {\r\n        return ingredients.push({ ...el, photo: `http://localhost:4000/uploads/ingredients/${el.photo}` })\r\n    })\r\n    return {\r\n        ...state,\r\n        ingredients,\r\n        getAllIngredientsStatus: action.res.status,\r\n        getAllIngredientsInit: false,\r\n    }\r\n}\r\n///////////////////////////////////////////////////////////////////////////////\r\n// get ingredient\r\n\r\nconst getIngredientInit = (state, action) => {\r\n    return {\r\n        ...state,\r\n        getIngredientStatus: null,\r\n        getIngredientInit: true,\r\n    }\r\n}\r\n\r\nconst getIngredientFailed = (state, action) => {\r\n    return {\r\n        ...state,\r\n        getIngredientStatus: action.error,\r\n        getIngredientInit: false,\r\n    }\r\n}\r\n\r\n\r\nconst getIngredientSuccess = (state, action) => {\r\n\r\n    return {\r\n        ...state,\r\n        ingredient: {\r\n            ...action.res.ingredient,\r\n            photo: `http://localhost:4000/uploads/ingredients/${action.res.ingredient.photo}`\r\n        },\r\n        getIngredientStatus: action.res.status,\r\n        getIngredientInit: false,\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n////////////////////////////////////////////////////////////////////////////////\r\n// Create ingredient\r\n\r\n\r\n\r\nconst createIngredientsInit = (state, action) => {\r\n    return {\r\n        ...state,\r\n        createIngredientsStatus: null,\r\n        createIngredientsInit: true,\r\n    }\r\n}\r\n\r\nconst createIngredientsFailed = (state, action) => {\r\n    return {\r\n        ...state,\r\n        createIngredientsStatus: action.error,\r\n        createIngredientsInit: false,\r\n    }\r\n}\r\n\r\n\r\nconst createIngredientsSuccess = (state, action) => {\r\n    return {\r\n        ...state,\r\n        createIngredientsStatus: action.res,\r\n        createIngredientsInit: false,\r\n    }\r\n}\r\n\r\n/////////////////////////////////////////////////////////////////////////////////////\r\n// Update ingredient\r\n\r\n\r\nconst updateIngredientInit = (state, action) => {\r\n    return {\r\n        ...state,\r\n        updateIngredientsStatus: null,\r\n        updateIngredientsInit: true,\r\n    }\r\n}\r\n\r\nconst updateIngredientFailed = (state, action) => {\r\n    return {\r\n        ...state,\r\n        updateIngredientsStatus: action.error,\r\n        updateIngredientsInit: false,\r\n    }\r\n}\r\n\r\n\r\nconst updateIngredientSuccess = (state, action) => {\r\n    return {\r\n        ...state,\r\n        ingredient: {\r\n            ...action.res.ingredient,\r\n            photo: `http://localhost:4000/uploads/ingredients/${action.res.ingredient.photo}`\r\n        },\r\n        updateIngredientsStatus: action.res,\r\n        updateIngredientsInit: false,\r\n    }\r\n}\r\n\r\n\r\n/////////////////////////////////////////////////////////////////////////////////////\r\n\r\nconst deleteIngredientInit = (state, action) => {\r\n    return {\r\n        ...state,\r\n        deleteIngredientStatus: null,\r\n        deleteIngredientInit: true,\r\n    }\r\n}\r\n\r\nconst deleteIngredientFailed = (state, action) => {\r\n    return {\r\n        ...state,\r\n        deleteIngredientStatus: action.error,\r\n        deleteIngredientInit: false,\r\n    }\r\n}\r\n\r\n\r\nconst deleteIngredientSuccess = (state, action) => {\r\n    return {\r\n        ...state,\r\n        deleteIngredientStatus: 'success',\r\n        deleteIngredientInit: false,\r\n    }\r\n}\r\n///////////////////////////////////////////////////////////////////////////////////\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.GET_INGREDIENTS_INIT: return getAllIngredientsInit(state, action);\r\n        case actionTypes.GET_INGREDIENTS_SUCCESS: return getAllIngredientsSuccess(state, action);\r\n        case actionTypes.GET_INGREDIENTS_FAILED: return getAllIngredientsFailed(state, action);\r\n\r\n        case actionTypes.CREATE_INGREDIENTS_INIT: return createIngredientsInit(state, action);\r\n        case actionTypes.CREATE_INGREDIENTS_SUCCESS: return createIngredientsSuccess(state, action);\r\n        case actionTypes.CREATE_INGREDIENTS_FAILED: return createIngredientsFailed(state, action);\r\n\r\n        case actionTypes.GET_INGREDIENT_INIT: return getIngredientInit(state, action);\r\n        case actionTypes.GET_INGREDIENT_SUCCESS: return getIngredientSuccess(state, action);\r\n        case actionTypes.GET_INGREDIENT_FAILED: return getIngredientFailed(state, action);\r\n\r\n        case actionTypes.UPDATE_INGREDIENT_INIT: return updateIngredientInit(state, action)\r\n        case actionTypes.UPDATE_INGREDIENT_SUCCESS: return updateIngredientSuccess(state, action)\r\n        case actionTypes.UPDATE_INGREDIENT_FAILED: return updateIngredientFailed(state, action)\r\n\r\n        case actionTypes.DELETE_INGREDIENT_INIT: return deleteIngredientInit(state, action);\r\n        case actionTypes.DELETE_INGREDIENT_SUCCESS: return deleteIngredientSuccess(state, action);\r\n        case actionTypes.DELETE_ONE_USER_FAILED: return deleteIngredientFailed(state, action);\r\n\r\n        default: return state;\r\n    }\r\n}\r\n\r\nexport default reducer;","import { combineReducers } from 'redux';\r\n\r\nimport authReducer from './auth';\r\nimport menuReducer from './menu';\r\nimport burgerBuilderReducer from './burgerBuilder';\r\nimport customerReducer from './customer';\r\nimport cartReducer from './cart';\r\nimport userReducer from './users';\r\nimport orderReducer from './orders';\r\nimport ingredientReducer from './ingredients';\r\n\r\n\r\nconst reducer = combineReducers({\r\n    menu: menuReducer,\r\n    customer: customerReducer,\r\n    burgerBuilder: burgerBuilderReducer,\r\n    cart: cartReducer,\r\n    auth: authReducer,\r\n    users: userReducer,\r\n    orders: orderReducer,\r\n    ingredients: ingredientReducer,\r\n});\r\n\r\nexport default reducer;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { createStore, applyMiddleware, compose } from 'redux';\r\n\r\nimport './scss/main.scss';\r\n\r\n\r\nimport App from './app/App';\r\nimport reducer from './app/Store/reducers/rootReducer';\r\n\r\nimport thunk from 'redux-thunk';\r\n\r\nconst composeEnhancers = process.env.NODE_ENV === 'development' ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ : null || compose;\r\n\r\nconst store = createStore(reducer, composeEnhancers(\r\n  applyMiddleware(thunk)\r\n));\r\n\r\nconst app = (\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>\r\n)\r\n\r\nReactDOM.render(app, document.getElementById('root'));\r\n\r\n"],"sourceRoot":""}