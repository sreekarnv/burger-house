{"version":3,"sources":["app/Pages/DashBoard/Admin/Menu/UpdateBurgerList.js","../node_modules/uniqid/index.js","app/Shared/Components/Buttons/AddorRemoveButton.js","app/Store/actions/burgerBuilder.js","app/Store/actions/menu.js","app/Shared/Components/Card/CardMenu.js"],"names":["UpdateBurgerList","state","isLoading","onChooseMenuHandler","id","props","history","push","toCreateBurger","match","url","this","setState","initMenu","timer","setTimeout","clearTimeout","menuList","burgers","menu","length","className","Object","keys","map","el","_id","initialprice","price","totalprice","key","title","foodType","ingredients","burgerImage","photo","items","chooseBurger","loading","onClick","Component","connect","Burgers","user","auth","dispatch","menuActions","pid","process","toString","now","time","Date","last","module","exports","default","prefix","suffix","AddorRemoveButton","classes","disabled","type","addItem","valueClass","removeItem","addIngredient","name","actionTypes","removeIngredient","clearIngredientValues","clearPriceValue","initIngredients","a","axios","get","response","console","log","data","error","fetchBurgersSuccess","fetchIngredients","initBurgers","err","setMenuIngs","ings","updateBurger","burger","method","res","status","createBurger","deleteBurger","Card","showAlert","showAddorRemoveBtn","uniqid","amount","card__btn","Burger","BurgerImage","menuBurgers","page","cartBurgers","addItemToCart","src","alt","cart"],"mappings":"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","file":"static/js/14.141172f5.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport Card from '../../../../Shared/Components/Card/CardMenu';\r\nimport Loader from '../../../../Shared/Components/Loader/Loader';\r\n\r\nimport * as menuActions from '../../../../Store/actions/menu';\r\n\r\nclass UpdateBurgerList extends Component {\r\n    state = {\r\n        isLoading: false\r\n    }\r\n\r\n    async componentDidMount() {\r\n        this.setState({ isLoading: true })\r\n        await this.props.initMenu();\r\n        this.timer = setTimeout(() => {\r\n            this.setState({ isLoading: false })\r\n        }, 1000)\r\n    }\r\n\r\n    onChooseMenuHandler = (id) => {\r\n        this.props.history.push(`/dashboard/manage-menu/${id}`);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        clearTimeout(this.timer);\r\n    }\r\n\r\n    toCreateBurger = () => {\r\n        this.props.history.push(`${this.props.match.url}/new`);\r\n    }\r\n\r\n    render() {\r\n        let menuList;\r\n        let burgers = this.props.menu;\r\n\r\n        if (burgers.length > 0) {\r\n            menuList = <div className=\"update-menu__list\">\r\n                {Object.keys(burgers).map(el => {\r\n                    return <Card\r\n                        _id={burgers[el]._id}\r\n                        initialprice={burgers[el].price}\r\n                        price={burgers[el].totalprice}\r\n                        key={burgers[el]._id}\r\n                        title={burgers[el].title} foodType={burgers[el].foodType}\r\n                        ingredients={burgers[el].ingredients} burgerImage={burgers[el].photo}\r\n                        items={burgers[el].items}\r\n                        chooseBurger={this.onChooseMenuHandler}\r\n                    />\r\n                })}\r\n            </div>\r\n        } else {\r\n            menuList = <div className=\"update-menu__list update-menu__list--empty \">\r\n                <h4>You have no items in menu</h4>\r\n            </div>\r\n        }\r\n\r\n\r\n        if (this.props.loading || this.state.isLoading) {\r\n            return <div\r\n                className=\"update-menu dashboard__dashboard u-vh-100 u-flex-center u-bg-white\">\r\n                <Loader /></div>\r\n        }\r\n\r\n        return (\r\n            <div className=\"update-menu dashboard__dashboard\">\r\n                <h2 className=\"update-menu__heading heading-1\">Update Menu</h2>\r\n                <button\r\n                    onClick={this.toCreateBurger}\r\n                    className=\"update-menu__btn btn btn__tertiary-goTo\">Create a New Burger</button>\r\n                {menuList}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        menu: state.menu.Burgers,\r\n        loading: state.menu.loading,\r\n        user: state.auth.user\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        initMenu: () => dispatch(menuActions.initBurgers())\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UpdateBurgerList);","/* \n(The MIT License)\nCopyright (c) 2014-2019 Halász Ádám <mail@adamhalasz.com>\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\n//  Unique Hexatridecimal ID Generator\n// ================================================\n\n//  Dependencies\n// ================================================\nvar pid = process && process.pid ? process.pid.toString(36) : '' ;\nvar address = '';\nif(typeof __webpack_require__ !== 'function'){\n    var mac = '', networkInterfaces = require('os').networkInterfaces();\n    for(let interface_key in networkInterfaces){\n        const networkInterface = networkInterfaces[interface_key];\n        const length = networkInterface.length;\n        for(var i = 0; i < length; i++){\n            if(networkInterface[i].mac && networkInterface[i].mac != '00:00:00:00:00:00'){\n                mac = networkInterface[i].mac; break;\n            }\n        }\n    }\n    address = mac ? parseInt(mac.replace(/\\:|\\D+/gi, '')).toString(36) : '' ;\n} \n\n//  Exports\n// ================================================\nmodule.exports = module.exports.default = function(prefix, suffix){ return (prefix ? prefix : '') + address + pid + now().toString(36) + (suffix ? suffix : ''); }\nmodule.exports.process = function(prefix, suffix){ return (prefix ? prefix : '') + pid + now().toString(36) + (suffix ? suffix : ''); }\nmodule.exports.time    = function(prefix, suffix){ return (prefix ? prefix : '') + now().toString(36) + (suffix ? suffix : ''); }\n\n//  Helpers\n// ================================================\nfunction now(){\n    var time = Date.now();\n    var last = now.last || time;\n    return now.last = time > last ? time : last + 1;\n}\n","import React from 'react'\r\n\r\nconst AddorRemoveButton = props => {\r\n    let disabled = false;\r\n    let classes;\r\n    if (props.items === 0) {\r\n        disabled = true;\r\n        classes = \"btn btn__primary-disabled\";\r\n    }\r\n    return (\r\n        <div className={`btn__addOrRemove ${props.className}`}>\r\n            <button type=\"button\" onClick={props.addItem} className={props.classes}>+</button>\r\n            <p className={`u-text-tertiary ${props.valueClass}`}>{props.items}</p>\r\n            <button type=\"button\" onClick={props.removeItem} disabled={disabled} className={classes || props.classes}>-</button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AddorRemoveButton;\r\n","import * as actionTypes from './../actions/actions';\r\nimport axios from 'axios';\r\n\r\n\r\nexport const addIngredient = (name) => {\r\n    return {\r\n        type: actionTypes.ADD_INGREDIENT,\r\n        name: name\r\n    };\r\n};\r\n\r\nexport const removeIngredient = (name) => {\r\n    return {\r\n        type: actionTypes.REMOVE_INGREDIENT,\r\n        name: name\r\n    };\r\n};\r\n\r\nexport const clearIngredientValues = ingredients => {\r\n    return {\r\n        type: actionTypes.CLEAR_INGREDIENT_VALUES,\r\n        ingredients: ingredients\r\n    }\r\n}\r\n\r\nexport const clearPriceValue = () => {\r\n    return {\r\n        type: actionTypes.CLEAR_TOTAL_PRICE,\r\n    };\r\n};\r\n\r\nexport const fetchIngredientsSuccess = (ingredients) => {\r\n    return {\r\n        type: actionTypes.FETCH_INGREDIENTS_SUCCESS,\r\n        ingredients,\r\n    }\r\n}\r\n\r\nexport const fetchIngredientsFailed = (error) => {\r\n    return {\r\n        type: actionTypes.FETCH_INGREDIENTS_FAILED,\r\n        error\r\n    }\r\n}\r\nexport const initIngredients = () => {\r\n    return async dispatch => {\r\n        try {\r\n            const response = await axios.get(`/api/v1/ingredients`);\r\n            console.log(response);\r\n            dispatch(fetchIngredientsSuccess(response.data.ingredients));\r\n        } catch (err) {\r\n            dispatch(fetchIngredientsFailed({ ...err }.response.data));\r\n        }\r\n    }\r\n};\r\n","import * as actionTypes from './actions';\r\nimport axios from 'axios';\r\nimport { initIngredients } from './burgerBuilder';\r\n\r\n\r\nexport const fetchBurgersSuccess = burgers => {\r\n    return {\r\n        type: actionTypes.FETCH_BURGERS_SUCCESS,\r\n        burgers\r\n    };\r\n};\r\n\r\nexport const fetchBurgersFailed = (err) => {\r\n    return {\r\n        type: actionTypes.FETCH_BURGERS_FAILED,\r\n        error: err\r\n    }\r\n}\r\n\r\nexport const fetchBurgersInit = () => {\r\n    return {\r\n        type: actionTypes.FETCH_BURGERS_INIT\r\n    }\r\n}\r\n////////////////////////////////////////////////////////////////\r\n\r\n\r\nexport const fetchIngredientsInit = () => {\r\n    return {\r\n        type: actionTypes.FETCH_INGREDIENTS_INIT\r\n    }\r\n}\r\n\r\nexport const fetchIngredientsSuccess = (ingredients) => {\r\n    return {\r\n        type: actionTypes.FETCH_INGREDIENTS_SUCCESS,\r\n        ingredients,\r\n    }\r\n}\r\n\r\nexport const fetchIngredientsFailed = (error) => {\r\n    return {\r\n        type: actionTypes.FETCH_INGREDIENTS_FAILED,\r\n        error\r\n    }\r\n}\r\n\r\nexport const fetchIngredients = () => {\r\n    return async dispatch => {\r\n        dispatch(fetchIngredientsInit())\r\n        try {\r\n            const response = await axios.get(`/api/v1/ingredients`);\r\n            dispatch(fetchIngredientsSuccess(response.data.ingredients));\r\n        } catch (err) {\r\n            dispatch(fetchIngredientsFailed({ ...err }.response.data));\r\n        }\r\n    }\r\n};\r\n\r\n\r\n///////////////////////////////////////////////////////////////\r\nexport const initBurgers = () => {\r\n    return async dispatch => {\r\n        dispatch(fetchBurgersInit());\r\n        try {\r\n            const response = await axios.get(`/api/v1/burgers`);\r\n            const burgers = response.data.burgers\r\n            dispatch(fetchBurgersSuccess(burgers));\r\n        } catch (err) {\r\n            const error = { ...err }.response ? { ...err }.response : err;\r\n            dispatch(fetchBurgersFailed(error));\r\n        }\r\n    }\r\n};\r\n\r\n\r\n/////////////////////////////////////////////////////////////\r\n\r\nexport const addIngredient = (name) => {\r\n    return {\r\n        type: actionTypes.UPDATE_MENU_ADD_INGREDIENT,\r\n        name\r\n    };\r\n};\r\n\r\nexport const removeIngredient = (name) => {\r\n    return {\r\n        type: actionTypes.UPDATE_MENU_REMOVE_INGREDIENT,\r\n        name\r\n    };\r\n};\r\n\r\n///////////////////////////////////////////////////////////////\r\n\r\nexport const setMenuIngs = (ings) => {\r\n    return {\r\n        type: actionTypes.SET_MENU_INGREDIENTS,\r\n        ings\r\n    }\r\n}\r\n///////////////////////////////////////////////////////////////\r\n\r\nexport const updateBurgerFailed = (error) => {\r\n    return {\r\n        type: actionTypes.UPDATE_BURGER_FAILED,\r\n        error,\r\n    }\r\n}\r\n\r\nexport const updateBurgerSuccess = response => {\r\n    return {\r\n        type: actionTypes.UPDATE_BURGER_SUCCESS,\r\n        status: response\r\n    }\r\n}\r\n\r\nexport const updateBurger = (burger) => {\r\n    return async dispatch => {\r\n        let id = burger._id ? burger._id : burger.get('_id');\r\n        try {\r\n            const res = await axios({\r\n                url: `/api/v1/burgers/${id}`,\r\n                data: burger,\r\n                method: 'PATCH'\r\n            })\r\n\r\n            dispatch(updateBurgerSuccess(res.data))\r\n            dispatch(initBurgers());\r\n            dispatch(initIngredients());\r\n        } catch (err) {\r\n            dispatch(updateBurgerFailed({ ...err.response.data }))\r\n        }\r\n    }\r\n}\r\n\r\n////////////////////////////////////////////////////////////////////\r\n\r\n\r\nexport const createBurgerFailed = (error) => {\r\n    return {\r\n        type: actionTypes.CREATE_BURGER_FAILED,\r\n        error,\r\n    }\r\n}\r\n\r\nexport const createBurgerSuccess = response => {\r\n    return {\r\n        type: actionTypes.CREATE_BURGER_SUCCESS,\r\n        status: response\r\n    }\r\n}\r\n\r\nexport const createBurger = (burger) => {\r\n    return async dispatch => {\r\n        try {\r\n            const res = await axios({\r\n                url: `/api/v1/burgers`,\r\n                data: burger,\r\n                method: 'POST'\r\n            })\r\n            dispatch(createBurgerSuccess(res.data))\r\n        } catch (err) {\r\n            dispatch(createBurgerFailed({ ...err.response.data }))\r\n        }\r\n    }\r\n}\r\n////////////////////////////////////////////////////////////////////\r\n\r\nexport const deleteBurgerInit = () => {\r\n    return {\r\n        type: actionTypes.DELETE_BURGER_INIT\r\n    }\r\n}\r\n\r\n\r\nexport const deleteBurgerFailed = (error) => {\r\n    return {\r\n        type: actionTypes.DELETE_BURGER_FAILED,\r\n        error,\r\n    }\r\n}\r\n\r\nexport const deleteBurgerSuccess = response => {\r\n    return {\r\n        type: actionTypes.DELETE_BURGER_SUCCESS,\r\n        response\r\n    }\r\n}\r\n\r\nexport const deleteBurger = (id) => {\r\n    return async dispatch => {\r\n        try {\r\n            dispatch(deleteBurgerInit());\r\n\r\n            const res = await axios({\r\n                url: `/api/v1/burgers/${id}`,\r\n                method: 'delete'\r\n            })\r\n            dispatch(deleteBurgerSuccess(res.data))\r\n        } catch (err) {\r\n            dispatch(deleteBurgerFailed({ ...err.response.data }))\r\n        }\r\n    }\r\n}\r\n\r\n/////////////////////////////////////////////////////////////////","import React, { Component } from 'react';\r\nimport uniqid from 'uniqid';\r\nimport { connect } from 'react-redux';\r\nimport AddorRemoveBtn from './../../Components/Buttons/AddorRemoveButton';\r\n\r\nclass Card extends Component {\r\n    state = {\r\n        showAlert: false,\r\n        showAddorRemoveBtn: false,\r\n    };\r\n\r\n    ingredients = Object.keys(this.props.ingredients).map(el => <p key={uniqid()}\r\n        className=\"card__menu-ingredient\">\r\n        <span className=\"card__menu-ingredient-name\">{this.props.ingredients[el].name}</span>&nbsp;&#10005;&nbsp;\r\n        <span>{this.props.ingredients[el].amount}</span></p>)\r\n\r\n    render() {\r\n        let Burger = {\r\n            _id: this.props._id,\r\n            title: this.props.title,\r\n            initialprice: this.props.initialprice,\r\n            foodType: this.props.foodType,\r\n            ingredients: this.props.ingredients,\r\n            BurgerImage: this.props.burgerImage,\r\n            items: this.props.items,\r\n            price: this.props.price,\r\n        };\r\n\r\n        let card__btn;\r\n        Object.keys(this.props.menuBurgers).map(el => {\r\n            if (this.props.page === 'menu') {\r\n                if (!this.props.cartBurgers || !this.props.cartBurgers[this.props.title]) {\r\n                    return card__btn = <button onClick={() => this.props.addItemToCart(Burger)}\r\n                        className=\"btn btn__primary card__menu-btn\">Add to Cart</button>\r\n\r\n                } else if (this.props.cartBurgers[this.props.title].items > 0) {\r\n                    Burger.items = this.props.cartBurgers[this.props.title].items\r\n                    return card__btn = <AddorRemoveBtn\r\n                        valueClass=\"u-fontSize-3rem\"\r\n                        className=\"card__menu-btn\"\r\n                        classes=\"btn btn__primary btn__primary-round btn--large \"\r\n                        removeItem={() => this.props.removeItem(Burger)}\r\n                        addItem={() => this.props.addItem(Burger)} items={this.props.cartBurgers[this.props.title].items} />\r\n\r\n                }\r\n            } else {\r\n                return card__btn = <button\r\n                    onClick={() => this.props.chooseBurger(this.props._id)}\r\n                    className=\"btn btn__primary card__menu-btn\">Update Settings</button>;;\r\n            }\r\n            return card__btn;\r\n        })\r\n\r\n        return (\r\n            <div className=\"card__menu\">\r\n                <img src={this.props.burgerImage} alt=\"burger\" className=\"card__menu-img\" />\r\n                <h3 className=\"card__menu-title\">{this.props.title}</h3>\r\n                <p className={`u-text-${this.props.foodType} card__menu-foodType`}>{this.props.foodType}</p>\r\n                <div className=\"card__menu-ingredients\">\r\n                    {this.ingredients}\r\n                </div>\r\n                <p className=\"card__menu-price\">Rs {this.props.initialprice}</p>\r\n                {card__btn}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        cart: state.cart.cart,\r\n        cartBurgers: state.cart.Burgers,\r\n        menuBurgers: state.menu.Burgers,\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Card);"],"sourceRoot":""}