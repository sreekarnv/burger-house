{"version":3,"sources":["app/Store/actions/auth.js","app/Store/actions/actions.js","app/Shared/Components/Loader/Loader.js","app/Shared/Components/Form/Input.js","app/Shared/Utils/formInput.js","app/Shared/Components/BackDrop/BackDrop.js","assets/images/user-1.jpg","assets/images/user-2.jpg","assets/icons/burger.svg","app/Shared/Icons/HamburgerMenu.js","app/Pages/DashBoard/Layout.js","app/Pages/Error/Error.js","app/Pages/Logout/Logout.js","app/Pages/Login/VerifyEmail.js","app/Pages/Login/VerifyAccount.js","app/Layout/Body.js","app/App.js","app/Store/reducers/auth.js","app/Store/reducers/menu.js","app/Store/reducers/burgerBuilder.js","app/Store/reducers/customer.js","app/Store/reducers/cart.js","app/Store/reducers/users.js","app/Store/reducers/orders.js","app/Store/reducers/ingredients.js","app/Store/reducers/rootReducer.js","index.js"],"names":["checkAuth","dispatch","a","type","actionTypes","axios","get","res","user","data","registerSuccess","response","registerFailed","error","register","method","url","loginSuccess","loginFailed","login","logout","err","updateCurrentUser","updateCurrentUserPassword","updateCurrentUserPasswordSuccess","deleteCurrentUser","sendEmailConfirmation","email","verifyAccount","id","console","log","ADD_INGREDIENT","REMOVE_INGREDIENT","FETCH_INGREDIENTS_INIT","FETCH_INGREDIENTS_SUCCESS","FETCH_INGREDIENTS_FAILED","FETCH_BURGERS_INIT","FETCH_BURGERS_SUCCESS","FETCH_BURGERS_FAILED","CLEAR_INGREDIENT_VALUES","CLEAR_TOTAL_PRICE","INCREMENT_ITEM","DECREMENT_ITEM","REMOVE_ALL_ITEMS","ADD_BURGERS_TO_CART","REGISTER_USER_INIT","REGISTER_USER_SUCCESS","REGISTER_USER_FAILED","LOGIN_USER_INIT","LOGIN_USER_SUCCESS","LOGIN_USER_FAILED","CHECK_AUTH_STATE_INIT","CHECK_AUTH_STATE_SUCCESS","CHECK_AUTH_STATE_FAILED","LOGOUT_USER_INIT","LOGOUT_USER_SUCCESS","LOGOUT_USER_FAILED","SEND_EMAIL_CONFIRMATION_INIT","SEND_EMAIL_CONFIRMATION_SUCCESS","SEND_EMAIL_CONFIRMATION_FAILED","VERIFY_ACCOUNT_INIT","VERIFY_ACCOUNT_SUCCESS","VERIFY_ACCOUNT_FAILED","GET_ALL_USERS_INIT","GET_ALL_USERS_SUCCESS","GET_ALL_USERS_FAILED","UPDATE_ONE_USER_INIT","UPDATE_ONE_USER_FAILED","GET_ALL_USER_ORDERS_INIT","GET_ALL_USER_ORDERS_SUCCESS","GET_ALL_USER_ORDERS_FAILED","UPDATE_CURRENT_USER_INIT","UPDATE_CURRENT_USER_SUCCESS","UPDATE_CURRENT_USER_FAILED","UPDATE_CURRENT_USER_PASSWORD_INIT","UPDATE_CURRENT_USER_PASSWORD_SUCCESS","UPDATE_CURRENT_USER_PASSWORD_FAILED","DELETE_CURRENT_USER_INIT","DELETE_CURRENT_USER_SUCCESS","DELETE_CURRENT_USER_FAILED","DELETE_ONE_USER_INIT","DELETE_ONE_USER_FAILED","CLEAR_CART","CREATE_ORDER_INIT","CREATE_ORDER_SUCCESS","CREATE_ORDER_FAILED","GET_ALL_ORDERS_INIT","GET_ALL_ORDERS_SUCCESS","GET_ALL_ORDERS_FAILED","UPDATE_ORDER_ADMIN_STATUS_INIT","UPDATE_ORDER_ADMIN_STATUS_SUCCESS","UPDATE_ORDER_ADMIN_STATUS_FAILED","GET_ORDER_INIT","GET_ORDER_SUCCESS","GET_ORDER_FAILED","UPDATE_MENU_REMOVE_INGREDIENT","UPDATE_MENU_ADD_INGREDIENT","SET_MENU_INGREDIENTS","UPDATE_BURGER_SUCCESS","UPDATE_BURGER_FAILED","CREATE_BURGER_INIT","CREATE_BURGER_SUCCESS","CREATE_BURGER_FAILED","DELETE_BURGER_INIT","DELETE_BURGER_SUCCESS","DELETE_BURGER_FAILED","GET_INGREDIENTS_INIT","GET_INGREDIENTS_SUCCESS","GET_INGREDIENTS_FAILED","CREATE_INGREDIENTS_INIT","CREATE_INGREDIENTS_SUCCESS","CREATE_INGREDIENTS_FAILED","UPDATE_INGREDIENT_INIT","UPDATE_INGREDIENT_SUCCESS","UPDATE_INGREDIENT_FAILED","GET_INGREDIENT_INIT","GET_INGREDIENT_SUCCESS","GET_INGREDIENT_FAILED","DELETE_INGREDIENT_INIT","DELETE_INGREDIENT_SUCCESS","Loader","className","Input","props","inputtype","required","label","name","placeholder","onChange","minLength","value","markup","variant","formGroupClass","onChangeFormInput","e","state","formInput","target","clearFields","stateCopy","Object","keys","map","el","backDrop","show","onClick","close","module","exports","_extends","assign","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","_ref2","createElement","d","_ref","svgRef","title","enableBackground","height","viewBox","width","ref","ForwardRef","forwardRef","HamburgerMenu","Sidebar","lazy","CurrentUserOrders","Profile","Users","UserOrders","UpdateBurgerDetail","UpdateBurgerList","CreateBurger","OrderDetail","Layout","showSideBar","sidebarShowHandler","setState","sidebarCloseHandler","role","history","push","Fragment","closeSidebar","path","match","exact","component","Component","connect","auth","Error","goBack","Logout","replace","logoutInit","authActions","VerifyEmail","onChangeHandler","onSubmitHandler","preventDefault","sendEmailStatus","sendEmailInit","autoComplete","onSubmit","VerifyAccount","verfiyAccount","params","accountVerifiedInit","accountVerifiedStatus","Menu","Cart","CustomBurger","About","Home","Register","Login","ConfirmRegistration","Body","loading","fallback","Dashboard","Header","Footer","App","checkAuthState","initialState","checkAuthInit","registerInit","registerStatus","loginStatus","loginInit","updateUserDataInit","updateUserDataStatus","updateUserPasswordInit","updateUserPasswordStatus","deleteUserInit","deleteUserStatus","checkAuthStateInit","action","checkAuthSuccess","userPhoto","photo","checkAuthStateFailed","status","logoutSuccess","logoutFailed","updateUserDataSuccess","updateUserDataFailed","updateUserPasswordSuccess","updateUserPasswordFailed","deleteCurrentUserInit","deleteCurrentUserSuccess","deleteCurrentUserFailed","sendEmailConfirmationInit","sendEmailConfirmationSuccess","sendEmailConfirmationFailed","accountVerifiedSuccess","accountVerifiedFailed","reducer","Burgers","updateBurgers","ingredientsInit","ingredients","menuIngs","totalBurgerPrice","updateBurgersStatus","createBurgerInit","createBurgerStatus","deleteBurgerInit","deleteBurgerStatus","fetchBurgersSuccess","burgers","x","totalPrice","items","fetchBurgersFailed","message","fetchBurgersInit","fetchIngredientsInit","fetchIngredientsSuccess","ings","fetchIngredientsFailed","addIngredient","removeIngredient","setMenuIngredients","updateMenuBurgerSuccess","updateMenuBurgerFailed","createBurgerSuccess","createBurgerFailed","deleteBurgerFailed","deleteBurgerSuccess","ingredientsLoading","forEach","price","clearIngredientValues","cleartotalPrice","reviews","Sarah","img","userImage1","rating","comment","Paul","userImage2","cart","removeItemFromCart","burgerObj","undefined","incrementItem","initialprice","decrementItem","addBurgersToCart","Burger","includes","clearCart","getUsersInit","getUsersStatus","updateUserInit","updateUserStatus","users","getAllUsersInit","getAllUsersSuccess","getAllUsersFailed","updateUserFailed","deleteUserFailed","userOrders","orders","order","getOrderStatus","getOrderInit","totalOrdersPrice","totalOrders","totalCompletedOrders","totalPendingOrders","totalCancelledOrders","getUserOrdersStatus","getUserOrdersInit","createUserOrderInit","createUserOrderStatus","getOrdersInit","getOrdersStatus","updateOrderStatusAdminInit","updateOrderStatusAdminStatus","createOrderInit","createOrderSuccess","createOrderFailed","getUserOrdersSuccess","getUserOrdersFailed","getAllOrdersInit","getAllOrdersSuccess","completedOrders","pendingOrders","getOrdersFailed","getOrderSuccess","getAllOrdersFailed","updateOrderStatusAdminSuccess","updateOrderStatusAdminFailed","ingredient","getAllIngredientsStatus","getAllIngredientsInit","updateIngredientInit","updateIngredientStatus","getIngredientStatus","getIngredientInit","createIngredientsStatus","createIngredientsInit","deleteIngredientStatus","deleteIngredientInit","getAllIngredientsFailed","getAllIngredientsSuccess","getIngredientFailed","getIngredientSuccess","createIngredientsFailed","createIngredientsSuccess","updateIngredientsStatus","updateIngredientsInit","updateIngredientFailed","updateIngredientSuccess","deleteIngredientFailed","deleteIngredientSuccess","combineReducers","menu","menuReducer","customer","customerReducer","burgerBuilder","burgerBuilderReducer","cartReducer","authReducer","userReducer","orderReducer","ingredientReducer","composeEnhancers","compose","store","createStore","applyMiddleware","thunk","app","StrictMode","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.22e40389.chunk.js","sourcesContent":["import * as actionTypes from './actions';\r\nimport axios from 'axios';\r\n\r\n\r\n/////////////////////////////////////////////////////////////////////////////////////\r\n\r\nexport const checkAuthInit = () => {\r\n    return {\r\n        type: actionTypes.CHECK_AUTH_STATE_INIT,\r\n    }\r\n}\r\n\r\nexport const checkAuthSuccess = user => {\r\n    return {\r\n        type: actionTypes.CHECK_AUTH_STATE_SUCCESS,\r\n        user\r\n    }\r\n}\r\n\r\nexport const checkAuthFailed = () => {\r\n    return {\r\n        type: actionTypes.CHECK_AUTH_STATE_FAILED,\r\n    }\r\n}\r\n\r\nexport const checkAuth = () => {\r\n    return async dispatch => {\r\n        dispatch(checkAuthInit());\r\n        try {\r\n            let res = await axios.get(`/api/v1/users/checkAuth`)\r\n            dispatch(checkAuthSuccess(res.data.user))\r\n        } catch (err) {\r\n            dispatch(checkAuthFailed());\r\n        }\r\n    }\r\n}\r\n\r\n\r\n////////////////////////////////////////////////////////////////////////////////////////\r\n// REGISTER USER\r\n\r\nexport const registerInit = () => {\r\n    return {\r\n        type: actionTypes.REGISTER_USER_INIT\r\n    }\r\n}\r\n\r\nexport const registerSuccess = res => {\r\n    return {\r\n        type: actionTypes.REGISTER_USER_SUCCESS,\r\n        response: res\r\n    }\r\n}\r\n\r\n\r\nexport const registerFailed = error => {\r\n    return {\r\n        type: actionTypes.REGISTER_USER_FAILED,\r\n        error\r\n    }\r\n}\r\n\r\nexport const register = (data) => {\r\n    return async dispatch => {\r\n        dispatch(registerInit());\r\n        try {\r\n            const res = await axios({\r\n                method: 'POST',\r\n                url: `/api/v1/users/register`,\r\n                data\r\n            })\r\n            dispatch(registerSuccess(res))\r\n        } catch (err) {\r\n            let error = { ...err }.response ? { ...err }.response : err;\r\n            dispatch(registerFailed(error))\r\n        }\r\n    }\r\n}\r\n\r\n//////////////////////////////////////////////////////////////////////\r\n// LOGIN USER\r\n\r\n\r\nexport const loginInit = () => {\r\n    return {\r\n        type: actionTypes.LOGIN_USER_INIT\r\n    }\r\n}\r\n\r\nexport const loginSuccess = res => {\r\n    return {\r\n        type: actionTypes.LOGIN_USER_SUCCESS,\r\n        response: res\r\n    }\r\n}\r\n\r\n\r\nexport const loginFailed = error => {\r\n    return {\r\n        type: actionTypes.LOGIN_USER_FAILED,\r\n        error\r\n    }\r\n}\r\n\r\nexport const login = (data) => {\r\n    return async dispatch => {\r\n        dispatch(loginInit());\r\n        try {\r\n            const res = await axios({\r\n                method: 'POST',\r\n                url: `/api/v1/users/login`,\r\n                data\r\n            })\r\n            dispatch(loginSuccess(res.data))\r\n        } catch (err) {\r\n            let error = { ...err }.response ? { ...err }.response.data : err;\r\n            dispatch(loginFailed(error))\r\n        }\r\n    }\r\n}\r\n/////////////////////////////////////////////////////////////////////////\r\n// LOGOUT USER\r\n\r\nexport const logoutInit = () => {\r\n    return {\r\n        type: actionTypes.LOGOUT_USER_INIT\r\n    }\r\n}\r\n\r\nexport const logoutSuccess = () => {\r\n    return {\r\n        type: actionTypes.LOGOUT_USER_SUCCESS,\r\n        user: null\r\n    }\r\n}\r\n\r\n\r\nexport const logoutFailed = err => {\r\n    return {\r\n        type: actionTypes.LOGOUT_USER_FAILED,\r\n        error: err\r\n    }\r\n}\r\n\r\nexport const logout = () => {\r\n    return async dispatch => {\r\n        dispatch(logoutInit());\r\n        try {\r\n            await axios.get(`/api/v1/users/logout`)\r\n            dispatch(logoutSuccess());\r\n        } catch (err) {\r\n            let error = { ...err }.response ? { ...err }.response.data : err\r\n            dispatch(logoutFailed(error))\r\n        }\r\n    }\r\n}\r\n\r\n//////////////////////////////////////////////////////////////////////////////\r\n// UPDATE CURRENT USER DATA\r\n\r\n\r\nexport const updateCurrentUserInit = () => {\r\n    return {\r\n        type: actionTypes.UPDATE_CURRENT_USER_INIT\r\n    }\r\n}\r\n\r\nexport const updateCurrentUserSuccess = user => {\r\n    return {\r\n        type: actionTypes.UPDATE_CURRENT_USER_SUCCESS,\r\n        user\r\n    }\r\n}\r\n\r\n\r\nexport const updateCurrentUserFailed = err => {\r\n    return {\r\n        type: actionTypes.UPDATE_CURRENT_USER_FAILED,\r\n        error: err\r\n    }\r\n}\r\n\r\n\r\nexport const updateCurrentUser = (data) => {\r\n    return async dispatch => {\r\n        dispatch(updateCurrentUserInit());\r\n        try {\r\n            const res = await axios({\r\n                method: 'PATCH',\r\n                url: `/api/v1/users/me`,\r\n                data,\r\n            })\r\n            dispatch(updateCurrentUserSuccess(res.data.user))\r\n        } catch (err) {\r\n            let error = { ...err }.response ? { ...err }.response.data : err\r\n            dispatch(updateCurrentUserFailed(error))\r\n        }\r\n    }\r\n}\r\n\r\n/////////////////////////////////////////////////////////////////////////////////////\r\n// Update current user password\r\n\r\n\r\nexport const updateCurrentUserPasswordInit = () => {\r\n    return {\r\n        type: actionTypes.UPDATE_CURRENT_USER_PASSWORD_INIT\r\n    }\r\n}\r\n\r\nexport const updateCurrentUserPasswordSuccess = user => {\r\n    return {\r\n        type: actionTypes.UPDATE_CURRENT_USER_PASSWORD_SUCCESS,\r\n        user\r\n    }\r\n}\r\n\r\n\r\nexport const updateCurrentUserPasswordFailed = err => {\r\n    return {\r\n        type: actionTypes.UPDATE_CURRENT_USER_PASSWORD_FAILED,\r\n        error: err\r\n    }\r\n}\r\n\r\nexport const updateCurrentUserPassword = (data) => {\r\n    return async dispatch => {\r\n        dispatch(updateCurrentUserPasswordInit());\r\n        try {\r\n            await axios({\r\n                method: 'PATCH',\r\n                url: `/api/v1/users/updateCurrentUserPassword`,\r\n                data,\r\n            })\r\n            dispatch(updateCurrentUserPasswordSuccess())\r\n        } catch (err) {\r\n            let error = { ...err }.response ? { ...err }.response.data : err\r\n            dispatch(updateCurrentUserPasswordFailed(error))\r\n        }\r\n    }\r\n}\r\n\r\n///////////////////////////////////////////////////////////////////////\r\n// delete current user\r\n\r\n\r\nexport const deleteCurrentUserInit = () => {\r\n    return {\r\n        type: actionTypes.DELETE_CURRENT_USER_INIT\r\n    }\r\n}\r\n\r\n\r\nexport const deleteCurrentUserSuccess = () => {\r\n    return {\r\n        type: actionTypes.DELETE_CURRENT_USER_SUCCESS\r\n    }\r\n}\r\n\r\n\r\nexport const deleteCurrentUserFailed = err => {\r\n    return {\r\n        type: actionTypes.DELETE_CURRENT_USER_FAILED,\r\n        error: err\r\n    }\r\n}\r\n\r\nexport const deleteCurrentUser = () => {\r\n    return async dispatch => {\r\n        try {\r\n            await axios({\r\n                method: 'DELETE',\r\n                url: `/api/v1/users/me`,\r\n            })\r\n            dispatch(deleteCurrentUserSuccess());\r\n            dispatch(logout());\r\n        } catch (err) {\r\n            dispatch(deleteCurrentUserFailed(err.response.data))\r\n        }\r\n    }\r\n}\r\n\r\n/////////////////////////////////////////////////////////////////////////\r\n// Send email confirmation\r\n\r\n\r\nexport const sendEmailConfirmationInit = () => {\r\n    return {\r\n        type: actionTypes.SEND_EMAIL_CONFIRMATION_INIT\r\n    }\r\n}\r\n\r\nexport const sendEmailConfirmationSuccess = () => {\r\n    return {\r\n        type: actionTypes.SEND_EMAIL_CONFIRMATION_SUCCESS\r\n    }\r\n}\r\n\r\nexport const sendEmailConfirmationFailed = () => {\r\n    return {\r\n        type: actionTypes.SEND_EMAIL_CONFIRMATION_FAILED\r\n    }\r\n}\r\n\r\nexport const sendEmailConfirmation = (email) => {\r\n    return async dispatch => {\r\n        dispatch(sendEmailConfirmationInit());\r\n        try {\r\n            await axios({\r\n                method: 'POST',\r\n                url: '/api/v1/users/sendUserVerification',\r\n                data: {\r\n                    email\r\n                }\r\n            })\r\n\r\n            dispatch(sendEmailConfirmationSuccess());\r\n        } catch (err) {\r\n            dispatch(sendEmailConfirmationFailed());\r\n        }\r\n    }\r\n}\r\n\r\n////////////////////////////////////////////////////////////////\r\n// verify account \r\n\r\nexport const verifyAccountInit = () => {\r\n    return {\r\n        type: actionTypes.VERIFY_ACCOUNT_INIT\r\n    }\r\n}\r\n\r\nexport const verifyAccountSuccess = () => {\r\n    return {\r\n        type: actionTypes.VERIFY_ACCOUNT_SUCCESS\r\n    }\r\n}\r\n\r\nexport const verifyAccountFailed = () => {\r\n    return {\r\n        type: actionTypes.VERIFY_ACCOUNT_FAILED\r\n    }\r\n}\r\n\r\nexport const verifyAccount = (id) => {\r\n    return async dispatch => {\r\n        dispatch(verifyAccountInit());\r\n        try {\r\n            const res = await axios({\r\n                method: 'GET',\r\n                url: `/api/v1/users/verifyAccount/${id}`,\r\n            })\r\n\r\n            console.log(res);\r\n\r\n            dispatch(verifyAccountSuccess());\r\n        } catch (err) {\r\n            dispatch(verifyAccountFailed());\r\n        }\r\n    }\r\n}","// get user reviews\r\nexport const DISPLAY_USER_REVIEW = 'DISPLAY_USER_REVIEW';\r\n\r\n// Add Ingredient\r\nexport const ADD_INGREDIENT = 'ADD_INGREDIENT';\r\nexport const REMOVE_INGREDIENT = 'REMOVE_INGREDIENT';\r\n\r\n///////////////////////////////////////////////////////////////////////////\r\n// BURGER BUILDER\r\n\r\n// fetch Ingredients\r\nexport const FETCH_INGREDIENTS_INIT = 'FETCH_INGREDIENTS_INIT';\r\nexport const FETCH_INGREDIENTS_SUCCESS = 'FETCH_INGREDIENTS_SUCCESS';\r\nexport const FETCH_INGREDIENTS_FAILED = 'FETCH_INGREDIENTS_FAILED';\r\n\r\n\r\n// fetch burgers\r\n\r\nexport const FETCH_BURGERS_INIT = 'FETCH_BURGERS_INIT';\r\nexport const FETCH_BURGERS_SUCCESS = 'FETCH_BURGERS_SUCCESS';\r\nexport const FETCH_BURGERS_FAILED = 'FETCH_BURGERS_FAILED';\r\n\r\n\r\n// Clear ingredient values after adding burger to cart\r\nexport const CLEAR_INGREDIENT_VALUES = 'CLEAR_INGREDIENT_VALUES';\r\n\r\n// Clear total price after adding burger to cart\r\nexport const CLEAR_TOTAL_PRICE = 'CLEAR_TOTAL_PRICE';\r\n\r\n///////////////////////////////////////////////////////////////////////////////////\r\n// CART action\r\n\r\n// Increment item in cart\r\nexport const INCREMENT_ITEM = 'INCREMENT_ITEM';\r\n\r\n// decrement item in cart\r\nexport const DECREMENT_ITEM = 'DECREMENT_ITEM';\r\n\r\n// delete all burgers in cart\r\nexport const REMOVE_ALL_ITEMS = 'REMOVE_ALL_ITEMS';\r\n\r\n// Push a burger to cart\r\nexport const ADD_BURGERS_TO_CART = 'ADD_BURGERS_TO_CART';\r\n///////////////////////////////////////////////////////////////////////////////////\r\n// AUTH\r\n// Registering Users\r\nexport const REGISTER_USER_INIT = 'REGISTER_USER_INIT';\r\nexport const REGISTER_USER_SUCCESS = 'REGISTER_USER_SUCCESS';\r\nexport const REGISTER_USER_FAILED = 'REGISTER_USER_FAILED';\r\n\r\n// Logging in Users\r\nexport const LOGIN_USER_INIT = 'LOGIN_USER_INIT';\r\nexport const LOGIN_USER_SUCCESS = 'LOGIN_USER_SUCCESS';\r\nexport const LOGIN_USER_FAILED = 'LOGIN_USER_FAILED';\r\n\r\n// Check for logged in user\r\nexport const CHECK_AUTH_STATE_INIT = 'CHECK_AUTH_STATE_INIT';\r\nexport const CHECK_AUTH_STATE_SUCCESS = 'CHECK_AUTH_STATE_SUCCESS';\r\nexport const CHECK_AUTH_STATE_FAILED = 'CHECK_AUTH_STATE_FAILED';\r\n\r\n// Logout a user\r\nexport const LOGOUT_USER_INIT = 'LOGOUT_USER_INIT';\r\nexport const LOGOUT_USER_SUCCESS = 'LOGOUT_USER_SUCCESS';\r\nexport const LOGOUT_USER_FAILED = 'LOGOUT_USER_FAILED';\r\n\r\n// send email confirmation\r\nexport const SEND_EMAIL_CONFIRMATION_INIT = 'SEND_EMAIL_CONFIRMATION_INIT';\r\nexport const SEND_EMAIL_CONFIRMATION_SUCCESS = 'SEND_EMAIL_CONFIRMATION_SUCCESS';\r\nexport const SEND_EMAIL_CONFIRMATION_FAILED = 'SEND_EMAIL_CONFIRMATION_FAILED';\r\n\r\n// Verifying Account\r\nexport const VERIFY_ACCOUNT_INIT = 'VERIFY_ACCOUNT_INIT';\r\nexport const VERIFY_ACCOUNT_SUCCESS = 'VERIFY_ACCOUNT_SUCCESS';\r\nexport const VERIFY_ACCOUNT_FAILED = 'VERIFY_ACCOUNT_FAILED';\r\n\r\n//////////////////////////////////////////////////////////////////////////////////////\r\n// USERS\r\n\r\n// get all users\r\nexport const GET_ALL_USERS_INIT = 'GET_ALL_USERS_INIT';\r\nexport const GET_ALL_USERS_SUCCESS = 'GET_ALL_USERS_SUCCESS';\r\nexport const GET_ALL_USERS_FAILED = 'GET_ALL_USERS_FAILED';\r\n\r\n// update role of a user\r\nexport const UPDATE_ONE_USER_INIT = 'UPDATE_ONE_USER_INIT';\r\nexport const UPDATE_ONE_USER_FAILED = 'UPDATE_ONE_USER_FAILED'\r\n\r\n/////////////////////////////////////////////////////////////////////////////////////\r\n// CURRENT USER\r\n// get all orders of a user\r\nexport const GET_ALL_USER_ORDERS_INIT = 'GET_ALL_USER_ORDERS_INIT';\r\nexport const GET_ALL_USER_ORDERS_SUCCESS = 'GET_ALL_USER_ORDERS_SUCCESS';\r\nexport const GET_ALL_USER_ORDERS_FAILED = 'GET_ALL_USER_ORDERS_FAILED';\r\n\r\n// update current user data\r\nexport const UPDATE_CURRENT_USER_INIT = 'UPDATE_CURRENT_USER_INIT';\r\nexport const UPDATE_CURRENT_USER_SUCCESS = 'UPDATE_CURRENT_USER_SUCCESS';\r\nexport const UPDATE_CURRENT_USER_FAILED = 'UPDATE_CURRENT_USER_FAILED';\r\n\r\n// update current user password\r\nexport const UPDATE_CURRENT_USER_PASSWORD_INIT = 'UPDATE_CURRENT_USER_PASSWORD_INIT';\r\nexport const UPDATE_CURRENT_USER_PASSWORD_SUCCESS = 'UPDATE_CURRENT_USER_PASSWORD_SUCCESS';\r\nexport const UPDATE_CURRENT_USER_PASSWORD_FAILED = 'UPDATE_CURRENT_USER_PASSWORD_FAILED';\r\n\r\n//delete current user\r\nexport const DELETE_CURRENT_USER_INIT = 'DELETE_CURRENT_USER_INIT';\r\nexport const DELETE_CURRENT_USER_SUCCESS = 'DELETE_CURRENT_USER_SUCCESS';\r\nexport const DELETE_CURRENT_USER_FAILED = 'DELETE_CURRENT_USER_FAILED';\r\n\r\n\r\n// delete a user\r\nexport const DELETE_ONE_USER_INIT = 'DELETE_ONE_USER_INIT';\r\nexport const DELETE_ONE_USER_FAILED = 'DELETE_ONE_USER_FAILED';\r\n/////////////////////////////////////////////////////////////////////////////////////////////////\r\n// ORDERS\r\n// clear cart \r\nexport const CLEAR_CART = 'CLEAR_CART';\r\n\r\n// place a new order\r\nexport const CREATE_ORDER_INIT = 'CREATE_ORDER_INIT';\r\nexport const CREATE_ORDER_SUCCESS = 'CREATE_ORDER_SUCCESS';\r\nexport const CREATE_ORDER_FAILED = 'CREATE_ORDER_FAILED';\r\n\r\n// get all orders of all users\r\nexport const GET_ALL_ORDERS_INIT = 'GET_ALL_ORDERS_INIT';\r\nexport const GET_ALL_ORDERS_SUCCESS = 'GET_ALL_ORDERS_SUCCESS';\r\nexport const GET_ALL_ORDERS_FAILED = 'GET_ALL_ORDERS_FAILED';\r\n\r\n// Update Order Status ADMIN\r\n\r\nexport const UPDATE_ORDER_ADMIN_STATUS_INIT = 'UPDATE_ORDER_ADMIN_STATUS_INIT'\r\nexport const UPDATE_ORDER_ADMIN_STATUS_SUCCESS = 'UPDATE_ORDER_ADMIN_STATUS_SUCCESS'\r\nexport const UPDATE_ORDER_ADMIN_STATUS_FAILED = 'UPDATE_ORDER_ADMIN_STATUS_FAILED'\r\n\r\n\r\n// Get Single Order\r\n\r\nexport const GET_ORDER_INIT = 'GET_ORDER_INIT'\r\nexport const GET_ORDER_SUCCESS = 'GET_ORDER_SUCCESS'\r\nexport const GET_ORDER_FAILED = 'GET_ORDER_FAILED'\r\n\r\n////////////////////////////////////////////////////////////////////////////////////\r\n// UPDATE MENU\r\n\r\n// ingredients while updating or creating a burger\r\nexport const UPDATE_MENU_REMOVE_INGREDIENT = 'UPDATE_MENU_REMOVE_INGREDIENT';\r\nexport const UPDATE_MENU_ADD_INGREDIENT = 'UPDATE_MENU_ADD_INGREDIENT';\r\n\r\n// set ingredients while updating or creating a burger\r\nexport const SET_MENU_INGREDIENTS = 'SET_MENU_INGREDIENTS';\r\n\r\n// update a burger\r\nexport const UPDATE_BURGER_INIT = 'UPDATE_BURGER_INIT';\r\nexport const UPDATE_BURGER_SUCCESS = 'UPDATE_BURGER_SUCCESS';\r\nexport const UPDATE_BURGER_FAILED = 'UPDATE_BURGER_FAILED';\r\n\r\n// create a new burger\r\nexport const CREATE_BURGER_INIT = 'CREATE_BURGER_INIT';\r\nexport const CREATE_BURGER_SUCCESS = 'CREATE_BURGER_SUCCESS';\r\nexport const CREATE_BURGER_FAILED = 'CREATE_BURGER_FAILED';\r\n\r\n\r\n// delete a burger\r\nexport const DELETE_BURGER_INIT = 'DELETE_BURGER_INIT';\r\nexport const DELETE_BURGER_SUCCESS = 'DELETE_BURGER_SUCCESS';\r\nexport const DELETE_BURGER_FAILED = 'DELTE_BURGER_FAILED';\r\n\r\n///////////////////////////////////////////////////////////////////////////////////\r\n// INGREDIENTS\r\n\r\n// get ingredients\r\n\r\nexport const GET_INGREDIENTS_INIT = 'GET_INGREDIENTS_INIT';\r\nexport const GET_INGREDIENTS_SUCCESS = 'GET_INGREDIENTS_SUCCESS';\r\nexport const GET_INGREDIENTS_FAILED = 'GET_INGREDIENTS_FAILED';\r\n\r\n\r\n// create ingredients\r\n\r\nexport const CREATE_INGREDIENTS_INIT = 'CREATE_INGREDIENTS_INIT'\r\nexport const CREATE_INGREDIENTS_SUCCESS = 'CREATE_INGREDIENTS_SUCCESS'\r\nexport const CREATE_INGREDIENTS_FAILED = 'CREATE_INGREDIENTS_FAILED'\r\n\r\n// update ingredients\r\n\r\nexport const UPDATE_INGREDIENT_INIT = 'UPDATE_INGREDIENT_INIT'\r\nexport const UPDATE_INGREDIENT_SUCCESS = 'UPDATE_INGREDIENT_SUCCESS'\r\nexport const UPDATE_INGREDIENT_FAILED = 'UPDATE_INGREDIENT_FAILED'\r\n\r\n\r\n// get ingredient\r\n\r\nexport const GET_INGREDIENT_INIT = 'GET_INGREDIENT_INIT';\r\nexport const GET_INGREDIENT_SUCCESS = 'GET_INGREDIENT_SUCCESS';\r\nexport const GET_INGREDIENT_FAILED = 'GET_INGREDIENT_FAILED';\r\n\r\n// delete Ingredient\r\n\r\nexport const DELETE_INGREDIENT_INIT = 'DELETE_INGREDIENT_INIT'\r\nexport const DELETE_INGREDIENT_FAILED = 'DELETE_INGREDIENT_FAILED'\r\nexport const DELETE_INGREDIENT_SUCCESS = 'DELETE_INGREDIENT_SUCCESS'","import React from 'react';\r\n\r\nconst Loader = () => {\r\n    return <div className=\"loader\"\r\n    >Loading...</div>\r\n}\r\n\r\nexport default Loader\r\n","import React from 'react'\r\n\r\nconst Input = props => {\r\n    if (props.inputtype === 'input') {\r\n        let required = props.required === false ? false : true;\r\n        return (\r\n            <div className={`form__group `}>\r\n                <label className=\"form__label\">{props.label}</label>\r\n                <input\r\n                    type={props.type}\r\n                    name={props.name}\r\n                    id={props.name}\r\n                    placeholder={props.placeholder}\r\n                    className={`form__${props.inputtype} ${props.className}`}\r\n                    onChange={props.onChange}\r\n                    minLength={props.minLength}\r\n                    value={props.value}\r\n                    required={required}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n\r\n    if (props.inputtype === 'submit') {\r\n        let markup = <input type=\"submit\"\r\n            value={props.value}\r\n            className={`btn btn__${props.variant} ${props.className}`}\r\n            {...props}\r\n        />\r\n\r\n        return (\r\n            <div className={`form__group ${props.formGroupClass}`}>\r\n                {markup}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Input\r\n","export const onChangeFormInput = (e, state) => {\r\n    return {\r\n        ...state,\r\n        formInput: {\r\n            ...state.formInput,\r\n            [e.target.name]: e.target.value\r\n        }\r\n    }\r\n}\r\n\r\nexport const clearFields = (state) => {\r\n    let stateCopy = { ...state.formInput };\r\n    let formInput = {};\r\n    Object.keys(stateCopy).map(el => {\r\n        return formInput[el] = ''\r\n    })\r\n    return formInput;\r\n}","import React from 'react'\r\n\r\nconst backDrop = (props) => {\r\n    if (props.show) return <div onClick={props.close} className=\"backdrop\"></div>\r\n    else return null;\r\n};\r\n\r\nexport default backDrop;\r\n","module.exports = __webpack_public_path__ + \"static/media/user-1.44f16efe.jpg\";","module.exports = __webpack_public_path__ + \"static/media/user-2.7f8d1a3b.jpg\";","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"g\", {\n  id: \"Burger_1_\"\n}, /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"path\", {\n  d: \"m407 512h-302c-57.891 0-105-47.109-105-105 0-8.291 6.709-15 15-15h482c8.291 0 15 6.709 15 15 0 57.891-47.109 105-105 105z\"\n})), /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"path\", {\n  d: \"m256 0c-140.61 0-256 87.48-256 195 0 8.291 6.709 15 15 15h482c8.291 0 15-6.709 15-15 0-107.52-115.39-195-256-195zm-110.395 115.605-30 30c-5.859 5.859-15.351 5.86-21.211 0-5.859-5.859-5.859-15.352 0-21.211l30-30c5.859-5.859 15.352-5.859 21.211 0s5.86 15.352 0 21.211zm91 0-30 30c-5.859 5.859-15.351 5.86-21.211 0-5.859-5.859-5.859-15.352 0-21.211l30-30c5.859-5.859 15.352-5.859 21.211 0s5.86 15.352 0 21.211zm90 0-30 30c-5.859 5.859-15.351 5.86-21.211 0-5.859-5.859-5.859-15.352 0-21.211l30-30c5.859-5.859 15.352-5.859 21.211 0s5.86 15.352 0 21.211zm82.666 0-30 30c-5.859 5.859-15.351 5.86-21.211 0-5.859-5.859-5.859-15.352 0-21.211l30-30c5.859-5.859 15.352-5.859 21.211 0s5.859 15.352 0 21.211z\"\n}))), /*#__PURE__*/React.createElement(\"g\", {\n  id: \"Burger_4_\"\n}, /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"path\", {\n  d: \"m15 271c7.2 0 13.5.899 18.9 2.399-2.117 6.82-2.71 8.859-3.9 30-3.9-1.5-8.699-2.399-15-2.399-8.401 0-15-6.601-15-15 0-8.401 6.599-15 15-15z\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"m512 286c0 8.399-6.599 15-15 15-6.301 0-11.1.899-15 2.399-.324-5.758.288-16.508-3.9-30 5.4-1.5 11.7-2.399 18.9-2.399 8.401 0 15 6.599 15 15z\"\n}))), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"m33.9 273.399c13.5 3.301 22.5 9.901 30 15.601 9.3 6.899 16.199 12 31.199 12s21.601-5.101 30.901-12.001c10.8-8.101 25-17.999 49.9-17.999 25.199 0 38.399 9.899 49.199 17.999 9.302 6.9 15.901 12.001 30.901 12.001s21.599-5.101 30.901-12.001c10.8-8.101 24-17.999 49.199-17.999 24.901 0 39.101 9.899 49.9 17.999 9.3 6.899 15.901 12.001 30.901 12.001s21.899-5.101 31.199-12.001c7.5-5.7 16.5-12.299 30-15.601-3.164-11.788-8.436-22.659-15.216-32.399h-413.768c-6.78 9.74-12.052 20.611-15.216 32.4z\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"m463.093 361c11.506-16.421 18.455-36.237 18.907-57.601-6 2.1-10.499 5.7-15.901 9.6-10.8 8.101-24 18.001-49.199 18.001-24.9 0-38.1-9.901-48.9-18.001-9.3-6.9-16.901-11.999-31.901-11.999s-21.899 5.099-31.199 11.999c-10.499 8.101-24 18.001-48.9 18.001s-38.401-9.901-48.9-18.001c-9.3-6.9-16.199-11.999-31.199-11.999s-22.601 5.099-31.901 11.999c-10.8 8.1-24 18.001-48.901 18.001-25.199 0-38.399-9.901-49.199-18.001-5.402-3.9-9.901-7.5-15.901-9.6.452 21.365 7.401 41.18 18.907 57.601z\"\n}));\n\nvar SvgBurger = function SvgBurger(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    id: \"Capa_1\",\n    enableBackground: \"new 0 0 512 512\",\n    height: 512,\n    viewBox: \"0 0 512 512\",\n    width: 512,\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _ref2);\n};\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgBurger, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/burger.0f48b978.svg\";\nexport { ForwardRef as ReactComponent };","import React from 'react';\r\nimport { ReactComponent as Menu } from '../../../assets/icons/burger.svg';\r\n\r\nconst HamburgerMenu = props => {\r\n    return (\r\n        <Menu className={props.className} />\r\n    )\r\n}\r\n\r\nexport default HamburgerMenu;\r\n","import React, { Component, Suspense, lazy } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Route, Switch } from 'react-router-dom';\r\n\r\nimport Backdrop from '../../Shared/Components/BackDrop/BackDrop';\r\nimport HamburgerMenu from '../../Shared/Icons/HamburgerMenu';\r\n\r\nconst Sidebar = lazy(() => import('./components/Sidebar'))\r\n\r\n// USER ONLY\r\nconst CurrentUserOrders = lazy(() => import('./User/CurrentUserOrders'));\r\nconst Profile = lazy(() => import('./User/Profile'));\r\n\r\n// ADMIN ONLY\r\nconst Users = lazy(() => import('./Admin/Users/Users'))\r\nconst UserOrders = lazy(() => import('./Admin/Orders/UserOrders'))\r\nconst UpdateBurgerDetail = lazy(() => import('./Admin/Menu/UpdateBurgerDetail'));\r\nconst UpdateBurgerList = lazy(() => import('./Admin/Menu/UpdateBurgerList'));\r\nconst CreateBurger = lazy(() => import('./Admin/Menu/CreateBurger'));\r\nconst OrderDetail = lazy(() => import('./components/OrderDetail'));\r\n\r\n\r\nclass Layout extends Component {\r\n    state = {\r\n        showSideBar: false,\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.user && this.props.user.role === 'admin') {\r\n            return this.props.history.push('/dashboard/manage-orders')\r\n        }\r\n\r\n        if (this.props.user && this.props.user.role === 'customer') {\r\n            return this.props.history.push('/dashboard/my-orders')\r\n        }\r\n    }\r\n\r\n    sidebarShowHandler = () => {\r\n        this.setState({ showSideBar: true })\r\n    }\r\n\r\n    sidebarCloseHandler = () => {\r\n        this.setState({ showSideBar: false })\r\n    }\r\n\r\n    render() {\r\n        let showSideBar = null;\r\n        if (this.state.showSideBar) showSideBar = 'dashboard__sidebar-show'\r\n\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <div className=\"dashboard\">\r\n                    <Suspense\r\n                    >\r\n                        <button onClick={this.sidebarShowHandler} className=\"dashboard__sidebar-btn\">\r\n                            <HamburgerMenu className=\"icon-hamburger\" />\r\n                        </button>\r\n                        {this.props.user && <div className={`sidebar dashboard__sidebar ${showSideBar}`} >\r\n                            <Sidebar {...this.props} closeSidebar={this.sidebarCloseHandler} />\r\n                        </div>}\r\n                        <Backdrop show={this.state.showSideBar} close={this.sidebarCloseHandler} user={this.props.user} />\r\n                        <Switch>\r\n                            <Route path={`${this.props.match.url}/manage-profile`} exact component={Profile} {...this.props} />\r\n                            <Route path={`${this.props.match.url}/manage-users`} exact component={Users} {...this.props} />\r\n\r\n                            <Route path={`${this.props.match.url}/manage-orders`} exact component={UserOrders} {...this.props} />\r\n                            <Route path={`${this.props.match.url}/manage-orders/:id`} component={OrderDetail} {...this.props} />\r\n\r\n                            <Route path={`${this.props.match.url}/manage-menu`} exact component={UpdateBurgerList} {...this.props} />\r\n                            <Route path={`${this.props.match.url}/manage-menu/new`} exact component={CreateBurger} {...this.props} />\r\n                            <Route path={`${this.props.match.url}/manage-menu/:id`} component={UpdateBurgerDetail} {...this.props} />\r\n\r\n                            <Route path={`${this.props.match.url}/my-orders`} exact component={CurrentUserOrders} {...this.props} />\r\n                            <Route path={`${this.props.match.url}/my-orders/:id`} component={OrderDetail} {...this.props} />\r\n                        </Switch>\r\n                    </Suspense>\r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.auth.user,\r\n\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Layout);\r\n","import React from 'react'\r\n\r\nconst Error = props => {\r\n    return (\r\n        <div className=\"error\">\r\n            <h2 className=\"error__text\">\r\n                Something Went Wrong. Please Try again Later\r\n            </h2>\r\n            <button\r\n                onClick={props.history.goBack}\r\n                className=\"btn btn__tertiary\">Go Back</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Error\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Loader from '../../Shared/Components/Loader/Loader';\r\n\r\nimport * as authActions from '../../Store/actions/auth';\r\n\r\nclass Logout extends Component {\r\n    componentDidMount() {\r\n        if (!this.props.user) {\r\n            return this.props.history.replace('/login');\r\n        }\r\n        this.props.logout();\r\n        this.props.history.replace('/')\r\n    }\r\n\r\n    render() {\r\n        return (this.props.logoutInit) && <Loader className=\"u-flex-center u-vh-100\" />\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        logoutInit: state.auth.logoutInit,\r\n        user: state.auth.user\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        logout: () => dispatch(authActions.logout())\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Logout);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Input from './../../Shared/Components/Form/Input';\r\nimport Loader from './../../Shared/Components/Loader/Loader';\r\n\r\nimport { onChangeFormInput } from '../../Shared/Utils/formInput';\r\n\r\nimport * as authActions from './../../Store/actions/auth';\r\n\r\nclass VerifyEmail extends Component {\r\n    state = {\r\n        formInput: {\r\n            email: ''\r\n        },\r\n        error: null\r\n    }\r\n\r\n    onChangeHandler = e => {\r\n        let formInput = onChangeFormInput(e, { ...this.state })\r\n        this.setState({ ...formInput })\r\n    }\r\n\r\n    onSubmitHandler = async e => {\r\n        e.preventDefault();\r\n        await this.props.sendEmailConfirmation(this.state.formInput.email);\r\n\r\n        if (this.props.sendEmailStatus === 'success') {\r\n            return this.props.history.replace('/confirm-email-message')\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        if (this.props.sendEmailInit) {\r\n            return (\r\n                <div className=\"u-flex-center u-vh-100\">\r\n                    <Loader />\r\n                </div>\r\n            )\r\n        }\r\n\r\n\r\n        return (\r\n            <div className=\"send-email-confirm\">\r\n                <form\r\n                    className=\"send-email-confirm__form\"\r\n                    autoComplete=\"off\"\r\n                    onSubmit={this.onSubmitHandler}\r\n                >\r\n                    <div className=\"form__group\">\r\n                        <h2 className=\"heading-1 u-text-primary u-ftwt-400\">Resend Email Confirmation</h2>\r\n                    </div>\r\n\r\n                    <Input\r\n                        name=\"email\"\r\n                        inputtype='input'\r\n                        type='email'\r\n                        label='Email'\r\n                        onChange={this.onChangeHandler}\r\n                        value={this.state.formInput.email} />\r\n\r\n                    <Input inputtype='submit' value={'Submit'} variant=\"tertiary\" />\r\n                </form>\r\n                <br />\r\n                {this.props.sendEmailStatus === 'failed' && <p className=\"send-email-confirm__error u-text-danger\">\r\n                    Invalid Email Address\r\n                    </p>}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        sendEmailInit: state.auth.sendEmailInit,\r\n        sendEmailStatus: state.auth.sendEmailStatus\r\n    }\r\n}\r\n\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        sendEmailConfirmation: (email) => dispatch(authActions.sendEmailConfirmation(email))\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(VerifyEmail);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport * as authActions from './../../Store/actions/auth';\r\n\r\nclass VerifyAccount extends Component {\r\n\r\n    componentDidMount() {\r\n        this.props.verfiyAccount(this.props.match.params.id);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"verified__account\">\r\n                <h1 className=\"verified__account-text\">Your Account is Verfied</h1>\r\n                <button className=\"btn btn__tertiary\">\r\n                    Click here to login\r\n                </button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        accountVerifiedInit: state.auth.accountVerifiedInit,\r\n        accountVerifiedStatus: state.auth.accountVerifiedStatus\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        verfiyAccount: (id) => dispatch(authActions.verifyAccount(id))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(VerifyAccount);\r\n","import React, { Component, Suspense, lazy } from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nimport Dashboard from '../Pages/DashBoard/Layout';\r\nimport Error from '../Pages/Error/Error';\r\nimport Logout from '../Pages/Logout/Logout';\r\nimport Loader from '../Shared/Components/Loader/Loader';\r\nimport VerifyEmail from '../Pages/Login/VerifyEmail';\r\nimport VerifyAccount from '../Pages/Login/VerifyAccount';\r\n// import ConfirmRegistration from '../Pages/Register/ConfirmRegistration';\r\n\r\nconst Menu = lazy(() => import('../Pages/Menu/Menu'));\r\nconst Cart = lazy(() => import('../Pages/Cart/Cart'));\r\nconst CustomBurger = lazy(() => import('../Pages/CustomBurger/CustomBurger'));\r\nconst About = lazy(() => import('../Pages/About/About'));\r\nconst Home = lazy(() => import('../Pages/Home/Home'));\r\nconst Register = lazy(() => import('../Pages/Register/Register'));\r\nconst Login = lazy(() => import('../Pages/Login/Login'));\r\nconst ConfirmRegistration = lazy(() => import('../Pages/Register/ConfirmRegistration'))\r\n\r\nclass Body extends Component {\r\n    render() {\r\n        const loading = <div className=\"u-flex-center u-vh-100 u-bg-white\">\r\n            <Loader />\r\n        </div>\r\n\r\n        return (\r\n            <Suspense fallback={loading}>\r\n                <Switch>\r\n                    <Route path=\"/\" exact component={Home} {...this.props} />\r\n                    <Route path=\"/build-your-burger\" component={CustomBurger} {...this.props} />\r\n                    <Route path=\"/about\" exact component={About} {...this.props} />\r\n                    <Route path=\"/cart\" component={Cart} {...this.props} />\r\n                    <Route path=\"/menu\" exact component={Menu} {...this.props} />\r\n                    <Route path=\"/dashboard\" {...this.props} component={Dashboard} />\r\n                    <Route path=\"/logout\" component={Logout} {...this.props} />\r\n                    <Route path=\"/send-confirm-email\" component={VerifyEmail} {...this.props} />\r\n                    <Route path=\"/verified/:id\" component={VerifyAccount} {...this.props} />\r\n                    <Route path=\"/confirm-email-message\" component={ConfirmRegistration} {...this.props} />\r\n                    <Route path=\"/something-went-wrong\" component={Error} {...this.props} />\r\n                    <Route path=\"/register\" exact component={Register} {...this.props} />\r\n                    <Route path=\"/login\" component={Login} {...this.props} />\r\n                </Switch>\r\n            </Suspense>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.auth.user\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Body);","import React, { Suspense, lazy } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\nimport Body from './Layout/Body';\r\nimport { Component } from 'react';\r\n\r\nimport * as authActions from './Store/actions/auth';\r\nimport Loader from './Shared/Components/Loader/Loader';\r\n\r\nconst Header = lazy(() => import('./Layout/Header'));\r\nconst Footer = lazy(() => import('./Layout/Footer'));\r\n\r\nclass App extends Component {\r\n\r\n    async componentDidMount() {\r\n        await this.props.checkAuthState();\r\n    }\r\n\r\n    render() {\r\n        let loading = <div className=\"u-flex-center u-vh-100 u-bg-white\">\r\n            <Loader />\r\n        </div>\r\n\r\n        return (\r\n            <BrowserRouter>\r\n                <Suspense fallback={loading}>\r\n                    <Header />\r\n                    <Body />\r\n                    <Footer />\r\n                </Suspense>\r\n            </BrowserRouter >\r\n        )\r\n    }\r\n};\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.auth.user\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        checkAuthState: () => dispatch(authActions.checkAuth()),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n","import * as actionTypes from '../actions/actions';\r\n\r\nconst initialState = {\r\n    user: null,\r\n    checkAuthInit: false,\r\n\r\n    registerInit: false,\r\n    registerStatus: null,\r\n\r\n    loginStatus: null,\r\n    loginInit: false,\r\n\r\n    logoutInit: false,\r\n\r\n    updateUserDataInit: false,\r\n    updateUserDataStatus: null,\r\n\r\n    updateUserPasswordInit: false,\r\n    updateUserPasswordStatus: null,\r\n\r\n    deleteUserInit: false,\r\n    deleteUserStatus: null,\r\n\r\n    sendEmailInit: false,\r\n    sendEmailStatus: null,\r\n\r\n    accountVerifiedInit: false,\r\n    accountVerifiedStatus: null\r\n}\r\n\r\n//////////////////////////////////////////////////////\r\n\r\n\r\nconst checkAuthStateInit = (state, action) => {\r\n    return {\r\n        ...state,\r\n        checkAuthInit: true\r\n    }\r\n}\r\n\r\n\r\nconst checkAuthSuccess = (state, action) => {\r\n    let userPhoto = `/uploads/users/${action.user.photo}`\r\n    return {\r\n        ...state,\r\n        user: { ...action.user, photo: userPhoto },\r\n        checkAuthInit: false,\r\n    }\r\n}\r\n\r\nconst checkAuthStateFailed = (state, action) => {\r\n    return {\r\n        ...state,\r\n        user: null,\r\n        checkAuthInit: false\r\n    }\r\n}\r\n\r\n///////////////////////////////////////////////////\r\n\r\nconst registerInit = (state, action) => {\r\n    return {\r\n        ...state,\r\n        registerStatus: null,\r\n        registerInit: true\r\n    }\r\n}\r\n\r\nconst registerSuccess = (state, action) => {\r\n    return {\r\n        ...state,\r\n        registerInit: false,\r\n        registerStatus: action.response\r\n    }\r\n}\r\n\r\nconst registerFailed = (state, action) => {\r\n    return {\r\n        ...state,\r\n        registerInit: false,\r\n        registerStatus: action.error\r\n    }\r\n}\r\n\r\n\r\n///////////////////////////////////////////////////////////////////\r\n\r\n\r\nconst loginInit = (state, action) => {\r\n    return {\r\n        ...state,\r\n        loginStatus: null,\r\n        loginInit: true\r\n    }\r\n}\r\n\r\nconst loginSuccess = (state, action) => {\r\n    let userPhoto = `/uploads/users/${action.response.user.photo}`\r\n    return {\r\n        ...state,\r\n        loginInit: false,\r\n        loginStatus: action.response.status,\r\n        user: { ...action.response.user, photo: userPhoto }\r\n    }\r\n}\r\n\r\nconst loginFailed = (state, action) => {\r\n    return {\r\n        ...state,\r\n        loginInit: false,\r\n        loginStatus: action.error,\r\n        user: null\r\n    }\r\n}\r\n\r\n/////////////////////////////////////////////////////////////\r\nconst logoutInit = (state, action) => {\r\n    return {\r\n        ...state,\r\n        logoutInit: true\r\n    }\r\n}\r\n\r\nconst logoutSuccess = (state, action) => {\r\n    return {\r\n        ...state,\r\n        logoutInit: false,\r\n        user: null\r\n    }\r\n}\r\n\r\nconst logoutFailed = (state, action) => {\r\n    return {\r\n        ...state,\r\n        logoutInit: false,\r\n    }\r\n}\r\n\r\n//////////////////////////////////////////////////////////////////\r\n\r\nconst updateUserDataInit = (state, action) => {\r\n    return {\r\n        ...state,\r\n        updateUserDataInit: true\r\n    }\r\n}\r\n\r\n\r\nconst updateUserDataSuccess = (state, action) => {\r\n    let userPhoto = `/uploads/users/${action.user.photo}`\r\n    return {\r\n        ...state,\r\n        user: { ...action.user, photo: userPhoto },\r\n        updateUserDataStatus: 'success',\r\n        updateUserDataInit: false\r\n    }\r\n}\r\n\r\nconst updateUserDataFailed = (state, action) => {\r\n    return {\r\n        ...state,\r\n        updateUserDataStatus: action.error,\r\n        updateUserDataInit: false\r\n    }\r\n}\r\n\r\n\r\n//////////////////////////////////////////////////////////////////\r\n\r\nconst updateUserPasswordInit = (state, action) => {\r\n    return {\r\n        ...state,\r\n        updateUserPasswordInit: true\r\n    }\r\n}\r\n\r\n\r\nconst updateUserPasswordSuccess = (state, action) => {\r\n    return {\r\n        ...state,\r\n        updateUserPasswordStatus: 'success',\r\n        updateUserPasswordInit: false\r\n    }\r\n}\r\n\r\nconst updateUserPasswordFailed = (state, action) => {\r\n    return {\r\n        ...state,\r\n        updateUserPasswordStatus: action.error,\r\n        updateUserPasswordInit: false\r\n    }\r\n}\r\n\r\n\r\n///////////////////////////////////////////////////////////////////////////\r\n\r\nconst deleteCurrentUserInit = (state, action) => {\r\n    return {\r\n        ...state,\r\n        deleteUserInit: true,\r\n        deleteUserStatus: null\r\n    }\r\n}\r\n\r\nconst deleteCurrentUserSuccess = (state, action) => {\r\n    return {\r\n        ...state,\r\n        deleteUserInit: false,\r\n        deleteUserStatus: 'success'\r\n    }\r\n}\r\n\r\n\r\nconst deleteCurrentUserFailed = (state, action) => {\r\n    return {\r\n        ...state,\r\n        deleteUserInit: false,\r\n        deleteUserStatus: action.error\r\n    }\r\n}\r\n\r\n////////////////////////////////////////////////////////////////////////////////////\r\n\r\nconst sendEmailConfirmationInit = (state, action) => {\r\n    return {\r\n        ...state,\r\n        sendEmailInit: true,\r\n        sendEmailStatus: null\r\n    }\r\n}\r\n\r\nconst sendEmailConfirmationSuccess = (state, action) => {\r\n    return {\r\n        ...state,\r\n        sendEmailInit: false,\r\n        sendEmailStatus: 'success'\r\n    }\r\n}\r\n\r\n\r\nconst sendEmailConfirmationFailed = (state, action) => {\r\n    return {\r\n        ...state,\r\n        sendEmailInit: false,\r\n        sendEmailStatus: 'failed'\r\n    }\r\n}\r\n\r\n////////////////////////////////////////////////////////////////////////////////////\r\n\r\n\r\nconst accountVerifiedInit = (state, action) => {\r\n    return {\r\n        ...state,\r\n        accountVerifiedInit: true,\r\n        accountVerifiedStatus: null\r\n    }\r\n}\r\n\r\nconst accountVerifiedSuccess = (state, action) => {\r\n    return {\r\n        ...state,\r\n        accountVerifiedInit: false,\r\n        accountVerifiedStatus: 'success'\r\n    }\r\n}\r\n\r\n\r\nconst accountVerifiedFailed = (state, action) => {\r\n    return {\r\n        ...state,\r\n        accountVerifiedInit: false,\r\n        accountVerifiedStatus: 'failed'\r\n    }\r\n}\r\n\r\n////////////////////////////////////////////////////////////////////////////////////\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.CHECK_AUTH_STATE_SUCCESS: return checkAuthSuccess(state, action);\r\n        case actionTypes.CHECK_AUTH_STATE_INIT: return checkAuthStateInit(state, action)\r\n        case actionTypes.CHECK_AUTH_STATE_FAILED: return checkAuthStateFailed(state, action)\r\n\r\n        case actionTypes.REGISTER_USER_INIT: return registerInit(state, action);\r\n        case actionTypes.REGISTER_USER_SUCCESS: return registerSuccess(state, action);\r\n        case actionTypes.REGISTER_USER_FAILED: return registerFailed(state, action);\r\n\r\n        case actionTypes.LOGIN_USER_INIT: return loginInit(state, action);\r\n        case actionTypes.LOGIN_USER_SUCCESS: return loginSuccess(state, action);\r\n        case actionTypes.LOGIN_USER_FAILED: return loginFailed(state, action);\r\n\r\n        case actionTypes.LOGOUT_USER_INIT: return logoutInit(state, action);\r\n        case actionTypes.LOGOUT_USER_SUCCESS: return logoutSuccess(state, action);\r\n        case actionTypes.LOGOUT_USER_FAILED: return logoutFailed(state, action);\r\n\r\n        case actionTypes.UPDATE_CURRENT_USER_INIT: return updateUserDataInit(state, action);\r\n        case actionTypes.UPDATE_CURRENT_USER_SUCCESS: return updateUserDataSuccess(state, action);\r\n        case actionTypes.UPDATE_CURRENT_USER_FAILED: return updateUserDataFailed(state, action);\r\n\r\n        case actionTypes.UPDATE_CURRENT_USER_PASSWORD_INIT: return updateUserPasswordInit(state, action);\r\n        case actionTypes.UPDATE_CURRENT_USER_PASSWORD_SUCCESS: return updateUserPasswordSuccess(state, action);\r\n        case actionTypes.UPDATE_CURRENT_USER_PASSWORD_FAILED: return updateUserPasswordFailed(state, action);\r\n\r\n        case actionTypes.DELETE_CURRENT_USER_INIT: return deleteCurrentUserInit(state, action);\r\n        case actionTypes.DELETE_CURRENT_USER_SUCCESS: return deleteCurrentUserSuccess(state, action);\r\n        case actionTypes.DELETE_CURRENT_USER_FAILED: return deleteCurrentUserFailed(state, action);\r\n\r\n        case actionTypes.SEND_EMAIL_CONFIRMATION_INIT: return sendEmailConfirmationInit(state, action);\r\n        case actionTypes.SEND_EMAIL_CONFIRMATION_SUCCESS: return sendEmailConfirmationSuccess(state, action);\r\n        case actionTypes.SEND_EMAIL_CONFIRMATION_FAILED: return sendEmailConfirmationFailed(state, action);\r\n\r\n        case actionTypes.VERIFY_ACCOUNT_INIT: return accountVerifiedInit(state, action);\r\n        case actionTypes.VERIFY_ACCOUNT_SUCCESS: return accountVerifiedSuccess(state, action);\r\n        case actionTypes.VERIFY_ACCOUNT_FAILED: return accountVerifiedFailed(state, action);\r\n\r\n        default: return state;\r\n    }\r\n}\r\n\r\n\r\nexport default reducer;","import * as actionTypes from '../actions/actions';\r\n\r\n\r\nconst initialState = {\r\n    Burgers: [],\r\n    updateBurgers: [],\r\n\r\n    ingredientsInit: false,\r\n    ingredients: {},\r\n\r\n    error: null,\r\n    loading: false,\r\n\r\n    menuIngs: {},\r\n    totalBurgerPrice: 0,\r\n\r\n    updateBurgersStatus: null,\r\n\r\n    createBurgerInit: false,\r\n    createBurgerStatus: null,\r\n\r\n    deleteBurgerInit: false,\r\n    deleteBurgerStatus: null,\r\n}\r\n\r\n/////////////////////////////////////////////////////////////////////\r\nconst fetchBurgersSuccess = (state, action) => {\r\n    let burgers = [];\r\n\r\n    action.burgers.map((el, i) => {\r\n        let x = {\r\n            ...action.burgers[i],\r\n            totalPrice: 0,\r\n            items: 0,\r\n            photo: `/uploads/burgers/${action.burgers[i].photo}`\r\n        }\r\n        burgers.push(x);\r\n        return burgers;\r\n    })\r\n\r\n    return {\r\n        ...state,\r\n        Burgers: burgers,\r\n        loading: false,\r\n        error: null,\r\n    }\r\n};\r\n\r\nconst fetchBurgersFailed = (state, action) => {\r\n    let message, status;\r\n    if (action.error.status) {\r\n        message = action.error.data.message;\r\n        status = action.error.status\r\n    } else {\r\n        message = action.error.message;\r\n    }\r\n\r\n    return {\r\n        ...state,\r\n        error: {\r\n            message,\r\n            status\r\n        },\r\n        loading: false,\r\n    }\r\n}\r\n\r\nconst fetchBurgersInit = (state, action) => {\r\n    return {\r\n        ...state,\r\n        loading: true,\r\n        error: null,\r\n    }\r\n}\r\n////////////////////////////////////////////////////////////////////////////\r\n\r\n\r\nconst fetchIngredientsInit = (state, action) => {\r\n    return {\r\n        ...state,\r\n        ingredientsInit: true,\r\n        error: null,\r\n    }\r\n}\r\n\r\nconst fetchIngredientsSuccess = (state, action) => {\r\n    let ings = {};\r\n\r\n    action.ingredients.map(el => {\r\n        return ings[el.name] = { ...el, value: 0, photo: `/uploads/ingredients/${el.photo}` }\r\n    });\r\n\r\n    return {\r\n        ...state,\r\n        ingredients: ings,\r\n        ingredientsInit: false,\r\n    }\r\n}\r\n\r\nconst fetchIngredientsFailed = (state, action) => {\r\n    return {\r\n        ...state,\r\n        ingredients: action.error,\r\n        ingredientsInit: false,\r\n    }\r\n}\r\n\r\n////////////////////////////////////////////////////////////////////////////\r\n\r\nconst addIngredient = (state, action) => {\r\n    return {\r\n        ...state,\r\n        menuIngs: {\r\n            ...state.menuIngs,\r\n            [action.name]: {\r\n                ...state.menuIngs[action.name],\r\n                value: state.menuIngs[action.name].value + 1\r\n            }\r\n        },\r\n    };\r\n};\r\n\r\nconst removeIngredient = (state, action) => {\r\n    return {\r\n        ...state,\r\n        menuIngs: {\r\n            ...state.menuIngs,\r\n            [action.name]: {\r\n                ...state.menuIngs[action.name],\r\n                value: state.menuIngs[action.name].value - 1\r\n            }\r\n        },\r\n    };\r\n};\r\n\r\n///////////////////////////////////////////////////////////////////////////\r\n\r\nconst setMenuIngredients = (state, action) => {\r\n    return {\r\n        ...state,\r\n        menuIngs: action.ings,\r\n        loading: false\r\n    }\r\n}\r\n////////////////////////////////////////////////////////////////\r\n\r\nconst updateMenuBurgerSuccess = (state, action) => {\r\n    return {\r\n        ...state,\r\n        updateBurgersStatus: action.status,\r\n        loading: false,\r\n    }\r\n}\r\n\r\nconst updateMenuBurgerFailed = (state, action) => {\r\n    return {\r\n        ...state,\r\n        updateBurgersStatus: action.error,\r\n        loading: false,\r\n    }\r\n}\r\n///////////////////////////////////////////////////////////\r\n\r\nconst createBurgerInit = (state, action) => {\r\n    return {\r\n        ...state,\r\n        createBurgerInit: true,\r\n        createBurgerStatus: null,\r\n    }\r\n}\r\n\r\nconst createBurgerSuccess = (state, action) => {\r\n    return {\r\n        ...state,\r\n        createBurgerInit: false,\r\n        createBurgerStatus: action.status,\r\n    }\r\n}\r\n\r\n\r\nconst createBurgerFailed = (state, action) => {\r\n    return {\r\n        ...state,\r\n        createBurgerInit: false,\r\n        createBurgerStatus: action.error\r\n    }\r\n}\r\n/////////////////////////////////////////////////////////////////////////////\r\n// \r\n\r\nconst deleteBurgerInit = (state, action) => {\r\n    return {\r\n        ...state,\r\n        deleteBurgerInit: true,\r\n        deleteBurgerStatus: null\r\n    }\r\n}\r\n\r\n\r\nconst deleteBurgerFailed = (state, action) => {\r\n    return {\r\n        ...state,\r\n        deleteBurgerInit: false,\r\n        deleteBurgerStatus: action.error\r\n    }\r\n}\r\n\r\nconst deleteBurgerSuccess = (state, action) => {\r\n    return {\r\n        ...state,\r\n        deleteBurgerInit: false,\r\n        deleteBurgerStatus: 'success'\r\n    }\r\n}\r\n\r\n//////////////////////////////////////////////////////////////////////\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.FETCH_BURGERS_SUCCESS: return fetchBurgersSuccess(state, action);\r\n        case actionTypes.FETCH_BURGERS_FAILED: return fetchBurgersFailed(state, action);\r\n        case actionTypes.FETCH_BURGERS_INIT: return fetchBurgersInit(state, action);\r\n\r\n        case actionTypes.FETCH_INGREDIENTS_INIT: return fetchIngredientsInit(state, action);\r\n        case actionTypes.FETCH_INGREDIENTS_SUCCESS: return fetchIngredientsSuccess(state, action);\r\n        case actionTypes.FETCH_INGREDIENTS_FAILED: return fetchIngredientsFailed(state, action);\r\n\r\n        case actionTypes.UPDATE_MENU_ADD_INGREDIENT: return addIngredient(state, action);\r\n        case actionTypes.UPDATE_MENU_REMOVE_INGREDIENT: return removeIngredient(state, action);\r\n\r\n        case actionTypes.SET_MENU_INGREDIENTS: return setMenuIngredients(state, action);\r\n\r\n        case actionTypes.UPDATE_BURGER_SUCCESS: return updateMenuBurgerSuccess(state, action);\r\n        case actionTypes.UPDATE_BURGER_FAILED: return updateMenuBurgerFailed(state, action);\r\n\r\n        case actionTypes.CREATE_BURGER_INIT: return createBurgerInit(state, action);\r\n        case actionTypes.CREATE_BURGER_SUCCESS: return createBurgerSuccess(state, action);\r\n        case actionTypes.CREATE_BURGER_FAILED: return createBurgerFailed(state, action);\r\n\r\n\r\n        case actionTypes.DELETE_BURGER_INIT: return deleteBurgerInit(state, action);\r\n        case actionTypes.DELETE_BURGER_SUCCESS: return deleteBurgerSuccess(state, action);\r\n        case actionTypes.DELETE_BURGER_FAILED: return deleteBurgerFailed(state, action);\r\n        default: return state;\r\n    }\r\n}\r\n\r\nexport default reducer;","import * as actionTypes from '../actions/actions';\r\n\r\nconst TOTAL_PRICE = 280;\r\n\r\n\r\nconst initialState = {\r\n    ingredientsLoading: false,\r\n    ingredients: null,\r\n    totalPrice: TOTAL_PRICE,\r\n    error: false,\r\n};\r\n\r\nconst fetchIngredientsSuccess = (state, action) => {\r\n    let ings = {};\r\n    action.ingredients.forEach(el => {\r\n        ings[el.name] = { ...el, value: 0, photo: `/uploads/ingredients/${el.photo}` }\r\n    });\r\n\r\n    return {\r\n        ...state,\r\n        ingredientsLoading: false,\r\n        ingredients: ings,\r\n        error: false,\r\n    }\r\n};\r\n\r\nconst fetchIngredientsFailed = (state, action) => {\r\n    return {\r\n        ...state,\r\n        ingredientsLoading: false,\r\n        error: action.error,\r\n    }\r\n};\r\n\r\n\r\nconst addIngredient = (state, action) => {\r\n    return {\r\n        ...state,\r\n        ingredients: {\r\n            ...state.ingredients,\r\n            [action.name]: {\r\n                ...state.ingredients[action.name],\r\n                value: state.ingredients[action.name].value + 1\r\n            }\r\n        },\r\n        totalPrice: state.totalPrice + state.ingredients[action.name].price,\r\n    };\r\n};\r\n\r\nconst removeIngredient = (state, action) => {\r\n    return {\r\n        ...state,\r\n        ingredients: {\r\n            ...state.ingredients,\r\n            [action.name]: {\r\n                ...state.ingredients[action.name],\r\n                value: state.ingredients[action.name].value - 1\r\n            }\r\n        },\r\n        totalPrice: state.totalPrice - state.ingredients[action.name].price,\r\n    };\r\n};\r\n\r\nconst clearIngredientValues = (state, action) => {\r\n    let ings = { ...state.ingredients };\r\n    Object.keys(ings).map(el => {\r\n        ings[el].value = 0\r\n        return ings[el].value;\r\n    });\r\n    return {\r\n        ...state,\r\n        ...state.ingredients,\r\n        ingredients: ings\r\n    };\r\n};\r\n\r\nconst cleartotalPrice = (state, action) => {\r\n    return {\r\n        ...state,\r\n        totalPrice: TOTAL_PRICE,\r\n    };\r\n};\r\n\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.FETCH_INGREDIENTS_SUCCESS: return fetchIngredientsSuccess(state, action);\r\n        case actionTypes.FETCH_INGREDIENTS_FAILED: return fetchIngredientsFailed(state, action);\r\n\r\n        case actionTypes.ADD_INGREDIENT: return addIngredient(state, action);\r\n        case actionTypes.REMOVE_INGREDIENT: return removeIngredient(state, action);\r\n        case actionTypes.CLEAR_INGREDIENT_VALUES: return clearIngredientValues(state, action);\r\n        case actionTypes.CLEAR_TOTAL_PRICE: return cleartotalPrice(state, action);\r\n        default: return state;\r\n    };\r\n\r\n};\r\n\r\n\r\nexport default reducer;\r\n\r\n\r\n","import userImage1 from '../../../assets/images/user-1.jpg';\r\nimport userImage2 from '../../../assets/images/user-2.jpg';\r\n\r\nconst initialState = {\r\n    reviews: {\r\n        Sarah: { img: userImage1, rating: 4.5, comment: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean pharetra nulla et rhoncus venenatis. Nam sollicitudin metus non urna feugiat, vel vehicula nunc semper. Proin nunc justo, tristique sit amet.' },\r\n        Paul: { img: userImage2, rating: 4, comment: 'Nulla ac libero nec elit porta aliquet mattis quis erat. Fusce congue mauris et quam finibus malesuada. Morbi pretium leo turpis, sed venenatis sapien vulputate eu. Duis volutpat lorem neque.' }\r\n    },\r\n}\r\n\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    return state;\r\n};\r\n\r\nexport default reducer;","import * as actionTypes from '../actions/actions';\r\n\r\n\r\nconst initialState = {\r\n    Burgers: null,\r\n    cart: 0,\r\n    totalPrice: 0,\r\n}\r\n\r\n\r\nconst removeItemFromCart = (state, action) => {\r\n    let items = state.Burgers[action.burgerObj.title].items;\r\n    let totalPrice = state.totalPrice - state.Burgers[action.burgerObj.title].price;\r\n    const cart = state.cart - items;\r\n    items = 0;\r\n\r\n    return {\r\n        ...state,\r\n        Burgers: {\r\n            ...state.Burgers,\r\n            [action.burgerObj.title]: undefined\r\n        },\r\n        cart,\r\n        totalPrice\r\n    }\r\n};\r\n\r\nconst incrementItem = (state, action) => {\r\n    let items = state.Burgers[action.burgerObj.title].items;\r\n    let price = state.Burgers[action.burgerObj.title].price + state.Burgers[action.burgerObj.title].initialprice;\r\n    let totalPrice = state.totalPrice + state.Burgers[action.burgerObj.title].initialprice;\r\n    const cart = state.cart + 1;\r\n    items += 1;\r\n\r\n    return {\r\n        ...state,\r\n        Burgers: {\r\n            ...state.Burgers,\r\n            [action.burgerObj.title]: {\r\n                ...state.Burgers[action.burgerObj.title],\r\n                items,\r\n                price,\r\n            }\r\n        },\r\n        cart,\r\n        totalPrice\r\n    }\r\n};\r\n\r\nconst decrementItem = (state, action) => {\r\n    let Burgers = { ...state.Burgers };\r\n    let items = state.Burgers[action.burgerObj.title].items;\r\n    let price = state.Burgers[action.burgerObj.title].price - state.Burgers[action.burgerObj.title].initialprice;\r\n    let totalPrice = state.totalPrice - state.Burgers[action.burgerObj.title].initialprice;\r\n    const cart = state.cart - 1;\r\n    items -= 1;\r\n\r\n    if (items > 0) {\r\n        Burgers = {\r\n            ...state.Burgers,\r\n            [action.burgerObj.title]: {\r\n                ...state.Burgers[action.burgerObj.title],\r\n                items,\r\n                price,\r\n            }\r\n        }\r\n    } else {\r\n        Burgers = {\r\n            ...state.Burgers,\r\n            [action.burgerObj.title]: undefined\r\n        }\r\n    }\r\n    return {\r\n        ...state,\r\n        Burgers,\r\n        cart,\r\n        totalPrice\r\n    }\r\n};\r\n\r\nconst addBurgersToCart = (state, action) => {\r\n    let totalPrice;\r\n    let Burger = { ...state.Burgers }\r\n\r\n    if (action.burgerObj.title === 'customBurger') {\r\n        action.burgerObj.title = `${action.burgerObj.title}-${action.burgerObj.id}`\r\n    }\r\n\r\n    if ((Object.keys(Burger).includes(action.burgerObj.title))) {\r\n        Burger[action.burgerObj.title].items += 1;\r\n        Burger[action.burgerObj.title].price += Burger[action.burgerObj.title].initialprice;\r\n        totalPrice = state.totalPrice + Burger[action.burgerObj.title].initialprice\r\n\r\n    } else {\r\n        Burger[action.burgerObj.title] = action.burgerObj;\r\n        Burger[action.burgerObj.title].items += 1;\r\n        Burger[action.burgerObj.title].price = Burger[action.burgerObj.title].initialprice;\r\n        totalPrice = state.totalPrice + Burger[action.burgerObj.title].initialprice\r\n    }\r\n\r\n    return {\r\n        ...state,\r\n        Burgers: Burger,\r\n        cart: state.cart + 1,\r\n        totalPrice\r\n    }\r\n};\r\n\r\nconst clearCart = (state, action) => {\r\n    return {\r\n        ...state,\r\n        cart: 0,\r\n        totalPrice: 0,\r\n        Burgers: null\r\n    }\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case (actionTypes.ADD_BURGERS_TO_CART): return addBurgersToCart(state, action)\r\n        case (actionTypes.INCREMENT_ITEM): return incrementItem(state, action)\r\n        case (actionTypes.DECREMENT_ITEM): return decrementItem(state, action)\r\n        case (actionTypes.REMOVE_ALL_ITEMS): return removeItemFromCart(state, action)\r\n\r\n        case (actionTypes.CLEAR_CART): return clearCart(state, action);\r\n        default: return state;\r\n    }\r\n};\r\n\r\nexport default reducer;","import * as actionTypes from '../actions/actions';\r\n\r\n\r\nconst initialState = {\r\n    getUsersInit: false,\r\n    getUsersStatus: null,\r\n\r\n    updateUserInit: false,\r\n    updateUserStatus: null,\r\n\r\n    deleteUserInit: false,\r\n    deleteUserStatus: null,\r\n\r\n    users: null\r\n}\r\n\r\nconst getAllUsersInit = (state, action) => {\r\n    return {\r\n        ...state,\r\n        getUsersInit: true,\r\n        getUsersStatus: null,\r\n    }\r\n}\r\n\r\n\r\nconst getAllUsersSuccess = (state, action) => {\r\n    return {\r\n        ...state,\r\n        getUsersInit: false,\r\n        getUsersStatus: 'success',\r\n        users: action.users\r\n    }\r\n}\r\n\r\nconst getAllUsersFailed = (state, action) => {\r\n    return {\r\n        ...state,\r\n        getUsersInit: false,\r\n        users: null,\r\n        getUsersStatus: action.error,\r\n    }\r\n}\r\n\r\nconst updateUserInit = (state, action) => {\r\n    return {\r\n        ...state,\r\n        updateUserInit: true,\r\n    }\r\n}\r\n\r\n\r\nconst updateUserFailed = (state, action) => {\r\n    return {\r\n        ...state,\r\n        updateUserInit: false,\r\n        updateUserStatus: action.error,\r\n    }\r\n}\r\n\r\nconst deleteUserInit = (state, action) => {\r\n    return {\r\n        ...state,\r\n        deleteUserInit: true,\r\n    }\r\n}\r\n\r\nconst deleteUserFailed = (state, action) => {\r\n    return {\r\n        ...state,\r\n        deleteUserInit: false,\r\n        deleteUserStatus: action.error,\r\n    }\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.GET_ALL_USERS_INIT: return getAllUsersInit(state, action);\r\n        case actionTypes.GET_ALL_USERS_SUCCESS: return getAllUsersSuccess(state, action);\r\n        case actionTypes.GET_ALL_USERS_FAILED: return getAllUsersFailed(state, action);\r\n\r\n        case actionTypes.UPDATE_ONE_USER_INIT: return updateUserInit(state, action);\r\n        case actionTypes.UPDATE_ONE_USER_FAILED: return updateUserFailed(state, action);\r\n\r\n        case actionTypes.DELETE_ONE_USER_INIT: return deleteUserInit(state, action);\r\n        case actionTypes.DELETE_ONE_USER_FAILED: return deleteUserFailed(state, action);\r\n\r\n        default: return state;\r\n    }\r\n}\r\n\r\nexport default reducer;","import * as actionTypes from '../actions/actions';\r\n\r\nconst initialState = {\r\n    userOrders: null,\r\n    orders: null,\r\n\r\n    order: null,\r\n\r\n    getOrderStatus: null,\r\n    getOrderInit: false,\r\n\r\n    totalOrdersPrice: null,\r\n    totalOrders: null,\r\n    totalCompletedOrders: null,\r\n    totalPendingOrders: null,\r\n    totalCancelledOrders: null,\r\n\r\n    getUserOrdersStatus: null,\r\n    getUserOrdersInit: false,\r\n\r\n    createUserOrderInit: false,\r\n    createUserOrderStatus: null,\r\n\r\n    getOrdersInit: false,\r\n    getOrdersStatus: null,\r\n\r\n    updateOrderStatusAdminInit: false,\r\n    updateOrderStatusAdminStatus: {},\r\n\r\n};\r\n\r\nconst createOrderInit = (state, action) => {\r\n    return {\r\n        ...state,\r\n        createUserOrderInit: true\r\n    }\r\n}\r\n\r\nconst createOrderSuccess = (state, action) => {\r\n    return {\r\n        ...state,\r\n        createUserOrderInit: false,\r\n        createUserOrderStatus: 'success'\r\n    }\r\n}\r\n\r\nconst createOrderFailed = (state, action) => {\r\n    return {\r\n        ...state,\r\n        createUserOrderInit: false,\r\n        createUserOrderStatus: action.error\r\n    }\r\n}\r\n\r\nconst getUserOrdersInit = (state, action) => {\r\n    return {\r\n        ...state,\r\n        getUserOrdersInit: true\r\n    }\r\n}\r\n\r\nconst getUserOrdersSuccess = (state, action) => {\r\n    return {\r\n        ...state,\r\n        getUserOrdersInit: false,\r\n        userOrders: action.orders,\r\n        getUserOrdersStatus: 'success'\r\n    }\r\n}\r\n\r\nconst getUserOrdersFailed = (state, action) => {\r\n    return {\r\n        ...state,\r\n        getUserOrdersInit: false,\r\n        getUserOrdersStatus: action.error\r\n    }\r\n}\r\n\r\nconst getAllOrdersInit = (state, action) => {\r\n\r\n    return {\r\n        ...state,\r\n        getOrdersInit: true\r\n    }\r\n}\r\n\r\nconst getAllOrdersSuccess = (state, action) => {\r\n    return {\r\n        ...state,\r\n        getOrdersInit: false,\r\n        orders: action.orders,\r\n        getOrdersStatus: 'success',\r\n        totalOrdersPrice: action.totalPrice,\r\n        totalOrders: action.totalOrders,\r\n        totalCompletedOrders: action.completedOrders,\r\n        totalPendingOrders: action.pendingOrders,\r\n        totalCancelledOrders: action.totalOrders - action.completedOrders - action.pendingOrders\r\n    }\r\n}\r\n\r\nconst getOrdersFailed = (state, action) => {\r\n    return {\r\n        ...state,\r\n        getOrderInit: false,\r\n        getOrderStatus: action.error\r\n    }\r\n}\r\n\r\nconst getOrderInit = (state, action) => {\r\n    return {\r\n        ...state,\r\n        getOrderInit: true,\r\n        getOrderStatus: null\r\n    }\r\n}\r\n\r\nconst getOrderSuccess = (state, action) => {\r\n    return {\r\n        ...state,\r\n        getOrderInit: false,\r\n        getOrderStatus: 'success',\r\n        order: action.order\r\n    }\r\n}\r\n\r\nconst getAllOrdersFailed = (state, action) => {\r\n    return {\r\n        ...state,\r\n        getOrdersInit: false,\r\n        getOrdersStatus: action.error\r\n    }\r\n}\r\n\r\n\r\nconst clearCart = (state, action) => {\r\n    return {\r\n        ...state,\r\n        getUserOrdersStatus: null,\r\n        getUserOrdersInit: false,\r\n\r\n        createUserOrderInit: false,\r\n        createUserOrderStatus: null\r\n    }\r\n}\r\n\r\n\r\nconst updateOrderStatusAdminInit = (state, action) => {\r\n    return {\r\n        ...state,\r\n        updateOrderStatusAdminInit: true,\r\n        updateOrderStatusAdminStatus: null,\r\n    }\r\n}\r\n\r\nconst updateOrderStatusAdminSuccess = (state, action) => {\r\n    return {\r\n        ...state,\r\n        updateOrderStatusAdminInit: false,\r\n        updateOrderStatusAdminStatus: action.response,\r\n    }\r\n}\r\n\r\nconst updateOrderStatusAdminFailed = (state, action) => {\r\n    return {\r\n        ...state,\r\n        updateOrderStatusAdminInit: false,\r\n        updateOrderStatusAdminStatus: action.error,\r\n    }\r\n}\r\n\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.GET_ALL_USER_ORDERS_INIT: return getUserOrdersInit(state, action)\r\n        case actionTypes.GET_ALL_USER_ORDERS_SUCCESS: return getUserOrdersSuccess(state, action)\r\n        case actionTypes.GET_ALL_USER_ORDERS_FAILED: return getUserOrdersFailed(state, action)\r\n\r\n        case actionTypes.CREATE_ORDER_INIT: return createOrderInit(state, action)\r\n        case actionTypes.CREATE_ORDER_SUCCESS: return createOrderSuccess(state, action)\r\n        case actionTypes.CREATE_ORDER_FAILED: return createOrderFailed(state, action)\r\n\r\n        case actionTypes.CLEAR_CART: return clearCart(state, action);\r\n\r\n        case actionTypes.GET_ALL_ORDERS_INIT: return getAllOrdersInit(state, action);\r\n        case actionTypes.GET_ALL_ORDERS_SUCCESS: return getAllOrdersSuccess(state, action);\r\n        case actionTypes.GET_ALL_ORDERS_FAILED: return getAllOrdersFailed(state, action);\r\n\r\n        case actionTypes.UPDATE_ORDER_ADMIN_STATUS_INIT: return updateOrderStatusAdminInit(state, action);\r\n        case actionTypes.UPDATE_ORDER_ADMIN_STATUS_SUCCESS: return updateOrderStatusAdminSuccess(state, action);\r\n        case actionTypes.UPDATE_ORDER_ADMIN_STATUS_FAILED: return updateOrderStatusAdminFailed(state, action);\r\n\r\n        case actionTypes.GET_ORDER_INIT: return getOrderInit(state, action);\r\n        case actionTypes.GET_ORDER_SUCCESS: return getOrderSuccess(state, action);\r\n        case actionTypes.GET_ORDER_FAILED: return getOrdersFailed(state, action);\r\n\r\n        default: return state\r\n    }\r\n}\r\n\r\nexport default reducer;","import * as actionTypes from '../actions/actions';\r\n\r\n\r\nconst initialState = {\r\n    ingredients: null,\r\n    ingredient: null,\r\n\r\n    getAllIngredientsStatus: null,\r\n    getAllIngredientsInit: false,\r\n\r\n    updateIngredientInit: false,\r\n    updateIngredientStatus: null,\r\n\r\n    getIngredientStatus: null,\r\n    getIngredientInit: false,\r\n\r\n    createIngredientsStatus: null,\r\n    createIngredientsInit: false,\r\n\r\n    deleteIngredientStatus: null,\r\n    deleteIngredientInit: false,\r\n}\r\n\r\n// Get all Ingredients\r\n//////////////////////////////////////////////////////////\r\n\r\nconst getAllIngredientsInit = (state, action) => {\r\n    return {\r\n        ...state,\r\n        getAllIngredientsStatus: null,\r\n        getAllIngredientsInit: true,\r\n    }\r\n}\r\n\r\nconst getAllIngredientsFailed = (state, action) => {\r\n    return {\r\n        ...state,\r\n        getAllIngredientsStatus: action.error,\r\n        getAllIngredientsInit: false,\r\n    }\r\n}\r\n\r\n\r\nconst getAllIngredientsSuccess = (state, action) => {\r\n    let ingredients = [];\r\n    (action.res.ingredients).map(el => {\r\n        return ingredients.push({ ...el, photo: `/uploads/ingredients/${el.photo}` })\r\n    })\r\n    return {\r\n        ...state,\r\n        ingredients,\r\n        getAllIngredientsStatus: action.res.status,\r\n        getAllIngredientsInit: false,\r\n    }\r\n}\r\n///////////////////////////////////////////////////////////////////////////////\r\n// get ingredient\r\n\r\nconst getIngredientInit = (state, action) => {\r\n    return {\r\n        ...state,\r\n        getIngredientStatus: null,\r\n        getIngredientInit: true,\r\n    }\r\n}\r\n\r\nconst getIngredientFailed = (state, action) => {\r\n    return {\r\n        ...state,\r\n        getIngredientStatus: action.error,\r\n        getIngredientInit: false,\r\n    }\r\n}\r\n\r\n\r\nconst getIngredientSuccess = (state, action) => {\r\n\r\n    return {\r\n        ...state,\r\n        ingredient: {\r\n            ...action.res.ingredient,\r\n            photo: `/uploads/ingredients/${action.res.ingredient.photo}`\r\n        },\r\n        getIngredientStatus: action.res.status,\r\n        getIngredientInit: false,\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n////////////////////////////////////////////////////////////////////////////////\r\n// Create ingredient\r\n\r\n\r\n\r\nconst createIngredientsInit = (state, action) => {\r\n    return {\r\n        ...state,\r\n        createIngredientsStatus: null,\r\n        createIngredientsInit: true,\r\n    }\r\n}\r\n\r\nconst createIngredientsFailed = (state, action) => {\r\n    return {\r\n        ...state,\r\n        createIngredientsStatus: action.error,\r\n        createIngredientsInit: false,\r\n    }\r\n}\r\n\r\n\r\nconst createIngredientsSuccess = (state, action) => {\r\n    return {\r\n        ...state,\r\n        createIngredientsStatus: action.res,\r\n        createIngredientsInit: false,\r\n    }\r\n}\r\n\r\n/////////////////////////////////////////////////////////////////////////////////////\r\n// Update ingredient\r\n\r\n\r\nconst updateIngredientInit = (state, action) => {\r\n    return {\r\n        ...state,\r\n        updateIngredientsStatus: null,\r\n        updateIngredientsInit: true,\r\n    }\r\n}\r\n\r\nconst updateIngredientFailed = (state, action) => {\r\n    return {\r\n        ...state,\r\n        updateIngredientsStatus: action.error,\r\n        updateIngredientsInit: false,\r\n    }\r\n}\r\n\r\n\r\nconst updateIngredientSuccess = (state, action) => {\r\n    return {\r\n        ...state,\r\n        ingredient: {\r\n            ...action.res.ingredient,\r\n            photo: `/uploads/ingredients/${action.res.ingredient.photo}`\r\n        },\r\n        updateIngredientsStatus: action.res,\r\n        updateIngredientsInit: false,\r\n    }\r\n}\r\n\r\n\r\n/////////////////////////////////////////////////////////////////////////////////////\r\n\r\nconst deleteIngredientInit = (state, action) => {\r\n    return {\r\n        ...state,\r\n        deleteIngredientStatus: null,\r\n        deleteIngredientInit: true,\r\n    }\r\n}\r\n\r\nconst deleteIngredientFailed = (state, action) => {\r\n    return {\r\n        ...state,\r\n        deleteIngredientStatus: action.error,\r\n        deleteIngredientInit: false,\r\n    }\r\n}\r\n\r\n\r\nconst deleteIngredientSuccess = (state, action) => {\r\n    return {\r\n        ...state,\r\n        deleteIngredientStatus: 'success',\r\n        deleteIngredientInit: false,\r\n    }\r\n}\r\n///////////////////////////////////////////////////////////////////////////////////\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.GET_INGREDIENTS_INIT: return getAllIngredientsInit(state, action);\r\n        case actionTypes.GET_INGREDIENTS_SUCCESS: return getAllIngredientsSuccess(state, action);\r\n        case actionTypes.GET_INGREDIENTS_FAILED: return getAllIngredientsFailed(state, action);\r\n\r\n        case actionTypes.CREATE_INGREDIENTS_INIT: return createIngredientsInit(state, action);\r\n        case actionTypes.CREATE_INGREDIENTS_SUCCESS: return createIngredientsSuccess(state, action);\r\n        case actionTypes.CREATE_INGREDIENTS_FAILED: return createIngredientsFailed(state, action);\r\n\r\n        case actionTypes.GET_INGREDIENT_INIT: return getIngredientInit(state, action);\r\n        case actionTypes.GET_INGREDIENT_SUCCESS: return getIngredientSuccess(state, action);\r\n        case actionTypes.GET_INGREDIENT_FAILED: return getIngredientFailed(state, action);\r\n\r\n        case actionTypes.UPDATE_INGREDIENT_INIT: return updateIngredientInit(state, action)\r\n        case actionTypes.UPDATE_INGREDIENT_SUCCESS: return updateIngredientSuccess(state, action)\r\n        case actionTypes.UPDATE_INGREDIENT_FAILED: return updateIngredientFailed(state, action)\r\n\r\n        case actionTypes.DELETE_INGREDIENT_INIT: return deleteIngredientInit(state, action);\r\n        case actionTypes.DELETE_INGREDIENT_SUCCESS: return deleteIngredientSuccess(state, action);\r\n        case actionTypes.DELETE_ONE_USER_FAILED: return deleteIngredientFailed(state, action);\r\n\r\n        default: return state;\r\n    }\r\n}\r\n\r\nexport default reducer;","import { combineReducers } from 'redux';\r\n\r\nimport authReducer from './auth';\r\nimport menuReducer from './menu';\r\nimport burgerBuilderReducer from './burgerBuilder';\r\nimport customerReducer from './customer';\r\nimport cartReducer from './cart';\r\nimport userReducer from './users';\r\nimport orderReducer from './orders';\r\nimport ingredientReducer from './ingredients';\r\n\r\n\r\nconst reducer = combineReducers({\r\n    menu: menuReducer,\r\n    customer: customerReducer,\r\n    burgerBuilder: burgerBuilderReducer,\r\n    cart: cartReducer,\r\n    auth: authReducer,\r\n    users: userReducer,\r\n    orders: orderReducer,\r\n    ingredients: ingredientReducer,\r\n});\r\n\r\nexport default reducer;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { createStore, applyMiddleware, compose } from 'redux';\r\n\r\nimport './scss/main.scss';\r\n\r\n\r\nimport App from './app/App';\r\nimport reducer from './app/Store/reducers/rootReducer';\r\n\r\nimport thunk from 'redux-thunk';\r\n\r\n// const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst composeEnhancers = process.env.NODE_ENV === 'development' ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ : null || compose;\r\n\r\nconst store = createStore(reducer, composeEnhancers(\r\n  applyMiddleware(thunk)\r\n));\r\n\r\nconst app = (\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>\r\n)\r\n\r\nReactDOM.render(app, document.getElementById('root'));\r\n\r\n"],"sourceRoot":""}