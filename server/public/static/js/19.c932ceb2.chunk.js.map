{"version":3,"sources":["app/Pages/Login/Login.js","app/Shared/Components/Alert/Alert.js","app/Shared/hoc/UnAuthRoutes.js"],"names":["Login","state","formInput","email","password","showAlert","onChangeHandler","e","onChangeFormInput","setState","onCloseHandler","closeAlertTimer","setTimeout","props","loginStatus","cart","history","replace","user","role","onSubmitHandler","a","preventDefault","loginUser","clearFields","clearTimeout","this","show","status","message","close","className","onSubmit","autoComplete","name","inputtype","type","label","onChange","value","minLength","loginInit","variant","to","Component","connect","auth","checkAuthInit","dispatch","data","authActions","Alert","UnAuthRoutes","checkAuthState","children"],"mappings":"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","file":"static/js/19.c932ceb2.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport Input from '../../Shared/Components/Form/Input';\r\n\r\n\r\nimport * as authActions from '../../Store/actions/auth';\r\nimport { onChangeFormInput, clearFields } from '../../Shared/Utils/formInput';\r\nimport Alert from '../../Shared/Components/Alert/Alert';\r\nimport UnAuthRoutes from '../../Shared/hoc/UnAuthRoutes';\r\n\r\n\r\nclass Login extends Component {\r\n    state = {\r\n        formInput: {\r\n            email: '',\r\n            password: ''\r\n        },\r\n        showAlert: false,\r\n    }\r\n\r\n    onChangeHandler = e => {\r\n        let formInput = onChangeFormInput(e, { ...this.state })\r\n        this.setState({ ...formInput })\r\n    }\r\n\r\n    onCloseHandler = () => {\r\n        this.closeAlertTimer = setTimeout(() => {\r\n            this.setState({ showAlert: false });\r\n            if (this.props.loginStatus === 'success' && this.props.cart) {\r\n                this.props.history.replace('/cart')\r\n            } else if (this.props.loginStatus === 'success' && this.props.user.role === 'admin') {\r\n                this.props.history.replace('/dashboard/manage-orders');\r\n            } else if (this.props.loginStatus === 'success') {\r\n                this.props.history.replace('/menu');\r\n            }\r\n        }, 1500)\r\n    }\r\n\r\n    onSubmitHandler = async e => {\r\n        e.preventDefault();\r\n        await this.props.loginUser(this.state.formInput)\r\n        let formInput = clearFields(this.state);\r\n        this.setState({ formInput, showAlert: true });\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        clearTimeout(this.closeAlertTimer);\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <UnAuthRoutes>\r\n                {this.state.showAlert && this.props.loginStatus &&\r\n                    <Alert\r\n                        show={this.state.showAlert}\r\n                        status={this.props.loginStatus === 'success' ? this.props.loginStatus : this.props.loginStatus.status}\r\n                        message={this.props.loginStatus === 'success'\r\n                            ? \"User Logged In Successfully\"\r\n                            : this.props.loginStatus.message}\r\n                        close={this.onCloseHandler()}\r\n                    />}\r\n                <section className=\"login\">\r\n                    <form className=\"login__form\" onSubmit={this.onSubmitHandler} autoComplete=\"off\">\r\n                        <div className=\"form__group\">\r\n                            <h2 className=\"heading-1 u-text-primary u-ftwt-400\">Login</h2>\r\n                        </div>\r\n                        <Input\r\n                            name=\"email\"\r\n                            inputtype='input'\r\n                            type='email'\r\n                            label='Email'\r\n                            onChange={this.onChangeHandler}\r\n                            value={this.state.formInput.email} />\r\n\r\n                        <Input\r\n                            name=\"password\"\r\n                            inputtype='input'\r\n                            type='password'\r\n                            label='Password'\r\n                            onChange={this.onChangeHandler}\r\n                            value={this.state.formInput.password}\r\n                            minLength={6} />\r\n                        <Input inputtype='submit' value={this.props.loginInit ? 'Loading...' : 'Login Now'} variant=\"tertiary\" />\r\n\r\n                        <div className=\"form__group\">\r\n                            <NavLink className=\"login__form-link\"\r\n                                to=\"/send-confirm-email\" >Please click here to verify your email</NavLink>\r\n                        </div>\r\n                    </form>\r\n                </section>\r\n\r\n            </UnAuthRoutes>\r\n        );\r\n    };\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        loginInit: state.auth.loginInit,\r\n        loginStatus: state.auth.loginStatus,\r\n        checkAuthInit: state.auth.checkAuthInit,\r\n        user: state.auth.user,\r\n        cart: state.cart.cart\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        loginUser: (data) => dispatch(authActions.login(data)),\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\r\n","import React from 'react';\r\n\r\nconst Alert = props => {\r\n    return (\r\n        <div className={`alert alert__${props.show} alert--${props.status} ${props.className}`}>\r\n            {props.message}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Alert;\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nimport * as authActions from '../../Store/actions/auth';\r\nimport { Redirect } from 'react-router';\r\nimport Loader from '../Components/Loader/Loader';\r\n\r\n\r\nclass UnAuthRoutes extends Component {\r\n    async componentDidMount() {\r\n        // if (this.props.user) {\r\n        await this.props.checkAuthState();\r\n        // }\r\n    }\r\n\r\n    render() {\r\n        if (!this.props.user) {\r\n            return this.props.children\r\n        }\r\n\r\n        if (this.props.checkAuthInit) {\r\n            return <div className=\"u-flex-center u-vh-100 u-bg-white\">\r\n                <Loader />\r\n            </div>\r\n        }\r\n\r\n        if (this.props.user && this.props.user.role === 'admin') {\r\n            return <Redirect to=\"/dashboard/manage-orders\" />\r\n        }\r\n\r\n        if (this.props.user && (!this.props.user.role || this.props.user.role !== 'admin')) {\r\n            return <Redirect to=\"/menu\" />\r\n        }\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.auth.user,\r\n        checkAuthInit: state.auth.checkAuthInit\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        checkAuthState: () => dispatch(authActions.checkAuth()),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UnAuthRoutes);"],"sourceRoot":""}