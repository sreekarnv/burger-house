{"version":3,"sources":["app/Pages/DashBoard/components/OrderDetail.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","app/Shared/hoc/AuthRoutes.js","app/Store/actions/orders.js","app/Shared/Components/List/ListItem.js","app/Pages/DashBoard/components/StatusCard.js"],"names":["OrderDetail","state","orders","onChangeStatusHandler","a","status","props","updateOrderStatusAdmin","_id","match","params","id","orderStatus","setState","updatedOrder","onCancelOrder","this","getOrder","order","url","startsWith","history","push","items","map","el","isLoading","className","onClick","user","name","email","heading","value","loggedInUser","role","disabled","path","foodType","Fragment","title","ingredients","el2","amount","Component","connect","getOrderInit","auth","updateOrderStatusAdminStatus","dispatch","orderActions","payload","_arrayLikeToArray","arr","len","length","i","arr2","Array","_toConsumableArray","isArray","iter","Symbol","iterator","Object","from","o","minLen","n","prototype","toString","call","slice","constructor","test","TypeError","AuthRoutes","checkAuthState","children","to","checkAuthInit","authActions","getAllUserOrdersFailed","error","type","actionTypes","getAllUserOrders","axios","get","res","keys","data","customOrders","menuOrders","response","createOrdersFailed","createOrders","method","clearCart","getAllOrdersSuccess","totalOrders","pendingOrders","completedOrders","totalPrice","getAllOrdersFailed","getAllOrders","filter","query","res2","price","updateOrderStatusAdminSuccess","getOrderSuccess","photo","parseInt","ListItem","style","listStyle","StatusCard"],"mappings":"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","file":"static/js/13.e3b1dbae.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport ListItem from '../../../Shared/Components/List/ListItem';\r\nimport CardStatus from './StatusCard';\r\n\r\nimport * as orderActions from '../../../Store/actions/orders';\r\nimport Loader from '../../../Shared/Components/Loader/Loader';\r\nimport AuthRoutes from '../../../Shared/hoc/AuthRoutes';\r\n\r\nclass OrderDetail extends Component {\r\n    state = {\r\n        orders: null,\r\n    }\r\n\r\n    async componentDidMount() {\r\n\r\n        await this.props.getOrder(this.props.match.params.id)\r\n        if (!this.props.order && this.props.match.url.startsWith('/dashboard/manage-orders')) {\r\n            return this.props.history.push('/dashboard/manage-orders')\r\n        } else if (!this.props.order && this.props.match.url.startsWith(`/dashboard/my-orders`)) {\r\n            return this.props.history.push('/dashboard/my-orders')\r\n        }\r\n        else {\r\n            let orders = this.props.order;\r\n            this.setState({ orders })\r\n        }\r\n    }\r\n\r\n    onChangeStatusHandler = async () => {\r\n        let status = 'pending';\r\n        if (this.state.orders.status === 'pending') status = 'delivered'\r\n\r\n        await this.props.updateOrderStatusAdmin(\r\n            { status, _id: this.props.match.params.id }\r\n        )\r\n\r\n        if (this.props.orderStatus === 'success') {\r\n            this.setState({\r\n                orders: {\r\n                    ...this.state.orders,\r\n                    status: this.props.updatedOrder.status\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    onCancelOrder = async () => {\r\n        await this.props.updateOrderStatusAdmin(\r\n            { status: 'cancelled', _id: this.props.match.params.id }\r\n        )\r\n\r\n        if (this.props.orderStatus === 'success') {\r\n            this.setState({\r\n                orders: {\r\n                    ...this.state.orders,\r\n                    status: this.props.updatedOrder.status\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let items = 0;\r\n\r\n        if (this.state.orders) {\r\n            this.state.orders.orders.map(el => items += el.items)\r\n        }\r\n\r\n        if (this.state.isLoading || !this.state.orders) {\r\n            return <div className=\"dashboard__dashboard u-flex-center u-bg-white u-vh-100\">\r\n                <Loader />\r\n            </div>\r\n        }\r\n\r\n        return (\r\n            <AuthRoutes>\r\n                <div className=\"order__details dashboard__dashboard\">\r\n                    <button\r\n                        onClick={() => this.props.history.push(\r\n                            this.props.match.url.startsWith(`/dashboard/my-orders`)\r\n                                ? '/dashboard/my-orders' : '/dashboard/manage-orders'\r\n                        )}\r\n                        className=\"btn  btn__tertiary-back order__details-back-btn\">\r\n                        <span>&larr;</span>Back\r\n                </button>\r\n\r\n                    <h4 className=\"heading-1 order__details-heading\">\r\n                        Order Details\r\n                </h4>\r\n                    <div className=\"order__details-info\">\r\n                        <div>\r\n                            <h2>Order Id: #{this.props.match.params.id}</h2>\r\n                            <h4>{this.state.orders.user.name}</h4>\r\n                            <p>{this.state.orders.user.email}</p>\r\n                        </div>\r\n                        <div className=\"order__details-info-status order__details-info-status--total-orders\">\r\n                            <CardStatus className=\"order__details-info-status-card\"\r\n                                heading=\"Order Status\"\r\n                                value={this.state.orders.status}\r\n                            />\r\n                            {this.props.loggedInUser.role === 'admin' && this.props.match.url.startsWith('/dashboard/manage-orders/') &&\r\n                                <button onClick={this.onChangeStatusHandler} disabled={this.state.orders.status === 'cancelled' ? true : false}\r\n                                    className={`btn btn__success--outline${this.state.orders.status === 'cancelled' ? '-disabled' : ''} `}>\r\n                                    Mark Order as {this.state.orders.status === 'pending' ? 'Delivered' : 'Pending'}\r\n                                </button>}\r\n                            {this.props.match.path === '/dashboard/my-orders/:id' &&\r\n                                <button onClick={this.onCancelOrder}\r\n                                    className={`btn btn__success--outline${this.state.orders.status === 'delivered' || this.state.orders.status === 'cancelled' ? '-disabled' : ''} `} >\r\n                                    Cancel Order\r\n                            </button>\r\n                            }\r\n                        </div>\r\n\r\n                        <CardStatus className=\"order__details-info-status-card\"\r\n                            heading=\"Total Orders\"\r\n                            value={items}\r\n                        />\r\n\r\n                    </div>\r\n\r\n                    <div className=\"order__details-list\">\r\n                        {this.state.orders.orders.map(el => {\r\n                            return (\r\n                                <ListItem className={`order__details-list-item u-bg-${el._id.foodType}--opacity-35`}>\r\n                                    <React.Fragment>\r\n                                        <p className=\"order__details-list-item-name\">\r\n                                            {el._id.title} ({el.items})\r\n                                    </p>\r\n                                        <div className=\"order__details-list-item-ings\">\r\n                                            {el._id.ingredients.map(el2 => {\r\n                                                return <p>{el2._id.name ? el2._id.name : el2.name} ({el2.amount})</p>\r\n                                            })}\r\n                                        </div>\r\n                                    </React.Fragment>\r\n                                </ListItem>\r\n                            )\r\n                        })}\r\n                    </div>\r\n\r\n                </div >\r\n            </AuthRoutes>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        orders: state.orders.orders,\r\n        getOrderInit: state.orders.getOrderInit,\r\n        order: state.orders.order,\r\n        loggedInUser: state.auth.user,\r\n        orderStatus: state.orders.updateOrderStatusAdminStatus.status,\r\n        updatedOrder: state.orders.updateOrderStatusAdminStatus.order\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        getOrder: (id) => dispatch(orderActions.getOrder(id)),\r\n        updateOrderStatusAdmin: (payload) => dispatch(orderActions.updateOrderStatusAdmin(payload))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(OrderDetail);","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(n);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nimport * as authActions from '../../Store/actions/auth';\r\nimport { Redirect } from 'react-router';\r\n\r\nclass AuthRoutes extends Component {\r\n    async componentDidMount() {\r\n        await this.props.checkAuthState();\r\n    }\r\n\r\n    render() {\r\n        if (!this.props.user) {\r\n            return <Redirect to=\"/login\" />\r\n        }\r\n\r\n        return this.props.children\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.auth.user,\r\n        checkAuthInit: state.auth.checkAuthInit\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        checkAuthState: () => dispatch(authActions.checkAuth()),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AuthRoutes);","import * as actionTypes from './actions';\r\nimport axios from 'axios';\r\n\r\n\r\n\r\nexport const getAllUserOrdersInit = () => {\r\n    return {\r\n        type: actionTypes.GET_ALL_USER_ORDERS_INIT\r\n    }\r\n}\r\n\r\nexport const getAllUserOrdersSuccess = (orders) => {\r\n    return {\r\n        type: actionTypes.GET_ALL_USER_ORDERS_SUCCESS,\r\n        orders\r\n    }\r\n}\r\n\r\nexport const getAllUserOrdersFailed = error => {\r\n    return {\r\n        type: actionTypes.GET_ALL_USER_ORDERS_FAILED,\r\n        error\r\n    }\r\n}\r\n\r\n\r\nexport const getAllUserOrders = () => {\r\n    return async dispatch => {\r\n        dispatch(getAllUserOrdersInit());\r\n        try {\r\n            const res = await axios.get(`/api/v1/orders/me`)\r\n            let order = Object.keys(res.data.orders).map(el => {\r\n                return {\r\n                    ...res.data.orders[el],\r\n                    orders: [...res.data.orders[el].customOrders, ...res.data.orders[el].menuOrders],\r\n                    customOrders: null,\r\n                    menuOrders: null,\r\n                }\r\n            })\r\n            dispatch(getAllUserOrdersSuccess(order));\r\n        } catch (err) {\r\n            const error = { ...err }.response\r\n            dispatch(getAllUserOrdersFailed(error));\r\n        }\r\n    }\r\n}\r\n//////////////////////////////////////////////////////////////////////////////////////\r\n\r\nexport const createOrdersInit = () => {\r\n    return {\r\n        type: actionTypes.CREATE_ORDER_INIT\r\n    }\r\n}\r\n\r\nexport const createOrdersSuccess = (orders) => {\r\n    return {\r\n        type: actionTypes.CREATE_ORDER_SUCCESS,\r\n        orders\r\n    }\r\n}\r\n\r\nexport const createOrdersFailed = error => {\r\n    return {\r\n        type: actionTypes.CREATE_ORDER_FAILED,\r\n        error\r\n    }\r\n}\r\n\r\nexport const createOrders = (data) => {\r\n    return async dispatch => {\r\n        dispatch(createOrdersInit());\r\n        try {\r\n            const res = await axios({\r\n                method: 'POST',\r\n                url: `/api/v1/orders`,\r\n                data\r\n            })\r\n            dispatch(createOrdersSuccess(res.data.orders))\r\n        } catch (err) {\r\n            const error = { ...err }.response\r\n            dispatch(createOrdersFailed(error));\r\n        }\r\n    }\r\n}\r\n///////////////////////////////////////////////////////////////////////////////\r\nexport const clearCart = () => {\r\n    return {\r\n        type: actionTypes.CLEAR_CART\r\n    }\r\n}\r\n//////////////////////////////////////////////////////////////////////////////////////\r\nexport const getAllOrdersInit = () => {\r\n    return {\r\n        type: actionTypes.GET_ALL_ORDERS_INIT\r\n    }\r\n}\r\n\r\nexport const getAllOrdersSuccess = ({ order, totalOrders, pendingOrders, completedOrders, totalPrice }) => {\r\n    return {\r\n        type: actionTypes.GET_ALL_ORDERS_SUCCESS,\r\n        orders: order,\r\n        totalOrders,\r\n        pendingOrders,\r\n        completedOrders,\r\n        totalPrice\r\n    }\r\n}\r\n\r\nexport const getAllOrdersFailed = error => {\r\n    return {\r\n        type: actionTypes.GET_ALL_ORDERS_FAILED,\r\n        error\r\n    }\r\n}\r\n\r\nexport const getAllOrders = (filter) => {\r\n    return async dispatch => {\r\n        dispatch(getAllOrdersInit());\r\n        try {\r\n            let order = [];\r\n            let query = '', res2;\r\n\r\n            const res = await axios.get(`/api/v1/orders`)\r\n\r\n            if (filter !== 'All Orders') {\r\n                query = `?status=${filter}`\r\n                res2 = await axios.get(`/api/v1/orders${query}`)\r\n\r\n                Object.keys(res2.data.orders).map(el => {\r\n                    order.push({\r\n                        ...res2.data.orders[el],\r\n                        orders: [...res.data.orders[el].customOrders, ...res.data.orders[el].menuOrders],\r\n                        customOrders: null,\r\n                        menuOrders: null,\r\n                    })\r\n                    return order;\r\n                })\r\n\r\n\r\n            }\r\n            let totalOrders = res.data.orders.length;\r\n            let totalPrice = 0;\r\n            let pendingOrders = 0;\r\n            let completedOrders = 0;\r\n\r\n            Object.keys(res.data.orders).map(el => {\r\n                if (res.data.orders[el].status === 'pending') {\r\n                    pendingOrders += 1;\r\n                } else if (res.data.orders[el].status === 'delivered') {\r\n                    completedOrders += 1;\r\n                }\r\n\r\n                if (res.data.orders[el].status !== 'cancelled') totalPrice += res.data.orders[el].price;\r\n\r\n\r\n                if (filter === 'All Orders') {\r\n                    order.push({\r\n                        ...res.data.orders[el],\r\n                        orders: [...res.data.orders[el].customOrders, ...res.data.orders[el].menuOrders],\r\n                        customOrders: null,\r\n                        menuOrders: null,\r\n                    })\r\n                    return order;\r\n                }\r\n                return '';\r\n            })\r\n\r\n\r\n            dispatch(getAllOrdersSuccess({ order, totalOrders, pendingOrders, completedOrders, totalPrice }));\r\n\r\n        } catch (err) {\r\n            const error = { ...err }.response\r\n            dispatch(getAllOrdersFailed(error));\r\n        }\r\n    }\r\n}\r\n///////////////////////////////////////////////////////////////\r\n\r\nexport const updateOrderStatusAdminInit = () => {\r\n    return {\r\n        type: actionTypes.UPDATE_ORDER_ADMIN_STATUS_INIT\r\n    }\r\n}\r\n\r\nexport const updateOrderStatusAdminSuccess = (res) => {\r\n    return {\r\n        type: actionTypes.UPDATE_ORDER_ADMIN_STATUS_SUCCESS,\r\n        response: res\r\n    }\r\n}\r\n\r\nexport const updateOrderStatusAdminFailed = (error) => {\r\n    return {\r\n        type: actionTypes.UPDATE_ORDER_ADMIN_STATUS_FAILED,\r\n        error\r\n    }\r\n}\r\n\r\n\r\nexport const updateOrderStatusAdmin = ({ status, _id }) => {\r\n    return async dispatch => {\r\n        try {\r\n            const res = await axios({\r\n                url: `/api/v1/orders/${_id}`,\r\n                method: 'PATCH',\r\n                data: { status }\r\n            })\r\n            dispatch(updateOrderStatusAdminSuccess(res.data))\r\n        } catch (err) {\r\n            dispatch(updateOrderStatusAdminSuccess(err.response.data))\r\n        }\r\n    }\r\n}\r\n////////////////////////////////////////////////////////////////////////\r\n\r\nexport const getOrderInit = () => {\r\n    return {\r\n        type: actionTypes.GET_ORDER_INIT\r\n    }\r\n}\r\n\r\nexport const getOrderSuccess = (order) => {\r\n    return {\r\n        type: actionTypes.GET_ORDER_SUCCESS,\r\n        order\r\n    }\r\n}\r\n\r\nexport const getOrderFailed = error => {\r\n    return {\r\n        type: actionTypes.GET_ORDER_SUCCESS,\r\n        error\r\n    }\r\n}\r\n\r\n\r\nexport const getOrder = (id) => {\r\n    return async dispatch => {\r\n        dispatch(getOrderInit())\r\n        try {\r\n            const res = await axios({\r\n                url: `/api/v1/orders/${id}`,\r\n                method: 'get',\r\n            })\r\n\r\n            let order;\r\n\r\n            let customOrders = [];\r\n\r\n            res.data.order.customOrders.map(el => {\r\n                customOrders.push({\r\n                    _id: {\r\n                        ingredients: el.ingredients,\r\n                        title: el.name,\r\n                        foodType: el.foodType,\r\n                        _id: el._id,\r\n                        photo: el.photo,\r\n                        price: el.price,\r\n                    },\r\n                    items: parseInt(el.items),\r\n                })\r\n                return customOrders;\r\n            })\r\n\r\n            order = {\r\n                ...res.data.order,\r\n                orders: [...customOrders, ...res.data.order.menuOrders],\r\n                customOrders: null,\r\n                menuOrders: null,\r\n            }\r\n            dispatch(getOrderSuccess(order))\r\n\r\n        } catch (err) {\r\n            dispatch(getOrderFailed(err.response.data))\r\n        }\r\n    }\r\n}\r\n\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst ListItem = props => {\r\n    return (\r\n        <Link to={props.to ? props.to : '#'} className={`list__item ${props.className}`} style={{ listStyle: 'none' }} >\r\n            {props.children}\r\n        </Link>\r\n    )\r\n}\r\n\r\nexport default ListItem\r\n","import React from 'react'\r\n\r\nconst StatusCard = props => {\r\n    return (\r\n        <div className={`card__status ${props.className}`}>\r\n            <h2>{props.heading}</h2>\r\n            <p>{props.value}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default StatusCard\r\n"],"sourceRoot":""}